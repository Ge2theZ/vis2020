var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.066,1,0.685]],["body/components/AppComponent.html",[0,0.112,1,1.221,2,1.291,3,0.328,4,0.289,5,1.072,6,1.072,7,1.072,8,1.072,9,0.289,10,3.356,11,1.072,12,1.626,13,1.407,14,2.614,15,1.204,16,5.677,17,1.204,18,5.128,19,0.328,20,0.899,21,3.43,22,0.545,23,0.027,24,0.809,25,1.148,26,1.228,27,4.33,28,0.593,29,3.975,30,0.454,31,0.498,32,0.328,33,0.111,34,1.333,35,2.645,36,2.949,37,2.402,38,3.975,39,3.975,40,0.933,41,1.383,42,1.044,43,0.933,44,1.312,45,1.072,46,0.766,47,1.072,48,0.809,49,1.072,50,1.072,51,0.752,52,1.072,53,0.809,54,1.383,55,1.072,56,0.809,57,1.531,58,0.752,59,0.933,60,1.531,61,0.809,62,1.072,63,0.752,64,0.545,65,1.072,66,0.696,67,0.766,68,0.752,69,0.643,70,0.752,71,0.752,72,1.072,73,0.809,74,1.072,75,0.809,76,1.072,77,1.383,78,0.752,79,0.809,80,1.072,81,0.87,82,1.072,83,0.933,84,1.001,85,1.072,86,1.072,87,0.015,88,0.02,89,0.015]],["title/modules/AppModule.html",[90,2.24,91,2.24]],["body/modules/AppModule.html",[1,1.32,3,0.252,4,0.222,9,0.222,13,0.62,23,0.027,30,0.783,31,0.382,32,0.252,33,0.085,34,1.448,40,0.716,43,0.716,48,1.197,51,1.112,53,1.197,56,1.197,58,1.112,61,1.197,63,1.112,66,1.099,68,1.112,69,0.538,70,1.112,71,1.112,73,1.197,75,1.197,78,1.112,79,1.197,81,1.287,83,1.007,87,0.012,88,0.016,89,0.012,90,2.028,91,4.665,92,1.842,93,2.028,94,4.187,95,3.992,96,4.187,97,2.261,98,2.574,99,2.574,100,2.574,101,2.574,102,2.574,103,3.554,104,1.586,105,3.62,106,2.574,107,2.028,108,3.048,109,3.62,110,4.287,111,2.574,112,2.028,113,3.62,114,3.048,115,3.048,116,3.048,117,2.675,118,2.028,119,4.187,120,3.048,121,2.574,122,2.574,123,3.048,124,4.287,125,2.853,126,3.679,127,2.261,128,3.048,129,4.287,130,2.028,131,2.028,132,2.028,133,2.574,134,3.048,135,1.334,136,2.028,137,2.574,138,2.744,139,1.687,140,2.028,141,2.028,142,4.287,143,2.261,144,2.574,145,4.287,146,2.574,147,3.048,148,4.287,149,3.62,150,2.574,151,2.028,152,2.028,153,2.574,154,1.687,155,3.181,156,2.261,157,1.687,158,4.287,159,1.842]],["title/classes/AppPage.html",[33,0.094,160,2.498]],["body/classes/AppPage.html",[3,0.405,4,0.357,9,0.357,14,2.499,19,0.405,23,0.027,28,0.872,30,0.559,32,0.405,33,0.137,42,0.998,87,0.019,88,0.022,89,0.019,112,3.262,160,4.334,161,2.713,162,4.14,163,1.278,164,6.459,165,6.459,166,4.902,167,1.278,168,4.455,169,4.902,170,2.963,171,1.932,172,4.902,173,4.902,174,3.262,175,4.902]],["title/modules/AppRoutingModule.html",[90,2.24,103,2.034]],["body/modules/AppRoutingModule.html",[0,0.129,3,0.352,4,0.31,9,0.31,23,0.027,30,0.765,31,0.535,32,0.352,33,0.119,34,1.543,58,1.014,59,1.001,63,1.014,66,0.94,68,1.014,69,0.672,70,1.014,71,1.014,78,1.014,87,0.016,88,0.021,89,0.016,92,2.577,97,3.164,103,3.241,109,3.601,113,4.528,117,2.904,118,2.838,119,4.954,126,3.979,131,2.838,132,2.838,133,3.601,136,2.838,137,3.601,138,3.247,139,2.36,140,2.838,141,2.838,151,2.838,152,2.838,176,4.264,177,4.264,178,3.904,179,5.363,180,1.511,181,2.36,182,6.647,183,4.264,184,3.979,185,4.264,186,4.264,187,5.363,188,4.264,189,4.264,190,4.264,191,4.264,192,4.264,193,4.264]],["title/components/BarGraphComponent.html",[0,0.066,48,0.685]],["body/components/BarGraphComponent.html",[0,0.083,1,0.472,2,0.884,3,0.191,4,0.169,5,0.625,6,0.625,7,0.625,8,0.625,9,0.169,11,0.625,12,1.526,13,1.299,15,0.824,17,0.824,19,0.191,20,0.615,22,0.76,23,0.027,24,0.862,25,1.223,26,1.309,28,0.927,30,0.539,31,0.291,32,0.191,33,0.065,34,0.824,40,0.995,41,0.946,42,0.714,43,0.544,44,1.11,45,0.625,46,0.758,47,0.625,48,0.962,49,1.369,50,0.625,51,0.438,52,0.625,53,0.472,54,0.946,55,0.625,56,0.472,57,1.142,58,0.438,59,0.544,60,1.142,61,0.472,62,0.625,63,0.438,64,0.817,65,0.625,66,0.406,67,0.524,68,0.438,69,0.44,70,0.438,71,0.438,72,0.625,73,0.472,74,0.625,75,0.472,76,0.625,77,0.946,78,0.438,79,0.472,80,0.625,81,0.507,82,0.625,83,0.544,84,1.066,85,0.625,86,0.625,87,0.009,88,0.013,89,0.009,159,2.855,163,0.768,167,1.034,171,1.563,180,0.821,194,1.957,195,0.946,196,1.142,197,2.818,198,4.235,199,3.509,200,2.11,201,4.235,202,4.235,203,4.235,204,4.235,205,4.235,206,4.724,207,2.963,208,1.274,209,3.509,210,2.121,211,2.027,212,4.235,213,0.438,214,1.72,215,1.924,216,1.835,217,2.318,218,1.142,219,1.066,220,2.318,221,2.318,222,2.318,223,2.318,224,1.034,225,3.509,226,4.724,227,2.318,228,2.318,229,2.318,230,3.509,231,2.318,232,1.957,233,2.318,234,2.318,235,3.553,236,2.318,237,1.72,238,2.963,239,2.963,240,2.963,241,2.963,242,2.335,243,2.963,244,2.963,245,2.963,246,2.818,247,2.963,248,3.989,249,2.963,250,3.509,251,2.963,252,3.509,253,2.963,254,1.332,255,3.509,256,2.963,257,3.509,258,2.963,259,3.509,260,2.963,261,3.509,262,2.955,263,3.509,264,3.505,265,3.509,266,3.509,267,3.509,268,3.509,269,2.408,270,3.509,271,2.318,272,2.318,273,2.614,274,1.542,275,1.72,276,1.542,277,1.72,278,0.88,279,2.318,280,2.159,281,3.509,282,3.509,283,2.318,284,4.235,285,2.318,286,3.142,287,2.318,288,3.509,289,3.509,290,3.509,291,3.509,292,4.235,293,5.34,294,2.963,295,4.235,296,4.235,297,2.963,298,3.509,299,3.509,300,3.142,301,3.509,302,1.542,303,2.318,304,2.318,305,3.576,306,2.318,307,2.318,308,0.944,309,1.957,310,2.318,311,2.318,312,1.72,313,1.72,314,1.542]],["title/interfaces/Breadcrumb.html",[315,1.193,316,2.24]],["body/interfaces/Breadcrumb.html",[0,0.095,3,0.302,4,0.266,9,0.266,12,0.858,13,0.744,15,0.858,17,0.858,19,0.302,20,0.851,22,0.666,23,0.027,24,1.265,30,0.69,31,0.458,32,0.302,33,0.102,46,0.991,51,0.691,59,1.14,67,0.725,69,0.609,87,0.014,88,0.019,89,0.014,104,1.47,135,1.6,180,1.295,184,4.044,195,0.986,196,1.309,208,0.986,215,2.22,216,1.803,224,0.8,278,1.388,280,2.779,315,1.295,316,4.218,317,2.209,318,2.712,319,4.956,320,2.933,321,3.087,322,4.099,323,3.087,324,2.209,325,2.712,326,2.712,327,1.864,328,3.087,329,3.087,330,3.087,331,3.087,332,4.099,333,3.087,334,3.087,335,3.652,336,3.087,337,3.087,338,3.087,339,3.087,340,3.087,341,3.087,342,3.087,343,3.087,344,3.087,345,3.087,346,3.087,347,4.099,348,2.712,349,3.087,350,4.602,351,4.099,352,2.432,353,2.712,354,3.087,355,3.087,356,4.602,357,3.087,358,3.087,359,3.087,360,4.602,361,3.087,362,3.087,363,3.087,364,3.087,365,3.087,366,3.087,367,3.087]],["title/components/BreadcrumbComponent.html",[0,0.066,51,0.637]],["body/components/BreadcrumbComponent.html",[0,0.092,1,0.557,2,0.999,3,0.226,4,0.199,5,0.738,6,0.738,7,0.738,8,0.738,9,0.199,11,0.738,12,1.562,13,1.354,15,0.932,17,0.932,19,0.226,20,0.695,22,0.746,23,0.027,24,0.808,25,1.479,26,1.583,28,0.847,30,0.621,31,0.343,32,0.226,33,0.076,34,0.932,40,0.642,41,1.07,42,0.808,43,0.642,44,1.121,45,0.738,46,0.965,47,0.738,48,0.557,49,0.738,50,0.738,51,0.969,52,0.738,53,0.557,54,1.07,55,0.738,56,0.557,57,1.259,58,0.517,59,1.097,60,1.259,61,0.557,62,0.738,63,0.517,64,0.375,65,0.738,66,0.479,67,0.812,68,0.517,69,0.682,70,0.517,71,0.517,72,0.738,73,0.557,74,0.738,75,0.557,76,0.738,77,1.07,78,0.517,79,0.557,80,0.738,81,0.599,82,0.738,83,0.642,84,0.689,85,0.738,86,0.738,87,0.01,88,0.015,89,0.01,104,1.578,135,1.198,163,0.868,167,0.599,180,0.969,184,4.035,195,1.07,196,1.259,208,1.382,213,0.517,214,2.03,215,2.311,216,1.936,218,0.738,219,0.689,224,0.868,242,2.641,278,1.039,280,2.381,315,0.969,316,4.228,318,2.03,319,4.715,320,3.096,321,2.31,322,3.351,323,2.31,324,1.653,325,2.03,326,2.03,327,1.395,328,3.351,329,3.943,330,3.943,331,3.943,332,4.326,333,3.943,334,3.943,335,3.536,336,2.31,337,2.31,338,2.31,339,2.31,340,2.31,341,2.31,342,2.31,343,2.31,344,2.31,345,2.31,346,2.31,347,3.351,348,2.03,349,2.31,350,3.943,351,3.351,352,1.82,353,2.03,354,2.31,355,2.31,356,3.943,357,2.31,358,2.31,359,2.31,360,3.943,361,2.31,362,2.31,363,2.31,364,2.31,365,2.31,366,2.31,367,2.31,368,3.968,369,2.736,370,2.736,371,2.736,372,2.736,373,3.968,374,2.736,375,2.31,376,2.31,377,2.736,378,4.593,379,4.67,380,4.79,381,2.736,382,1.82,383,1.653,384,1.514,385,2.736]],["title/components/CoverCardComponent.html",[0,0.066,53,0.685]],["body/components/CoverCardComponent.html",[0,0.088,1,0.518,2,0.947,3,0.21,4,0.185,5,1.207,6,0.686,7,0.686,8,0.686,9,0.185,11,0.686,12,1.547,13,1.334,15,0.883,17,0.883,19,0.21,20,0.659,21,1.537,22,0.614,23,0.027,25,0.734,26,0.786,28,0.877,30,0.603,31,0.319,32,0.21,33,0.071,34,0.883,35,1.692,36,2.791,37,3.549,40,0.597,41,1.015,42,0.766,43,0.597,44,1.083,45,0.686,46,0.739,47,0.686,48,0.518,49,0.686,50,0.686,51,0.481,52,0.686,53,1.007,54,1.645,55,0.686,56,0.518,57,1.207,58,0.481,59,0.597,60,1.207,61,0.518,62,0.686,63,0.481,64,0.836,65,0.686,66,0.446,67,0.739,68,0.481,69,0.62,70,0.481,71,0.481,72,0.686,73,0.518,74,0.686,75,0.518,76,0.686,77,1.015,78,0.481,79,0.518,80,0.686,81,0.556,82,0.686,83,0.597,84,0.64,85,0.686,86,0.686,87,0.01,88,0.014,89,0.01,125,3.991,127,4.45,159,2.705,163,0.823,167,1.155,171,0.841,180,0.901,195,1.015,196,1.207,208,1.334,210,2.273,213,0.481,214,1.887,215,2.252,216,1.892,218,0.686,219,0.64,224,1.155,237,1.887,242,1.692,246,1.692,254,1.428,269,1.918,273,2.082,278,0.965,280,1.918,302,2.503,308,1.532,313,1.887,327,1.297,375,4.459,376,2.147,380,2.147,382,2.503,383,1.537,386,4.45,387,2.147,388,3.456,389,4.477,390,3.762,391,4.477,392,4.947,393,4.178,394,4.947,395,4.947,396,3.806,397,2.543,398,1.7,399,2.543,400,2.543,401,1.537,402,2.543,403,2.543,404,2.543,405,2.543,406,3.762,407,3.78,408,3.762,409,3.762,410,3.762,411,3.762,412,3.762,413,3.762,414,3.177,415,2.791,416,2.543,417,1.537,418,2.147,419,2.543,420,4.477,421,2.543,422,2.543,423,2.543,424,2.543,425,2.543,426,3.762,427,3.762,428,3.762,429,3.762,430,3.762,431,3.177,432,3.762,433,3.177,434,3.762,435,2.503,436,2.791,437,3.762,438,3.762,439,3.177,440,2.543,441,4.459,442,2.147,443,2.147,444,3.177,445,2.791,446,3.918,447,4.947,448,2.979,449,4.357,450,2.543,451,3.762,452,2.543,453,3.322,454,1.887,455,2.543,456,2.147,457,2.543,458,2.543,459,1.2,460,3.762,461,2.543,462,2.543,463,2.543,464,2.147,465,2.543,466,2.543,467,3.762,468,2.543,469,1.887]],["title/classes/CoverCarousel.html",[33,0.094,398,1.278]],["body/classes/CoverCarousel.html",[3,0.376,4,0.331,9,0.331,19,0.376,20,0.978,22,0.886,23,0.027,24,1.136,28,0.965,30,0.519,32,0.376,33,0.127,46,0.679,64,0.944,87,0.017,88,0.021,89,0.017,161,2.517,213,0.86,218,1.227,219,1.145,398,2.119,470,3.841,471,4.019,472,6.298,473,4.019,474,4.549,475,2.741,476,4.549,477,4.549,478,4.549,479,4.549,480,4.549,481,4.549,482,4.549,483,4.549,484,3.841,485,4.549,486,4.549,487,4.549,488,4.549,489,4.549,490,4.549]],["title/components/CoverCarouselComponent.html",[0,0.066,56,0.685]],["body/components/CoverCarouselComponent.html",[0,0.103,1,0.683,2,1.154,3,0.277,4,0.244,5,0.905,6,0.905,7,0.905,8,0.905,9,0.244,11,0.905,12,1.599,13,1.382,15,1.076,17,1.076,19,0.277,22,0.628,23,0.027,24,0.933,28,0.837,30,0.523,31,0.421,32,0.277,33,0.094,34,1.076,35,2.233,37,2.769,40,0.788,41,1.236,42,0.933,43,0.788,44,1.227,45,0.905,46,0.684,47,0.905,48,0.683,49,0.905,50,0.905,51,0.635,52,0.905,53,0.683,54,1.727,55,0.905,56,1.142,57,1.407,58,0.635,59,0.788,60,1.407,61,0.683,62,0.905,63,0.635,64,0.628,65,0.905,66,0.588,67,0.684,68,0.635,69,0.575,70,0.635,71,0.635,72,0.905,73,0.683,74,0.905,75,0.683,76,0.905,77,1.236,78,0.635,79,0.683,80,0.905,81,0.734,82,0.905,83,0.788,84,0.845,85,0.905,86,0.905,87,0.013,88,0.018,89,0.013,125,3.906,163,1.003,167,0.734,174,2.233,195,1.236,196,1.407,208,1.512,210,2.769,211,1.981,213,0.987,224,1.003,264,2.49,273,2.888,308,2.284,378,2.834,382,2.233,383,3.154,386,4.356,388,2.028,398,1.981,407,2.834,417,2.028,441,2.834,442,2.834,446,2.49,448,2.233,449,3.4,453,2.49,454,2.49,459,1.583,469,3.4,491,2.028,492,3.154,493,3.473,494,3.049,495,5.87,496,4.583,497,3.356,498,2.834,499,5.608,500,4.583,501,3.356,502,3.356,503,3.356,504,3.356,505,4.583,506,3.356,507,3.87,508,4.583,509,4.583,510,2.028,511,3.356,512,3.356,513,3.356,514,3.356,515,3.356,516,4.583]],["title/interfaces/CoverCarouselStore.html",[315,1.193,517,2.034]],["body/interfaces/CoverCarouselStore.html",[3,0.182,4,0.161,9,0.161,14,1.126,19,0.182,20,0.593,22,0.719,23,0.027,24,1.314,30,0.658,31,0.277,32,0.182,33,0.062,42,0.45,44,0.9,64,0.772,67,0.958,69,0.809,87,0.013,88,0.013,89,0.008,104,0.596,130,1.47,168,1.47,170,1.335,171,2.108,181,3.314,200,1.734,211,2.335,254,1.886,278,0.839,308,2.398,315,1.199,317,1.335,324,1.335,398,1.75,401,1.335,459,1.042,471,3.839,473,3.839,475,2.596,510,2.045,517,3.167,518,1.47,519,3.419,520,1.481,521,1.126,522,1.873,523,1.639,524,2.511,525,1.639,526,1.725,527,1.639,528,2.276,529,1.639,530,2.252,531,2.485,532,1.335,533,3.051,534,1.639,535,1.639,536,3.051,537,1.639,538,1.639,539,1.639,540,2.135,541,1.639,542,1.639,543,1.639,544,1.639,545,1.639,546,1.639,547,2.511,548,1.639,549,1.639,550,1.639,551,1.639,552,2.511,553,1.639,554,1.639,555,1.639,556,1.639,557,3.051,558,1.639,559,1.639,560,1.639,561,1.639,562,1.639,563,1.639,564,1.639,565,1.639,566,1.639,567,1.47,568,1.47,569,1.639,570,1.639,571,1.639,572,1.639,573,1.639,574,1.639,575,1.639,576,1.639,577,1.639,578,1.639,579,1.639,580,2.511,581,1.639,582,1.639,583,1.639,584,3.487,585,1.639,586,1.639,587,1.639,588,2.511,589,2.511,590,1.639,591,3.306,592,1.639,593,1.639,594,3.889,595,1.639,596,1.639,597,2.511,598,2.252,599,2.511,600,3.019,601,2.252,602,2.511,603,2.511,604,2.045,605,2.785,606,2.511,607,2.252,608,2.511,609,4.047,610,2.511,611,1.639,612,1.639,613,2.511,614,3.051,615,1.639,616,1.639,617,1.639,618,1.639,619,1.639,620,1.639,621,1.639,622,1.639,623,1.639,624,1.639,625,1.639,626,1.639,627,1.639,628,1.639,629,1.639,630,1.639,631,1.639,632,3.686,633,2.511,634,2.511,635,2.511,636,2.511,637,1.639,638,1.639,639,1.639,640,1.639,641,1.639,642,1.639,643,2.511,644,1.639,645,3.051,646,2.511,647,1.639,648,2.511,649,2.511,650,1.639,651,1.639,652,2.511,653,1.639,654,1.639,655,1.639,656,2.511,657,1.639,658,3.051,659,3.051,660,2.511,661,1.639,662,1.639,663,1.639,664,1.639,665,2.511,666,1.639,667,1.639,668,1.639]],["title/injectables/DataService.html",[104,0.908,520,1.474]],["body/injectables/DataService.html",[3,0.146,4,0.128,9,0.128,14,0.899,19,0.146,20,0.497,22,0.838,23,0.027,24,1.372,25,1.176,26,1.258,28,0.934,30,0.613,31,0.221,32,0.146,33,0.049,42,0.359,44,0.778,46,0.842,64,0.773,67,0.971,69,0.798,87,0.011,88,0.011,89,0.007,104,0.765,130,1.174,163,0.62,167,1.277,168,1.887,170,1.066,171,2.022,181,3.12,200,2.039,211,2.094,213,0.333,218,1.52,219,1.419,224,0.386,254,1.694,278,0.67,308,2.247,315,1.004,324,1.066,398,1.076,401,1.713,459,0.832,471,3.67,473,3.67,475,2.69,510,1.713,517,3.147,518,1.174,519,1.309,520,1.241,521,0.899,522,1.967,523,1.309,524,3.021,525,1.309,526,1.445,527,1.309,528,2.254,529,1.309,530,1.887,531,2.879,532,1.066,533,3.31,534,2.638,535,2.638,536,3.31,537,2.638,538,2.104,539,1.309,540,1.941,541,1.309,542,1.309,543,1.309,544,1.309,545,1.309,546,1.309,547,2.104,548,1.309,549,1.309,550,1.309,551,3.021,552,3.021,553,1.309,554,3.021,555,1.309,556,2.104,557,3.716,558,1.309,559,1.309,560,1.309,561,1.309,562,1.309,563,2.104,564,1.309,565,1.309,566,1.309,567,1.174,568,1.174,569,1.309,570,1.309,571,1.309,572,1.309,573,1.309,574,1.309,575,1.309,576,1.309,577,1.309,578,1.309,579,1.309,580,2.104,581,1.309,582,1.309,583,1.309,584,3.171,585,1.309,586,2.104,587,1.309,588,2.104,589,2.104,590,1.309,591,2.969,592,2.104,593,3.31,594,3.535,595,1.309,596,1.309,597,2.104,598,1.887,599,2.104,600,2.772,601,1.887,602,2.104,603,2.104,604,1.713,605,2.461,606,2.104,607,1.887,608,2.104,609,3.716,610,3.021,611,1.309,612,1.309,613,2.104,614,2.638,615,1.309,616,1.309,617,1.309,618,1.309,619,1.309,620,1.309,621,1.309,622,1.309,623,1.309,624,1.309,625,1.309,626,1.309,627,1.309,628,1.309,629,1.309,630,1.309,631,1.309,632,3.31,633,2.104,634,3.021,635,2.104,636,2.104,637,1.309,638,1.309,639,1.309,640,2.104,641,1.309,642,1.309,643,2.104,644,1.309,645,2.638,646,2.104,647,1.309,648,2.104,649,2.104,650,1.309,651,1.309,652,2.104,653,1.309,654,1.309,655,1.309,656,2.104,657,1.309,658,2.638,659,2.638,660,2.104,661,1.309,662,1.309,663,2.104,664,1.309,665,2.104,666,1.309,667,2.104,668,2.104,669,1.174,670,2.835,671,2.835,672,2.835,673,2.835,674,2.835,675,2.835,676,3.555,677,2.835,678,2.835,679,2.835,680,2.835,681,1.764,682,2.835,683,1.764,684,1.764,685,1.764,686,1.764,687,1.764,688,1.764,689,1.764,690,1.764,691,1.764,692,1.764,693,1.764,694,1.764,695,1.764,696,1.764,697,1.764,698,1.764,699,1.764,700,1.764,701,1.764,702,1.764,703,1.764]],["title/components/FaqViewComponent.html",[0,0.066,58,0.637]],["body/components/FaqViewComponent.html",[0,0.086,1,0.494,2,0.915,3,0.2,4,0.177,5,0.655,6,0.655,7,0.655,8,0.655,9,0.377,11,0.655,12,1.537,13,1.325,15,0.853,17,0.853,19,0.2,23,0.025,28,0.543,30,0.497,31,0.304,32,0.2,33,0.068,34,1.276,40,0.57,41,0.98,42,0.74,43,0.57,44,1.058,45,0.655,46,0.543,47,0.655,48,0.494,49,0.655,50,0.655,51,0.459,52,0.655,53,0.494,54,1.466,55,0.655,56,0.494,57,1.175,58,0.914,59,1.417,60,1.175,61,0.494,62,0.655,63,0.459,64,0.812,65,0.655,66,0.425,67,0.722,68,0.459,69,0.606,70,0.459,71,0.459,72,0.655,73,0.494,74,0.655,75,0.494,76,0.655,77,0.98,78,0.459,79,0.494,80,0.655,81,0.531,82,0.655,83,0.57,84,0.611,85,0.655,86,0.655,87,0.009,88,0.014,89,0.009,151,2.898,152,2.898,163,0.795,167,0.531,195,0.98,196,1.175,208,1.304,211,2.441,213,0.824,224,0.795,254,1.38,262,2.011,269,2.953,414,4.083,464,4.083,492,2.196,510,2.196,540,1.48,601,2.418,607,3.217,704,1.907,705,1.615,706,4.032,707,3.231,708,2.696,709,2.05,710,2.428,711,3.634,712,3.634,713,3.634,714,4.835,715,6.032,716,3.634,717,3.634,718,5.434,719,4.892,720,4.835,721,4.697,722,3.634,723,3.634,724,3.069,725,3.634,726,3.634,727,4.835,728,4.835,729,3.634,730,3.634,731,4.835,732,3.634,733,3.634,734,3.069,735,3.634,736,3.634,737,3.634,738,4.835,739,3.634,740,3.634,741,3.634,742,3.634,743,3.634,744,3.634,745,3.069,746,3.069,747,3.634,748,3.634,749,6.032,750,3.634,751,3.634,752,3.634,753,4.835,754,3.634,755,3.634,756,3.634,757,3.634,758,3.634,759,3.069,760,3.634,761,3.634,762,3.634,763,3.634,764,3.634,765,3.634,766,3.069,767,3.634,768,3.634,769,4.835,770,3.634,771,3.634,772,3.634,773,3.634,774,3.634,775,2.696,776,3.634,777,3.634,778,4.835,779,2.418,780,3.634,781,3.634,782,3.634,783,3.634,784,3.069,785,3.634,786,3.634,787,3.634,788,3.634,789,3.634,790,3.634,791,3.634,792,3.501,793,4.835,794,2.696,795,3.634,796,3.634,797,3.634,798,3.634,799,3.634,800,3.634,801,3.634,802,3.634,803,3.634,804,3.634,805,3.634,806,2.428,807,3.634,808,2.418,809,4.083,810,3.634,811,3.634,812,4.083,813,4.835,814,3.634,815,3.634,816,3.634,817,3.069,818,3.634,819,3.634,820,3.634,821,3.634,822,3.634,823,2.418,824,2.428]],["title/components/FooterComponent.html",[0,0.066,61,0.685]],["body/components/FooterComponent.html",[0,0.111,1,0.796,2,1.278,3,0.323,4,0.285,5,1.055,6,1.055,7,1.055,8,1.055,9,0.285,11,1.055,12,1.624,13,1.405,15,1.192,17,1.192,19,0.323,23,0.026,28,0.758,30,0.446,31,0.49,32,0.323,33,0.109,34,1.192,40,0.919,41,1.369,42,1.033,43,0.919,44,1.304,45,1.055,46,0.758,47,1.055,48,0.796,49,1.055,50,1.055,51,0.74,52,1.055,53,0.796,54,1.369,55,1.055,56,0.796,57,1.519,58,0.74,59,0.919,60,1.519,61,1.214,62,1.055,63,0.74,64,0.536,65,1.055,66,0.685,67,0.758,68,0.74,69,0.636,70,0.74,71,0.74,72,1.055,73,0.796,74,1.055,75,0.796,76,1.055,77,1.369,78,0.74,79,0.796,80,1.055,81,0.856,82,1.055,83,0.919,84,0.985,85,1.055,86,1.055,87,0.015,88,0.019,89,0.015,163,1.11,167,0.856,174,3.377,195,1.369,196,1.519,208,1.608,213,1.065,224,1.11,766,4.285,825,3.303,826,5.961,827,5.633,828,5.075,829,3.911,830,3.911,831,5.075,832,5.075]],["title/classes/Game.html",[33,0.094,64,0.462]],["body/classes/Game.html",[3,0.285,4,0.251,9,0.251,19,0.469,20,0.819,22,0.934,23,0.027,24,1.348,28,1.017,32,0.285,33,0.096,46,0.885,64,0.813,67,0.791,69,0.664,87,0.013,88,0.018,89,0.013,161,1.912,163,1.023,167,0.756,171,1.546,213,0.653,218,1.261,219,1.762,254,2.011,314,2.299,401,2.088,475,2.49,598,3.525,833,2.917,834,4.473,835,5.297,836,5.297,837,5.297,838,5.297,839,5.297,840,5.297,841,5.297,842,5.297,843,4.473,844,4.674,845,3.455,846,3.455,847,3.455,848,3.455,849,3.455,850,3.455,851,3.455,852,3.455,853,3.455,854,3.455,855,3.455,856,3.455,857,3.455,858,3.455,859,3.455,860,3.455,861,3.455,862,3.455,863,3.455,864,3.455,865,3.455,866,3.455,867,3.455,868,3.455,869,4.674,870,3.455,871,3.455,872,3.455,873,3.455,874,3.455,875,2.563,876,3.455,877,2.917,878,3.455,879,3.455,880,3.455,881,3.455,882,3.455,883,3.455,884,3.455,885,2.563,886,3.455,887,3.455,888,3.455,889,3.455,890,3.455,891,3.455,892,3.455,893,3.455,894,3.455,895,3.455,896,3.455,897,3.455,898,3.455,899,3.455,900,3.455,901,3.455]],["title/components/GameDetailsComponent.html",[0,0.066,63,0.637]],["body/components/GameDetailsComponent.html",[0,0.076,1,0.41,2,0.793,3,0.166,4,0.147,5,0.544,6,0.544,7,0.544,8,0.544,9,0.147,11,0.544,12,1.493,13,1.286,15,0.74,17,0.74,19,0.166,20,0.552,22,0.723,23,0.027,25,0.582,26,0.623,28,0.9,30,0.602,31,0.253,32,0.166,33,0.056,34,0.74,35,1.341,36,1.495,37,1.218,40,0.473,41,0.85,42,0.642,43,0.473,44,0.96,45,0.544,46,0.711,47,0.544,48,0.41,49,0.544,50,0.544,51,0.381,52,0.544,53,0.41,54,0.85,55,0.544,56,0.41,57,1.047,58,0.381,59,0.473,60,1.047,61,0.41,62,0.544,63,0.83,64,0.898,65,0.544,66,0.353,67,0.655,68,0.381,69,0.55,70,0.381,71,0.381,72,0.544,73,0.41,74,0.544,75,0.41,76,0.544,77,0.85,78,0.381,79,0.41,80,0.544,81,0.441,82,0.544,83,0.473,84,0.793,85,0.544,86,0.544,87,0.008,88,0.012,89,0.008,104,1.184,131,4.058,132,4.058,154,1.115,155,2.338,156,1.495,157,1.115,163,0.69,167,1.042,171,1.857,180,0.714,195,0.85,196,1.047,197,1.341,200,2.128,208,1.184,213,0.381,215,2.149,216,1.745,218,0.544,219,0.507,224,1.105,246,1.341,254,1.196,269,2.926,276,1.341,278,0.765,280,1.979,302,2.097,305,4.263,320,2.652,327,1.028,335,2.345,348,3.533,352,3.169,353,1.495,382,1.341,383,1.904,384,2.794,431,2.661,433,2.661,435,3.36,436,4.051,439,5.019,444,2.661,445,2.338,446,1.495,448,1.341,449,2.338,453,1.495,454,1.495,459,1.487,469,1.495,484,3.277,507,1.702,600,2.429,604,3.299,605,3.299,704,2.67,792,3.469,902,1.702,903,3.881,904,3.152,905,3.881,906,3.881,907,3.881,908,3.881,909,3.36,910,3.36,911,4.388,912,4.388,913,4.388,914,4.388,915,1.115,916,3.152,917,2.015,918,2.015,919,2.015,920,2.015,921,2.015,922,2.015,923,2.015,924,2.015,925,2.015,926,2.015,927,2.015,928,2.015,929,1.341,930,2.015,931,2.015,932,1.702,933,2.015,934,2.015,935,3.152,936,3.152,937,3.152,938,3.152,939,2.015,940,2.015,941,3.881,942,3.881,943,3.277,944,3.881,945,3.152,946,3.152,947,4.388,948,2.015,949,2.015,950,2.015,951,3.881,952,3.152,953,2.015,954,3.152,955,2.015,956,2.015,957,3.881,958,2.015,959,2.015,960,3.152,961,2.015,962,2.015,963,2.015,964,2.015,965,2.015,966,2.015,967,2.015,968,2.015,969,2.015,970,2.015,971,3.152,972,3.152,973,3.152,974,4.388,975,3.152,976,5.049,977,3.152,978,3.152,979,3.152,980,3.152,981,3.152,982,2.661,983,3.152,984,3.152,985,3.152,986,3.152,987,3.152,988,3.152,989,3.152,990,2.652,991,4.388,992,3.256,993,4.263,994,5.049,995,3.152,996,3.152,997,3.152,998,3.152,999,2.015,1000,2.015,1001,2.015,1002,3.152,1003,2.015,1004,2.015,1005,2.015]],["title/components/GenreCarouselComponent.html",[0,0.066,66,0.59]],["body/components/GenreCarouselComponent.html",[0,0.098,1,0.627,2,1.088,3,0.255,4,0.224,5,0.831,6,0.831,7,0.831,8,0.831,9,0.224,11,0.831,12,1.584,13,1.368,15,1.015,17,1.015,19,0.412,20,0.757,21,1.863,22,0.781,23,0.027,24,1.101,25,1.248,26,1.335,28,0.905,30,0.569,31,0.387,32,0.357,33,0.086,34,1.015,40,0.724,41,1.165,42,0.88,43,0.724,44,1.183,45,0.831,46,0.85,47,0.831,48,0.627,49,0.831,50,0.831,51,0.583,52,0.831,53,0.627,54,1.165,55,0.831,56,0.627,57,1.346,58,0.583,59,0.724,60,1.346,61,0.627,62,0.831,63,0.583,64,0.423,65,0.831,66,0.948,67,0.938,68,0.583,69,0.542,70,0.583,71,0.583,72,0.831,73,0.627,74,0.831,75,0.627,76,0.831,77,1.165,78,0.583,79,0.627,80,0.831,81,0.674,82,0.831,83,0.724,84,0.776,85,0.831,86,0.831,87,0.012,88,0.017,89,0.012,104,1.717,117,2.917,135,1.35,138,3.423,139,3.423,163,0.945,167,1.092,171,1.02,195,1.165,196,1.346,200,1.429,208,1.458,211,2.301,213,0.583,218,1.346,219,1.256,224,1.092,315,1.092,388,2.611,398,2.053,417,1.863,491,1.863,492,2.611,493,3.32,494,2.875,704,2.708,915,1.706,1006,3.702,1007,3.649,1008,3.649,1009,3.649,1010,3.649,1011,3.082,1012,3.649,1013,3.082,1014,3.206,1015,3.082,1016,2.603,1017,2.603,1018,3.015,1019,2.051,1020,2.287,1021,2.287,1022,2.287,1023,2.287,1024,2.611,1025,1.863,1026,2.603,1027,2.287,1028,2.287,1029,2.287,1030,2.287,1031,2.603,1032,2.603,1033,2.287,1034,2.287]],["title/components/GenrePublisherViewComponent.html",[0,0.066,68,0.637]],["body/components/GenrePublisherViewComponent.html",[0,0.09,1,0.542,2,0.979,3,0.22,4,0.194,5,0.718,6,0.718,7,0.718,8,0.718,9,0.194,11,0.718,12,1.556,13,1.343,15,0.914,17,0.914,19,0.22,20,0.682,22,0.816,23,0.026,24,1.029,25,1.123,26,1.202,28,0.933,30,0.662,31,0.334,32,0.22,33,0.074,34,0.914,40,0.625,41,1.049,42,0.792,43,0.625,44,1.106,45,0.718,46,0.686,47,0.718,48,0.542,49,0.718,50,0.718,51,0.503,52,0.718,53,0.542,54,1.049,55,0.718,56,0.542,57,1.24,58,0.503,59,0.625,60,1.24,61,0.542,62,0.718,63,0.503,64,0.693,65,0.718,66,0.466,67,0.985,68,0.956,69,0.869,70,0.503,71,0.503,72,0.718,73,0.542,74,0.718,75,0.542,76,0.718,77,1.049,78,0.503,79,0.542,80,0.718,81,0.582,82,0.718,83,0.625,84,0.67,85,0.718,86,0.718,87,0.01,88,0.015,89,0.01,104,1.636,117,2.982,135,1.165,138,3.731,153,2.247,154,1.473,155,2.886,156,1.975,157,1.473,163,0.851,167,0.582,180,0.943,195,1.049,196,1.24,200,2.067,208,1.364,213,0.503,215,2.512,216,2.04,218,0.718,219,0.67,224,0.851,269,1.983,274,1.771,302,2.588,320,3.251,327,1.357,335,3.251,384,3.292,415,2.886,435,3.365,459,1.835,521,1.357,704,2.767,705,1.771,706,2.886,707,3.411,708,2.886,792,3.777,875,1.975,885,2.886,909,3.739,910,3.739,915,1.473,990,3.056,992,3.752,993,4.27,1019,1.771,1024,1.608,1025,1.608,1035,3.89,1036,2.662,1037,2.662,1038,2.662,1039,2.662,1040,2.662,1041,2.662,1042,2.662,1043,2.662,1044,2.662,1045,2.662,1046,2.247,1047,2.662,1048,2.662,1049,4.27,1050,5.057,1051,3.285]],["title/classes/GenreSalesPerYear.html",[33,0.094,522,1.863]],["body/classes/GenreSalesPerYear.html",[3,0.401,4,0.353,9,0.353,19,0.401,20,1.017,22,0.883,23,0.026,24,1.182,28,0.961,32,0.401,33,0.135,67,0.928,87,0.019,88,0.022,89,0.019,161,2.686,219,1.714,254,2.359,269,3.167,475,2.721,522,3.213,1052,4.099,1053,6.213,1054,4.854,1055,4.854,1056,4.854,1057,4.854]],["title/components/GraphViewComponent.html",[0,0.066,70,0.637]],["body/components/GraphViewComponent.html",[0,0.111,1,0.808,2,1.29,3,0.328,4,0.289,5,1.07,6,1.07,7,1.07,8,1.07,9,0.289,11,1.07,12,1.626,13,1.407,15,1.203,17,1.203,23,0.026,28,0.592,30,0.453,31,0.498,32,0.328,33,0.111,34,1.408,40,0.932,41,1.382,42,1.043,43,0.932,44,1.312,45,1.07,46,0.765,47,1.07,48,0.808,49,1.07,50,1.07,51,0.75,52,1.07,53,0.808,54,1.382,55,1.07,56,0.808,57,1.53,58,0.75,59,0.932,60,1.53,61,0.808,62,1.07,63,0.75,64,0.544,65,1.07,66,0.695,67,0.765,68,0.75,69,0.642,70,1.133,71,0.75,72,1.07,73,0.808,74,1.07,75,0.808,76,1.07,77,1.382,78,0.75,79,0.808,80,1.07,81,0.868,82,1.07,83,0.932,84,1.6,85,1.07,86,1.07,87,0.015,88,0.02,89,0.015,117,2.416,118,3.409,213,1.073,383,2.398,384,2.196,443,3.351,704,2.243,705,2.64,706,3.801,707,4.209,708,3.801,709,3.351,812,3.351,1058,3.968]],["title/injectables/InteractionService.html",[396,2.24,520,1.474]],["body/injectables/InteractionService.html",[3,0.383,4,0.337,9,0.337,14,2.363,19,0.383,20,0.989,22,0.635,23,0.027,25,1.338,26,1.432,28,0.909,30,0.695,31,0.581,32,0.383,33,0.129,46,0.692,64,0.906,87,0.018,88,0.022,89,0.018,163,1.235,167,1.014,200,2.014,213,1.151,218,1.25,219,1.167,224,1.014,388,2.8,396,3.757,520,2.472,521,2.363,526,2.363,532,2.8,540,2.3,669,3.084,1059,3.913,1060,6.089,1061,5.646,1062,5.646,1063,5.646,1064,4.634,1065,4.768,1066,3.913,1067,4.634,1068,3.913,1069,4.634,1070,4.634,1071,4.634]],["title/components/MainContentComponent.html",[0,0.066,71,0.637]],["body/components/MainContentComponent.html",[0,0.11,1,0.791,2,1.272,3,0.321,4,0.283,5,1.048,6,1.048,7,1.048,8,1.048,9,0.283,11,1.048,12,1.623,13,1.404,15,1.187,17,1.187,19,0.321,23,0.026,28,0.755,30,0.444,31,0.487,32,0.321,33,0.108,34,1.549,40,0.913,41,1.363,42,1.029,43,0.913,44,1.301,45,1.048,46,0.755,47,1.048,48,0.791,49,1.048,50,1.048,51,0.735,52,1.048,53,0.791,54,1.363,55,1.048,56,0.791,57,1.515,58,0.735,59,0.913,60,1.515,61,0.791,62,1.048,63,0.735,64,0.533,65,1.048,66,0.681,67,0.755,68,0.735,69,0.634,70,0.735,71,1.124,72,1.048,73,0.791,74,1.048,75,0.791,76,1.048,77,1.363,78,0.735,79,0.791,80,1.048,81,0.85,82,1.048,83,0.913,84,0.979,85,1.048,86,1.048,87,0.015,88,0.019,89,0.015,136,3.737,163,1.106,167,0.85,174,3.363,195,1.363,196,1.515,208,1.604,213,1.062,224,1.106,704,2.459,1072,3.282,1073,5.616,1074,5.054,1075,3.887,1076,3.887]],["title/interfaces/MarketShareForGenrePerYearStore.html",[315,1.193,531,2.034]],["body/interfaces/MarketShareForGenrePerYearStore.html",[3,0.187,4,0.165,9,0.165,14,1.155,19,0.187,20,0.605,22,0.473,23,0.027,24,1.303,30,0.663,31,0.284,32,0.187,33,0.063,42,0.461,44,0.914,64,0.778,67,0.962,69,0.797,87,0.013,88,0.013,89,0.009,104,0.611,130,1.508,168,1.508,170,1.37,171,2.117,181,3.335,200,1.751,211,2.347,254,1.908,278,0.86,308,2.414,315,1.222,317,1.37,324,1.37,398,1.31,401,1.37,459,1.069,471,3.522,473,3.522,475,2.454,510,2.085,517,3.037,518,1.508,519,1.682,520,1.511,521,1.155,522,1.909,523,1.682,524,2.56,525,1.682,526,1.759,527,1.682,528,2.781,529,1.682,530,2.296,531,2.822,532,1.37,533,3.1,534,1.682,535,1.682,536,3.1,537,1.682,538,1.682,539,1.682,540,2.156,541,1.682,542,1.682,543,1.682,544,1.682,545,1.682,546,1.682,547,2.56,548,1.682,549,1.682,550,1.682,551,1.682,552,2.56,553,1.682,554,1.682,555,1.682,556,1.682,557,3.1,558,1.682,559,1.682,560,1.682,561,1.682,562,1.682,563,1.682,564,1.682,565,1.682,566,1.682,567,1.508,568,1.508,569,1.682,570,1.682,571,1.682,572,1.682,573,1.682,574,1.682,575,1.682,576,1.682,577,1.682,578,1.682,579,1.682,580,2.56,581,1.682,582,1.682,583,1.682,584,3.522,585,1.682,586,1.682,587,1.682,588,2.56,589,2.56,590,1.682,591,3.344,592,1.682,593,1.682,594,3.928,595,1.682,596,1.682,597,2.56,598,2.296,599,2.56,600,3.046,601,2.296,602,2.56,603,2.56,604,2.085,605,2.822,606,2.56,607,2.296,608,2.56,609,4.083,610,2.56,611,1.682,612,1.682,613,2.56,614,3.1,615,1.682,616,1.682,617,1.682,618,1.682,619,1.682,620,1.682,621,1.682,622,1.682,623,1.682,624,1.682,625,1.682,626,1.682,627,1.682,628,1.682,629,1.682,630,1.682,631,1.682,632,3.728,633,2.56,634,2.56,635,2.56,636,2.56,637,1.682,638,1.682,639,1.682,640,1.682,641,1.682,642,1.682,643,2.56,644,1.682,645,3.1,646,2.56,647,1.682,648,2.56,649,2.56,650,1.682,651,1.682,652,2.56,653,1.682,654,1.682,655,1.682,656,2.56,657,1.682,658,3.1,659,3.1,660,2.56,661,1.682,662,1.682,663,1.682,664,1.682,665,2.56,666,1.682,667,1.682,668,1.682]],["title/components/NavbarComponent.html",[0,0.066,73,0.685]],["body/components/NavbarComponent.html",[0,0.099,1,0.635,2,1.097,3,0.257,4,0.227,5,0.841,6,0.841,7,0.841,8,0.841,9,0.227,11,0.841,12,1.586,13,1.37,15,1.023,17,1.023,19,0.257,20,0.763,22,0.688,23,0.027,24,1.106,25,0.9,26,0.963,28,0.884,30,0.694,31,0.391,32,0.257,33,0.087,34,1.023,40,0.732,41,1.175,42,0.887,43,0.732,44,1.189,45,0.841,46,0.749,47,0.841,48,0.635,49,0.841,50,0.841,51,0.589,52,0.841,53,0.635,54,1.175,55,0.841,56,0.635,57,1.354,58,0.589,59,1.179,60,1.354,61,0.635,62,0.841,63,0.589,64,0.812,65,0.841,66,0.546,67,0.65,68,0.589,69,0.546,70,0.589,71,0.589,72,0.841,73,1.106,74,0.841,75,0.635,76,0.841,77,1.175,78,0.589,79,0.635,80,0.841,81,0.682,82,0.841,83,0.732,84,0.785,85,0.841,86,0.841,87,0.012,88,0.017,89,0.012,104,1.597,135,1.365,163,0.953,167,0.953,180,1.104,195,1.175,196,1.354,200,1.959,208,1.466,213,0.589,215,2.477,216,2.011,218,0.841,219,0.785,224,1.098,273,1.725,276,2.074,278,1.184,280,2.22,312,2.313,314,2.074,325,2.313,326,2.313,327,1.589,352,2.074,418,2.632,448,2.074,526,1.589,530,2.898,719,3.678,721,3.231,915,1.725,943,2.632,990,1.884,1077,2.632,1078,4.355,1079,5.02,1080,4.355,1081,5.02,1082,5.717,1083,5.02,1084,5.434,1085,4.355,1086,3.117,1087,3.117,1088,3.117,1089,3.117,1090,3.117,1091,4.355,1092,3.117,1093,3.117,1094,3.117,1095,3.117,1096,3.117,1097,3.117,1098,3.117,1099,3.117,1100,3.117,1101,3.117,1102,3.117,1103,3.117,1104,3.117,1105,3.117,1106,3.117,1107,3.117,1108,3.117,1109,4.355,1110,4.355,1111,4.355]],["title/injectables/NavigationService.html",[216,1.114,520,1.474]],["body/injectables/NavigationService.html",[3,0.298,4,0.262,9,0.262,14,1.839,19,0.298,20,0.843,22,0.825,23,0.027,24,1.357,25,1.563,26,1.673,28,0.97,30,0.618,31,0.452,32,0.298,33,0.101,46,0.898,64,0.88,67,0.862,69,0.724,87,0.014,88,0.018,89,0.014,163,1.053,167,1.317,171,1.592,200,2.294,213,1.024,216,1.592,218,1.623,219,1.515,224,1.185,319,4.285,456,4.063,520,2.107,521,1.839,526,1.839,532,2.18,540,2.521,669,2.4,1065,4.877,1066,3.046,1112,3.046,1113,4.812,1114,4.812,1115,4.812,1116,4.812,1117,4.812,1118,4.812,1119,4.812,1120,3.607,1121,3.607,1122,4.812,1123,3.607,1124,4.812,1125,4.812,1126,4.812,1127,5.414,1128,4.812,1129,3.607,1130,4.812,1131,3.607,1132,4.812,1133,3.607,1134,4.812,1135,3.607,1136,3.607,1137,3.607,1138,3.607,1139,3.607,1140,3.607,1141,3.607,1142,3.607,1143,3.607,1144,3.607,1145,3.607,1146,3.607,1147,3.607]],["title/components/PieChartComponent.html",[0,0.066,75,0.685]],["body/components/PieChartComponent.html",[0,0.092,1,0.558,2,1.001,3,0.226,4,0.199,5,0.739,6,0.739,7,0.739,8,0.739,9,0.199,11,0.739,12,1.562,13,1.348,15,0.933,17,0.933,19,0.386,20,0.697,22,0.778,23,0.027,24,0.809,25,1.148,26,1.228,28,0.913,30,0.648,31,0.344,32,0.328,33,0.076,34,0.933,40,1.098,41,1.072,42,0.809,43,0.644,44,1.122,45,0.739,46,0.698,47,0.739,48,0.558,49,0.739,50,0.739,51,0.518,52,0.739,53,0.558,54,1.072,55,0.739,56,0.558,57,1.261,58,0.518,59,0.644,60,1.261,61,0.558,62,0.739,63,0.518,64,0.838,65,0.739,66,0.48,67,0.593,68,0.518,69,0.586,70,0.518,71,0.518,72,0.739,73,0.558,74,0.739,75,1.044,76,1.674,77,1.072,78,0.518,79,0.558,80,0.739,81,0.6,82,0.739,83,0.644,84,0.69,85,0.739,86,0.739,87,0.011,88,0.015,89,0.011,104,1.531,135,1.2,157,3.436,163,0.87,167,0.6,180,0.971,181,2.838,195,1.072,196,1.261,197,1.824,200,2.123,208,1.383,210,2.402,211,1.775,213,0.518,215,1.117,216,0.907,218,0.739,219,0.69,224,0.87,262,2.2,269,2.026,273,2.838,274,1.824,275,2.034,276,1.824,277,2.034,278,1.041,286,2.949,300,2.034,308,1.905,384,2.2,475,1.117,540,1.619,568,1.824,584,1.824,591,1.824,600,1.517,604,1.657,605,1.657,721,2.034,775,2.034,792,2.826,823,1.824,909,3.111,915,1.517,982,2.315,1024,1.657,1025,1.657,1051,2.315,1148,4.606,1149,1.824,1150,3.356,1151,3.948,1152,3.356,1153,4.676,1154,4.676,1155,4.676,1156,4.676,1157,3.948,1158,2.742,1159,2.742,1160,2.742,1161,2.742,1162,2.742,1163,2.315,1164,2.315,1165,4.676,1166,3.975,1167,3.975,1168,2.742,1169,2.315,1170,2.315,1171,2.315,1172,2.315,1173,2.742,1174,2.742,1175,2.742,1176,2.742,1177,2.742,1178,2.742,1179,2.742,1180,2.742,1181,2.742,1182,2.742,1183,2.742,1184,2.742,1185,2.742,1186,2.742,1187,2.742,1188,2.742,1189,2.742,1190,2.742,1191,2.742,1192,2.742,1193,2.742,1194,2.742,1195,3.975,1196,2.742,1197,3.975,1198,2.742,1199,2.742,1200,2.742,1201,2.742,1202,2.742,1203,3.975,1204,3.975,1205,2.315,1206,2.315,1207,2.742,1208,2.315,1209,2.742,1210,2.742,1211,2.315]],["title/components/PublisherCarouselComponent.html",[0,0.066,78,0.637]],["body/components/PublisherCarouselComponent.html",[0,0.083,1,0.469,2,0.88,3,0.19,4,0.168,5,0.622,6,0.622,7,0.622,8,0.622,9,0.168,11,0.622,12,1.525,13,1.315,15,0.821,17,0.821,19,0.349,20,0.612,22,0.841,23,0.027,24,1.127,25,1.219,26,1.304,28,0.964,30,0.608,31,0.289,32,0.19,33,0.064,34,0.821,40,0.541,41,0.942,42,0.711,43,0.541,44,1.031,45,0.622,46,0.756,47,0.622,48,0.469,49,0.622,50,0.622,51,0.436,52,0.622,53,0.469,54,0.942,55,0.622,56,0.469,57,1.138,58,0.436,59,0.541,60,1.138,61,0.469,62,0.622,63,0.436,64,0.316,65,0.622,66,0.404,67,0.795,68,0.436,69,0.778,70,0.436,71,0.436,72,0.622,73,0.469,74,0.622,75,0.469,76,0.622,77,0.942,78,0.891,79,0.469,80,0.622,81,0.504,82,0.622,83,0.541,84,0.58,85,0.622,86,0.622,87,0.009,88,0.013,89,0.009,104,1.605,117,3.063,126,1.71,135,1.009,139,1.275,140,4.321,141,4.321,163,0.765,167,1.108,171,0.762,180,0.816,195,0.942,196,1.138,200,2.001,208,1.27,211,2.165,213,0.436,215,2.425,216,1.969,218,1.138,219,1.063,224,1.211,235,2.325,262,1.275,308,0.939,320,3.059,327,1.175,335,3.059,384,1.934,398,1.602,415,2.593,417,1.393,475,1.719,491,1.393,492,2.112,493,2.808,494,2.325,498,1.946,704,2.843,745,2.951,775,2.593,784,1.946,792,1.393,794,1.71,885,1.71,915,1.275,1006,3.132,1007,3.977,1008,2.951,1009,1.946,1014,2.593,1016,1.946,1017,1.946,1018,2.551,1019,1.534,1020,1.71,1021,1.71,1022,1.71,1023,1.71,1024,2.112,1025,1.393,1027,1.71,1028,1.71,1029,3.132,1030,1.71,1033,2.593,1034,1.71,1046,1.946,1212,3.564,1213,4.221,1214,4.221,1215,4.221,1216,4.221,1217,4.71,1218,3.977,1219,3.494,1220,4.221,1221,3.494,1222,2.305,1223,2.305,1224,3.494,1225,2.305,1226,2.305,1227,2.305,1228,2.305,1229,2.305,1230,2.305,1231,2.305,1232,2.305,1233,2.305,1234,2.305,1235,2.305,1236,2.305,1237,2.305,1238,2.305,1239,2.305,1240,2.305,1241,2.305,1242,2.305,1243,5.328,1244,2.951,1245,2.305,1246,2.305,1247,2.305,1248,2.305,1249,2.305,1250,2.305,1251,3.494,1252,2.305,1253,2.305,1254,2.305,1255,2.305,1256,2.305,1257,2.305,1258,3.494,1259,2.305,1260,2.305,1261,2.305,1262,2.305,1263,2.305,1264,3.494,1265,2.305,1266,2.305,1267,2.305,1268,3.494,1269,2.305,1270,2.305,1271,2.305]],["title/components/RadarChartComponent.html",[0,0.066,79,0.685]],["body/components/RadarChartComponent.html",[0,0.072,1,0.374,2,0.738,3,0.152,4,0.134,5,0.496,6,0.496,7,0.496,8,0.496,9,0.134,11,0.496,12,1.47,13,1.265,15,0.688,17,0.688,19,0.152,20,0.514,21,1.111,22,0.747,23,0.027,24,0.597,25,0.531,28,0.867,30,0.52,31,0.231,32,0.242,33,0.051,34,0.688,37,1.772,40,0.432,41,0.791,42,0.597,43,0.432,44,0.997,45,0.496,46,0.68,47,0.496,48,0.374,49,0.496,50,0.496,51,0.348,52,0.496,53,0.374,54,0.791,55,0.496,56,0.374,57,0.986,58,0.348,59,0.432,60,0.986,61,0.374,62,0.496,63,0.348,64,0.747,65,0.496,66,0.322,67,0.438,68,0.348,69,0.368,70,0.348,71,0.348,72,0.496,73,0.374,74,0.496,75,0.374,76,0.496,77,0.791,78,0.348,79,0.849,80,1.647,81,0.402,82,0.496,83,0.432,84,0.463,85,0.496,86,0.496,87,0.007,88,0.011,89,0.007,154,3.263,159,1.772,163,0.641,167,1.062,171,1.507,180,0.651,181,2.819,195,0.791,196,0.986,197,2.432,200,1.803,207,3.522,208,1.125,210,1.772,211,1.934,213,0.348,215,2.075,216,1.606,218,0.986,219,0.92,224,1.157,235,1.951,238,1.553,239,1.553,240,1.553,241,1.553,242,1.224,243,1.553,244,1.553,245,1.553,246,3.031,247,2.475,248,2.475,249,1.553,251,1.553,253,1.553,254,0.698,256,1.553,258,1.553,260,1.553,262,1.018,264,1.364,273,2.308,274,1.224,275,1.364,277,1.364,278,0.698,280,0.938,286,3.602,294,1.553,297,3.522,300,2.712,308,2.075,309,1.553,312,1.364,313,1.364,314,1.224,435,2.432,436,3.38,445,1.364,459,1.724,475,1.489,521,0.938,540,1.194,600,2.521,724,3.087,734,2.475,779,1.224,808,2.432,823,1.224,834,3.087,843,1.553,910,2.432,929,3.923,932,2.475,990,1.772,992,2.175,1049,2.475,1149,1.224,1150,4.301,1151,3.087,1152,2.475,1157,3.087,1163,1.553,1164,1.553,1169,1.553,1170,2.475,1205,1.553,1206,1.553,1211,3.522,1212,3.087,1218,3.522,1272,4.556,1273,3.656,1274,2.932,1275,4.171,1276,2.932,1277,3.656,1278,3.656,1279,1.839,1280,2.932,1281,2.932,1282,4.099,1283,4.556,1284,1.839,1285,1.839,1286,1.839,1287,1.839,1288,1.839,1289,2.932,1290,1.839,1291,1.839,1292,1.839,1293,1.553,1294,1.553,1295,1.553,1296,1.553,1297,1.553,1298,2.932,1299,1.839,1300,1.839,1301,1.839,1302,1.839,1303,2.932,1304,1.839,1305,2.932,1306,1.839,1307,1.839,1308,1.839,1309,1.839,1310,1.839,1311,1.839,1312,1.839,1313,1.839,1314,1.839,1315,1.839,1316,1.839,1317,2.932,1318,3.656,1319,2.932,1320,1.839,1321,2.932,1322,1.839,1323,2.932,1324,3.656,1325,3.656,1326,3.656,1327,1.839,1328,1.839,1329,2.932,1330,1.839,1331,1.839,1332,2.932,1333,1.839,1334,1.839,1335,4.171,1336,2.932,1337,4.171,1338,2.932,1339,2.932,1340,2.932,1341,2.932,1342,1.839,1343,1.839,1344,2.932,1345,2.932,1346,3.656,1347,1.839,1348,1.839,1349,1.839,1350,1.839,1351,1.839,1352,1.839,1353,1.839,1354,1.839,1355,1.839,1356,2.932,1357,1.839,1358,1.839,1359,1.839,1360,1.839,1361,1.839,1362,2.932,1363,1.839,1364,1.839,1365,2.932,1366,1.839,1367,1.839,1368,2.932,1369,1.839,1370,1.839,1371,1.839,1372,1.839,1373,1.839,1374,1.839,1375,1.839,1376,1.839,1377,1.839,1378,2.932,1379,1.839,1380,3.656,1381,1.839,1382,2.932,1383,1.839,1384,3.656,1385,1.839,1386,1.839,1387,1.839,1388,1.839,1389,1.839,1390,1.839,1391,1.839,1392,1.839,1393,1.839,1394,1.839,1395,1.839,1396,3.656,1397,1.839,1398,1.839,1399,1.839,1400,3.656,1401,1.839,1402,2.932,1403,1.839,1404,1.839,1405,2.932,1406,1.839,1407,2.932,1408,1.839,1409,1.839,1410,1.839,1411,2.932,1412,1.839]],["title/classes/SharePerYearPerPublisher.html",[33,0.094,528,1.863]],["body/classes/SharePerYearPerPublisher.html",[3,0.389,4,0.343,9,0.343,19,0.389,20,1,22,0.874,23,0.026,24,1.298,28,0.952,32,0.389,33,0.131,46,0.704,69,0.832,87,0.018,88,0.022,89,0.018,161,2.609,213,0.891,218,1.271,219,1.187,254,2.479,475,2.759,528,3.157,875,3.498,877,3.981,1413,3.981,1414,6.635,1415,4.714,1416,4.714,1417,4.714,1418,4.714,1419,4.714,1420,4.714,1421,4.714,1422,4.714,1423,4.714]],["title/interfaces/StaticCarousel.html",[315,1.193,1018,2.034]],["body/interfaces/StaticCarousel.html",[0,0.105,3,0.352,4,0.31,9,0.31,12,1,13,0.867,15,1,17,1,19,0.442,20,0.939,21,3.717,22,0.735,23,0.027,24,1.252,30,0.669,31,0.534,32,0.442,33,0.119,66,0.746,67,0.875,87,0.016,88,0.021,89,0.016,104,1.659,117,2.008,135,1.864,138,2.356,139,2.356,171,1.408,195,1.148,196,1.445,208,1.148,211,2.523,224,0.931,315,1.508,317,2.572,388,3.237,398,2.407,417,2.572,491,2.572,492,2.572,493,2.833,494,2.833,704,1.864,1006,3.158,1010,3.595,1012,3.595,1014,3.158,1018,3.542,1019,2.833,1020,3.158,1021,3.158,1022,3.158,1023,3.158,1024,3.237,1025,2.572,1026,3.595,1027,3.158,1028,3.158,1029,3.158,1030,3.158,1031,3.595,1032,3.595,1033,3.158,1034,3.158]],["title/coverage.html",[1424,3.878]],["body/coverage.html",[0,0.134,1,0.715,9,0.256,10,2.967,22,0.482,23,0.027,33,0.166,48,0.715,51,0.664,53,0.715,56,0.715,58,0.664,61,0.715,63,0.664,64,0.482,66,0.616,68,0.664,69,0.593,70,0.664,71,0.664,73,0.715,75,0.715,78,0.664,79,0.715,81,0.769,83,1.11,87,0.013,88,0.018,89,0.013,104,0.948,117,2.898,118,2.338,121,2.967,122,2.967,125,3.146,127,2.607,131,2.338,132,2.338,136,2.338,138,3.163,139,2.617,140,2.338,141,2.338,151,2.338,152,2.338,154,1.945,157,1.945,160,2.607,162,2.967,194,2.967,216,1.163,308,2.846,315,2.025,316,2.338,318,3.508,386,3.508,387,2.967,396,2.338,398,1.334,470,2.967,491,3.454,517,2.124,518,3.556,520,2.34,522,1.945,528,1.945,531,2.124,540,1.432,704,2.831,705,3.556,779,2.338,825,2.967,833,2.967,902,2.967,929,2.338,990,2.124,1018,2.124,1052,2.967,1059,2.967,1072,2.967,1077,2.967,1112,2.967,1148,2.607,1149,3.146,1413,2.967,1424,2.967,1425,2.967,1426,3.514,1427,3.514,1428,6.277,1429,4.728,1430,4.728,1431,3.514,1432,3.514,1433,4.728,1434,3.514,1435,3.514,1436,5.343,1437,3.514,1438,3.514,1439,3.514,1440,3.514,1441,5.343,1442,3.514,1443,3.514,1444,2.967,1445,5.715,1446,3.993,1447,5.715,1448,2.967,1449,3.514,1450,3.993,1451,2.967,1452,2.967,1453,3.514,1454,3.514]],["title/dependencies.html",[93,2.694,1455,2.812]],["body/dependencies.html",[23,0.027,31,0.596,43,1.116,87,0.018,88,0.022,89,0.018,93,3.161,95,4.253,111,4.84,112,3.814,143,3.525,144,4.012,146,4.012,149,4.84,150,4.012,159,2.871,180,1.683,526,2.422,823,3.161,1456,4.751,1457,6.829,1458,4.751,1459,4.751,1460,4.751,1461,4.751,1462,4.751,1463,4.751,1464,4.751,1465,4.751,1466,4.751,1467,4.751,1468,4.751,1469,4.751,1470,4.751,1471,4.751,1472,4.751,1473,4.751,1474,4.751,1475,4.751,1476,4.751,1477,4.751]],["title/miscellaneous/enumerations.html",[1478,1.871,1479,3.418]],["body/miscellaneous/enumerations.html",[19,0.426,23,0.023,87,0.02,88,0.023,89,0.02,154,2.856,157,2.856,909,4.006,910,4.006,929,3.433,1148,3.828,1149,4.451,1171,4.357,1172,4.357,1282,5.083,1293,4.357,1294,4.357,1295,4.357,1296,4.357,1297,4.357,1478,3.433,1479,4.357,1480,5.16,1481,6.02]],["title/index.html",[19,0.232,1482,2.375,1483,2.375]],["body/index.html",[0,0.119,4,0.331,13,0.926,23,0.021,27,3.841,46,0.679,87,0.017,88,0.021,89,0.017,107,3.027,143,4.944,170,2.749,393,3.841,540,1.853,567,3.027,759,3.841,794,3.375,808,4.019,809,5.458,817,5.1,1484,5.582,1485,4.549,1486,6.04,1487,4.549,1488,4.549,1489,4.549,1490,5.582,1491,6.463,1492,4.549,1493,4.549,1494,4.549,1495,4.549,1496,4.549,1497,4.549,1498,3.841,1499,4.549,1500,4.549,1501,6.04,1502,4.549,1503,4.549,1504,4.549,1505,4.549,1506,4.549,1507,4.549,1508,4.549,1509,3.841,1510,5.582,1511,5.582,1512,6.298,1513,4.549,1514,5.582,1515,5.582,1516,4.549,1517,6.298,1518,4.549,1519,6.04,1520,4.549,1521,4.549]],["title/license.html",[1482,2.375,1483,2.375,1522,2.375]],["body/license.html",[23,0.021,87,0.017,88,0.021,89,0.017,107,3.027,232,3.841,746,3.841,808,3.714,1068,3.841,1425,3.841,1498,3.841,1522,3.841,1523,4.549,1524,6.04,1525,4.549,1526,4.549,1527,5.582,1528,4.549,1529,4.549,1530,4.549,1531,4.549,1532,4.549,1533,4.549,1534,5.582,1535,6.78,1536,4.549,1537,4.549,1538,6.04,1539,4.549,1540,5.582,1541,4.549,1542,4.549,1543,4.549,1544,4.549,1545,4.549,1546,4.549,1547,4.549,1548,4.549,1549,4.549,1550,5.582,1551,4.549,1552,4.549,1553,4.549,1554,4.549,1555,4.549,1556,4.549,1557,5.582,1558,5.582,1559,4.549,1560,4.549,1561,4.549,1562,4.549,1563,4.549,1564,4.549,1565,4.549,1566,4.549,1567,4.549,1568,4.549,1569,4.549,1570,4.549,1571,4.549,1572,4.549,1573,4.549,1574,4.549,1575,4.549,1576,4.549,1577,4.549,1578,4.549,1579,4.549,1580,4.549,1581,4.549,1582,4.549,1583,4.549,1584,4.549,1585,4.549,1586,4.549,1587,4.549]],["title/modules.html",[92,2.775]],["body/modules.html",[23,0.024,84,1.35,87,0.021,88,0.024,89,0.021,91,3.568,92,3.241,103,3.241,112,3.568,1588,5.363,1589,5.363,1590,6.155,1591,5.363]],["title/overview.html",[1592,3.878]],["body/overview.html",[1,1.324,2,1.026,23,0.027,40,0.957,48,1.169,51,1.086,53,1.169,56,1.169,58,1.086,61,1.169,63,1.086,66,1.061,68,1.086,70,1.086,71,1.086,73,1.169,75,1.169,78,1.086,79,1.169,81,1.257,87,0.016,88,0.02,89,0.016,90,2.711,91,4.722,92,2.462,93,2.711,94,3.44,95,3.022,96,3.44,97,3.022,98,3.44,99,3.44,100,3.44,101,3.44,102,3.44,103,3.471,104,1.549,105,4.399,106,3.44,107,2.711,161,2.254,178,2.711,317,2.462,669,2.711,779,2.711,1208,3.44,1244,3.44,1592,3.44,1593,4.074,1594,4.074,1595,4.074]],["title/routes.html",[178,3.056]],["body/routes.html",[23,0.024,87,0.021,88,0.024,89,0.021,178,3.64]],["title/miscellaneous/variables.html",[1478,1.871,1596,3.418]],["body/miscellaneous/variables.html",[19,0.409,22,0.889,23,0.027,25,1.809,26,1.936,87,0.019,88,0.023,89,0.019,235,3.295,237,4.36,262,3.252,1444,4.181,1446,5.472,1448,4.181,1450,4.181,1451,4.962,1452,4.962,1478,3.295,1509,4.962,1596,4.181,1597,5.876,1598,4.952,1599,4.952,1600,4.952,1601,4.952,1602,4.952]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":308,"title":{},"body":{"components/BarGraphComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":443,"title":{},"body":{"components/CoverCardComponent.html":{},"components/GraphViewComponent.html":{}}}],["0.8",{"_index":1000,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["0/1",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":510,"title":{},"body":{"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["1).slice(0",{"_index":1102,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.10.0",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":502,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["1.5rem",{"_index":385,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["1/10",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["1/45",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":990,"title":{},"body":{"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/NavbarComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{}}}],["100",{"_index":459,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/RadarChartComponent.html":{}}}],["100rem",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["12px",{"_index":455,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["14px",{"_index":504,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["160px",{"_index":441,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{}}}],["16px",{"_index":466,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["17",{"_index":1593,"title":{},"body":{"overview.html":{}}}],["18px",{"_index":1001,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["1970",{"_index":1028,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["1980",{"_index":745,"title":{},"body":{"components/FaqViewComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["1px",{"_index":512,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["2",{"_index":779,"title":{},"body":{"components/FaqViewComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["2.0.0",{"_index":1464,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["2.9.20",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":686,"title":{},"body":{"injectables/DataService.html":{}}}],["200px",{"_index":1002,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["2019",{"_index":1029,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["2020",{"_index":746,"title":{},"body":{"components/FaqViewComponent.html":{},"license.html":{}}}],["20px",{"_index":500,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["250",{"_index":411,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["25em",{"_index":516,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["3",{"_index":1208,"title":{},"body":{"components/PieChartComponent.html":{},"overview.html":{}}}],["3.5.1",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":412,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["300px",{"_index":1005,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["4",{"_index":1595,"title":{},"body":{"overview.html":{}}}],["4.5.0",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":299,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["5",{"_index":1594,"title":{},"body":{"overview.html":{}}}],["5.16.0",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":415,"title":{},"body":{"components/CoverCardComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["6.1.0",{"_index":1462,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":454,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/GameDetailsComponent.html":{}}}],["60000",{"_index":747,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["6c757d",{"_index":514,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["7",{"_index":1030,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["7).then(data",{"_index":1033,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["8",{"_index":1244,"title":{},"body":{"components/PublisherCarouselComponent.html":{},"overview.html":{}}}],["9",{"_index":954,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["9.1.7",{"_index":1488,"title":{},"body":{"index.html":{}}}],["9.1.9",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["9px",{"_index":450,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["_",{"_index":1127,"title":{},"body":{"injectables/NavigationService.html":{}}}],["__').replace",{"_index":1144,"title":{},"body":{"injectables/NavigationService.html":{}}}],["___').replace",{"_index":1143,"title":{},"body":{"injectables/NavigationService.html":{}}}],["a.globalsales",{"_index":604,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/GameDetailsComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/PieChartComponent.html":{}}}],["a.totalshare",{"_index":630,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["a:hover",{"_index":440,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["a[1",{"_index":1206,"title":{},"body":{"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["above",{"_index":1556,"title":{},"body":{"license.html":{}}}],["action",{"_index":1581,"title":{},"body":{"license.html":{}}}],["activatedroute",{"_index":320,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["actual_component",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["add",{"_index":1195,"title":{},"body":{"components/PieChartComponent.html":{}}}],["afterviewinit",{"_index":1212,"title":{},"body":{"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["albums",{"_index":803,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["align",{"_index":469,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/GameDetailsComponent.html":{}}}],["allows",{"_index":756,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["already",{"_index":568,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/PieChartComponent.html":{}}}],["amount",{"_index":1283,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["analysis",{"_index":725,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["analyzing",{"_index":726,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["and/or",{"_index":1548,"title":{},"body":{"license.html":{}}}],["anglelines",{"_index":1408,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["angular",{"_index":817,"title":{},"body":{"components/FaqViewComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["angular/compiler",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{},"index.html":{}}}],["app.component",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":793,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["appmodule",{"_index":91,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":160,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":103,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":1585,"title":{},"body":{"license.html":{}}}],["arr",{"_index":305,"title":{},"body":{"components/BarGraphComponent.html":{},"components/GameDetailsComponent.html":{}}}],["arr.filter((element",{"_index":616,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["arr.push(this.game",{"_index":949,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["arr.slice(0,10",{"_index":964,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["arr.slice(0,50",{"_index":306,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["arr.slice(0,9",{"_index":948,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["arr.sort((a,b",{"_index":947,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["arr[9",{"_index":966,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["array(top10gamesbygenrepublisherlist.length).fill(0",{"_index":1201,"title":{},"body":{"components/PieChartComponent.html":{}}}],["art",{"_index":805,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["artifacts",{"_index":1503,"title":{},"body":{"index.html":{}}}],["asked",{"_index":712,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["associated",{"_index":1536,"title":{},"body":{"license.html":{}}}],["authors",{"_index":1574,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1004,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["automatically",{"_index":1495,"title":{},"body":{"index.html":{}}}],["available",{"_index":1591,"title":{},"body":{"modules.html":{}}}],["avgavailablescores",{"_index":1370,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["avgavailablescores[game].avgtotalscore",{"_index":1391,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["avgavailablescores[game].criticscore",{"_index":1393,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["avgavailablescores[game].userscore",{"_index":1392,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["avgavailablescores[key",{"_index":1386,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["avgcriticscores",{"_index":1384,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["avgtotalscore",{"_index":1387,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["avguserscores",{"_index":1380,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["b",{"_index":600,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/GameDetailsComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["b.globalsales",{"_index":605,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/GameDetailsComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/PieChartComponent.html":{}}}],["b.share",{"_index":622,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["b.totalshare",{"_index":629,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["b[1",{"_index":1205,"title":{},"body":{"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["back",{"_index":1268,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["background",{"_index":375,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{}}}],["backgroundcolor",{"_index":297,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["backtotop",{"_index":1217,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["bar",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["barchartdata",{"_index":201,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["barchartlabels",{"_index":202,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["barchartlegend",{"_index":203,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["barchartoptions",{"_index":204,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["barcharttype",{"_index":205,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["bargraph.component.css",{"_index":198,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["bargraph.component.html",{"_index":199,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["bargraphcomponent",{"_index":48,"title":{"components/BarGraphComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["behaviorsubject",{"_index":1066,"title":{},"body":{"injectables/InteractionService.html":{},"injectables/NavigationService.html":{}}}],["behaviorsubject(null",{"_index":1065,"title":{},"body":{"injectables/InteractionService.html":{},"injectables/NavigationService.html":{}}}],["below",{"_index":1207,"title":{},"body":{"components/PieChartComponent.html":{}}}],["between",{"_index":606,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["bg",{"_index":374,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["body",{"_index":442,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{}}}],["bold",{"_index":467,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["boolean",{"_index":401,"title":{},"body":{"components/CoverCardComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"classes/Game.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["boostrap",{"_index":1463,"title":{},"body":{"dependencies.html":{}}}],["bootstrap",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":378,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CoverCarouselComponent.html":{}}}],["bordercolor",{"_index":1337,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["bottom",{"_index":511,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["box",{"_index":243,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["breadcrumb",{"_index":316,"title":{"interfaces/Breadcrumb.html":{}},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"coverage.html":{}}}],["breadcrumb'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["breadcrumb.component.css",{"_index":329,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["breadcrumb.component.html",{"_index":328,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["breadcrumb.name",{"_index":373,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumbcomponent",{"_index":51,"title":{"components/BreadcrumbComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["breadcrumbs",{"_index":334,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["break",{"_index":300,"title":{},"body":{"components/BarGraphComponent.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["browse",{"_index":1590,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":172,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["btt",{"_index":1269,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["build",{"_index":809,"title":{},"body":{"components/FaqViewComponent.html":{},"index.html":{}}}],["c",{"_index":1525,"title":{},"body":{"license.html":{}}}],["cached",{"_index":569,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cachedresult",{"_index":570,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cachedresult.cardammout",{"_index":576,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cachedresult.fromyear",{"_index":574,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cachedresult.genre",{"_index":572,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cachedresult.publisher",{"_index":573,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cachedresult.toyear",{"_index":575,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["calculated",{"_index":657,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["calculatedcarousels.length",{"_index":1263,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["calculatedcarousels.push({title",{"_index":1262,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["calculatestaticcarouseldata",{"_index":1007,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["calculatestaticcarouseldata(cards",{"_index":1010,"title":{},"body":{"components/GenreCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["calculatestaticcarouseldata(publishers",{"_index":1224,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["calculating",{"_index":774,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["callbacks",{"_index":245,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["called",{"_index":1023,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["canvas",{"_index":1411,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["card",{"_index":388,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/GenreCarouselComponent.html":{},"injectables/InteractionService.html":{},"interfaces/StaticCarousel.html":{}}}],["card'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["card.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.css",{"_index":389,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["card.component.html",{"_index":390,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["card.component.ts",{"_index":387,"title":{},"body":{"components/CoverCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:13",{"_index":399,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["card.component.ts:14",{"_index":416,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["card.component.ts:21",{"_index":397,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["card.component.ts:27",{"_index":403,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["card.component.ts:30",{"_index":402,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["card.component.ts:37",{"_index":404,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["card.component.ts:43",{"_index":405,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["card.component.ts:49",{"_index":400,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["card/cover",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"components/CoverCardComponent.html":{},"coverage.html":{}}}],["cardammout",{"_index":519,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cardamount",{"_index":557,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cardamount).then(carousellist",{"_index":560,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cardamount)[0",{"_index":577,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cardname",{"_index":495,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["cards",{"_index":1012,"title":{},"body":{"components/GenreCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["carousel",{"_index":492,"title":{},"body":{"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["carousel'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["carousel.component",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PublisherCarouselComponent.html":{}}}],["carousel.component.css",{"_index":493,"title":{},"body":{"components/CoverCarouselComponent.html":{},"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["carousel.component.html",{"_index":494,"title":{},"body":{"components/CoverCarouselComponent.html":{},"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["carousel.component.ts",{"_index":491,"title":{},"body":{"components/CoverCarouselComponent.html":{},"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{}}}],["carousel.component.ts:10",{"_index":497,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["carousel.component.ts:11",{"_index":496,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["carousel.component.ts:14",{"_index":1229,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:15",{"_index":498,"title":{},"body":{"components/CoverCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:16",{"_index":1016,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:17",{"_index":1009,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:18",{"_index":1232,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:19",{"_index":1017,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:20",{"_index":1221,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:22",{"_index":1013,"title":{},"body":{"components/GenreCarouselComponent.html":{}}}],["carousel.component.ts:23",{"_index":1230,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:24",{"_index":1234,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:25",{"_index":1233,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:26",{"_index":1231,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:29",{"_index":1227,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:36",{"_index":1015,"title":{},"body":{"components/GenreCarouselComponent.html":{}}}],["carousel.component.ts:40",{"_index":1011,"title":{},"body":{"components/GenreCarouselComponent.html":{}}}],["carousel.component.ts:49",{"_index":1226,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:53",{"_index":1228,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:57",{"_index":1223,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:61",{"_index":1225,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel.component.ts:74",{"_index":1222,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousel/cover",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"coverage.html":{}}}],["carousel/genre",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{}}}],["carousel/publisher",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PublisherCarouselComponent.html":{},"coverage.html":{}}}],["carouselfullyloaded",{"_index":1213,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["carousellist",{"_index":582,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["carouselnonemptycardamount",{"_index":583,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["carouselreloadstepsize",{"_index":1214,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["case",{"_index":286,"title":{},"body":{"components/BarGraphComponent.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["center",{"_index":507,"title":{},"body":{"components/CoverCarouselComponent.html":{},"components/GameDetailsComponent.html":{}}}],["change",{"_index":1497,"title":{},"body":{"index.html":{}}}],["changedetectionstrategy",{"_index":1235,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["changedetectorref",{"_index":1236,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["changes",{"_index":228,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["charge",{"_index":1531,"title":{},"body":{"license.html":{}}}],["chart",{"_index":1150,"title":{},"body":{"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["chart'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["chart(this.randomid",{"_index":1345,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["chart.component",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{}}}],["chart.component.css",{"_index":1151,"title":{},"body":{"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["chart.component.html",{"_index":1152,"title":{},"body":{"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["chart.component.ts",{"_index":1149,"title":{},"body":{"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["chart.component.ts:163",{"_index":1284,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["chart.component.ts:20",{"_index":1159,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:21",{"_index":1160,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:22",{"_index":1161,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:24",{"_index":1163,"title":{},"body":{"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["chart.component.ts:25",{"_index":1164,"title":{},"body":{"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["chart.component.ts:26",{"_index":1169,"title":{},"body":{"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["chart.component.ts:27",{"_index":1168,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:28",{"_index":1292,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["chart.component.ts:29",{"_index":1280,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["chart.component.ts:32",{"_index":1158,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:33",{"_index":1288,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["chart.component.ts:36",{"_index":1162,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:37",{"_index":1287,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["chart.component.ts:43",{"_index":1286,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["chart.component.ts:61",{"_index":1290,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["chart.component.ts:71",{"_index":1285,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["chart.js",{"_index":823,"title":{},"body":{"components/FaqViewComponent.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{},"dependencies.html":{}}}],["chart/pie",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["chart/radar",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["chartoptions",{"_index":1165,"title":{},"body":{"components/PieChartComponent.html":{}}}],["charts",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["chartsmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["check",{"_index":567,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"index.html":{}}}],["children",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chunksize",{"_index":634,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cirtic",{"_index":1406,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["claim",{"_index":1577,"title":{},"body":{"license.html":{}}}],["class",{"_index":33,"title":{"classes/AppPage.html":{},"classes/CoverCarousel.html":{},"classes/Game.html":{},"classes/GenreSalesPerYear.html":{},"classes/SharePerYearPerPublisher.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{}}}],["classes",{"_index":161,"title":{},"body":{"classes/AppPage.html":{},"classes/CoverCarousel.html":{},"classes/Game.html":{},"classes/GenreSalesPerYear.html":{},"classes/SharePerYearPerPublisher.html":{},"overview.html":{}}}],["cli",{"_index":1486,"title":{},"body":{"index.html":{}}}],["cluster",{"_index":619,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cluster.data.reduce((a,b",{"_index":621,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["cluster_appmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1499,"title":{},"body":{"index.html":{}}}],["col",{"_index":1003,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["collected",{"_index":738,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["collection",{"_index":737,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["color",{"_index":242,"title":{},"body":{"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/RadarChartComponent.html":{}}}],["colorarr",{"_index":284,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["colorarr.push(\"rgba(0,164,255,0.5",{"_index":291,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["colorarr.push(\"rgba(247,70,74,0.5",{"_index":290,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["columns",{"_index":729,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["comparison",{"_index":995,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1555,"title":{},"body":{"license.html":{}}}],["configure",{"_index":1405,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["connection",{"_index":1586,"title":{},"body":{"license.html":{}}}],["console.error('no",{"_index":1310,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["console.log(\"genresales",{"_index":548,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["console.log(\"random",{"_index":1409,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["console.log('crit_user_score",{"_index":1305,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["console.log('no",{"_index":1267,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["console.log('publishers",{"_index":1247,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["console.log(route",{"_index":365,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["console.log(slicedroute",{"_index":342,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["console.log(this.data",{"_index":281,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["console.log(this.publisherlist",{"_index":1242,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["console.log(totalpublishershare.length",{"_index":631,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["console.time('getmarketshareforgenreperyear",{"_index":641,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["console.time('start",{"_index":1249,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["console.time('updatecovercarousel",{"_index":558,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["console.timeend('getmarketshareforgenreperyear",{"_index":662,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["console.timeend('start",{"_index":1252,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["console.timeend('updatecovercarousel",{"_index":562,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["const",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["construct",{"_index":487,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["constructor",{"_index":213,"title":{},"body":{"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{}}}],["constructor(dataservice",{"_index":915,"title":{},"body":{"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["constructor(from",{"_index":474,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["constructor(from:number",{"_index":481,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["constructor(http",{"_index":681,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(navigationservice",{"_index":1279,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["constructor(obj",{"_index":845,"title":{},"body":{"classes/Game.html":{}}}],["constructor(obj?:any",{"_index":867,"title":{},"body":{"classes/Game.html":{}}}],["constructor(private",{"_index":278,"title":{},"body":{"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/GameDetailsComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["constructor(public",{"_index":1019,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["constructor(router",{"_index":214,"title":{},"body":{"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{}}}],["constructor(year",{"_index":1415,"title":{},"body":{"classes/SharePerYearPerPublisher.html":{}}}],["constructor(year:number",{"_index":1420,"title":{},"body":{"classes/SharePerYearPerPublisher.html":{}}}],["contain",{"_index":464,"title":{},"body":{"components/CoverCardComponent.html":{},"components/FaqViewComponent.html":{}}}],["container",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/GameDetailsComponent.html":{}}}],["content",{"_index":174,"title":{},"body":{"classes/AppPage.html":{},"components/CoverCarouselComponent.html":{},"components/FooterComponent.html":{},"components/MainContentComponent.html":{}}}],["content'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["content.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["content.component.css",{"_index":1073,"title":{},"body":{"components/MainContentComponent.html":{}}}],["content.component.html",{"_index":1074,"title":{},"body":{"components/MainContentComponent.html":{}}}],["content.component.ts",{"_index":1072,"title":{},"body":{"components/MainContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:12",{"_index":1076,"title":{},"body":{"components/MainContentComponent.html":{}}}],["content.component.ts:8",{"_index":1075,"title":{},"body":{"components/MainContentComponent.html":{}}}],["content/faq",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FaqViewComponent.html":{},"coverage.html":{}}}],["content/game",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameDetailsComponent.html":{},"coverage.html":{}}}],["content/graph",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{}}}],["content/main",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainContentComponent.html":{},"coverage.html":{}}}],["contenttype",{"_index":408,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["context",{"_index":1451,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1582,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1550,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1534,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1524,"title":{},"body":{"license.html":{}}}],["count",{"_index":1051,"title":{},"body":{"components/GenrePublisherViewComponent.html":{},"components/PieChartComponent.html":{}}}],["cover",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["coverage",{"_index":1424,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covercardcomponent",{"_index":53,"title":{"components/CoverCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["covercarousel",{"_index":398,"title":{"classes/CoverCarousel.html":{}},"body":{"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/GenreCarouselComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{}}}],["covercarouselcomponent",{"_index":56,"title":{"components/CoverCarouselComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["covercarouselstore",{"_index":517,"title":{"interfaces/CoverCarouselStore.html":{}},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"coverage.html":{}}}],["covers",{"_index":501,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["created",{"_index":820,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["createusercriticscoreradar",{"_index":1274,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["createusercriticscoreradar(sortorder",{"_index":1281,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["creation",{"_index":819,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["crit_user_score_details",{"_index":1295,"title":{},"body":{"components/RadarChartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["crit_user_score_highest",{"_index":1293,"title":{},"body":{"components/RadarChartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["crit_user_score_lowest",{"_index":1294,"title":{},"body":{"components/RadarChartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["criterion",{"_index":603,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["critic",{"_index":992,"title":{},"body":{"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/RadarChartComponent.html":{}}}],["criticcolorarr",{"_index":1329,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["criticcolorarr.push(\"red",{"_index":1330,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["criticcolorarr.push(\"rgba(17,255,0,1",{"_index":1331,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["critics",{"_index":986,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["criticscore",{"_index":834,"title":{},"body":{"classes/Game.html":{},"components/RadarChartComponent.html":{}}}],["criticscorearr",{"_index":1321,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["criticscorepergame",{"_index":1360,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["criticscorepergame[game.name",{"_index":1365,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["criticscorepergame[game.name].push(game.criticscore",{"_index":1367,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["criticscorepergame[key].length",{"_index":1373,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["criticscorepergame[key].map(number",{"_index":1377,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["criticscores",{"_index":1376,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["criticscores.length",{"_index":1385,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["criticscores.reduce((a",{"_index":1383,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["csv",{"_index":727,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["current",{"_index":1196,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cursor",{"_index":1270,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["custom",{"_index":239,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["d3",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["d3.js",{"_index":822,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["damages",{"_index":1578,"title":{},"body":{"license.html":{}}}],["data",{"_index":211,"title":{},"body":{"components/BarGraphComponent.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/GenreCarouselComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["data.genre",{"_index":659,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["database",{"_index":742,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["dataservice",{"_index":104,"title":{"injectables/DataService.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{},"overview.html":{}}}],["dataservice:dataservice",{"_index":930,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["dataset",{"_index":721,"title":{},"body":{"components/FaqViewComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{}}}],["datasets",{"_index":734,"title":{},"body":{"components/FaqViewComponent.html":{},"components/RadarChartComponent.html":{}}}],["deal",{"_index":1537,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1587,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":1090,"title":{},"body":{"components/NavbarComponent.html":{}}}],["debouncetime(200",{"_index":1098,"title":{},"body":{"components/NavbarComponent.html":{}}}],["declarations",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decodeencodedurl",{"_index":1113,"title":{},"body":{"injectables/NavigationService.html":{}}}],["decodeencodedurl(encodedurl",{"_index":1119,"title":{},"body":{"injectables/NavigationService.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"injectables/DataService.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"injectables/InteractionService.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{}}}],["delay",{"_index":414,"title":{},"body":{"components/CoverCardComponent.html":{},"components/FaqViewComponent.html":{}}}],["dependencies",{"_index":93,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":777,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["details",{"_index":348,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/GameDetailsComponent.html":{}}}],["details'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["details.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["details.component.css",{"_index":903,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.html",{"_index":904,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.ts",{"_index":902,"title":{},"body":{"components/GameDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:15",{"_index":926,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.ts:16",{"_index":922,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":924,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":923,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":925,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":927,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":916,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.ts:29",{"_index":921,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.ts:49",{"_index":920,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.ts:64",{"_index":918,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.ts:88",{"_index":919,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details.component.ts:98",{"_index":917,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["details/:gameid",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["details/game",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameDetailsComponent.html":{},"coverage.html":{}}}],["details_view_sale_distribution",{"_index":1171,"title":{},"body":{"components/PieChartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dev",{"_index":1493,"title":{},"body":{"index.html":{}}}],["development",{"_index":1489,"title":{},"body":{"index.html":{}}}],["different",{"_index":798,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["directive",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"dependencies.html":{}}}],["directives",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1502,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1506,"title":{},"body":{"index.html":{}}}],["disable",{"_index":240,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["disabled",{"_index":1111,"title":{},"body":{"components/NavbarComponent.html":{}}}],["display",{"_index":264,"title":{},"body":{"components/BarGraphComponent.html":{},"components/CoverCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["displayed",{"_index":1311,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["displaying",{"_index":241,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["dist",{"_index":1505,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":1091,"title":{},"body":{"components/NavbarComponent.html":{}}}],["distribute",{"_index":1546,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":998,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["document.body.offsetheight",{"_index":1257,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["documentation",{"_index":1425,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["done",{"_index":752,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["dynamic",{"_index":1461,"title":{},"body":{"dependencies.html":{}}}],["dynchunksize",{"_index":633,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["e2e",{"_index":1518,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":162,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":169,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":166,"title":{},"body":{"classes/AppPage.html":{}}}],["efficient",{"_index":757,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["elem.publisher",{"_index":612,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["element",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["element(by.css('app",{"_index":173,"title":{},"body":{"classes/AppPage.html":{}}}],["element.publisher",{"_index":617,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["elementref",{"_index":275,"title":{},"body":{"components/BarGraphComponent.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["ellipsis",{"_index":462,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["enabled",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["encodedurl",{"_index":1121,"title":{},"body":{"injectables/NavigationService.html":{}}}],["encodedurl.replace('___",{"_index":1145,"title":{},"body":{"injectables/NavigationService.html":{}}}],["encodeurlelement",{"_index":1114,"title":{},"body":{"injectables/NavigationService.html":{}}}],["encodeurlelement(url",{"_index":1122,"title":{},"body":{"injectables/NavigationService.html":{}}}],["encountered",{"_index":787,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["end",{"_index":1517,"title":{},"body":{"index.html":{}}}],["enriched",{"_index":722,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["ensured",{"_index":762,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["entries",{"_index":748,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["enum",{"_index":1170,"title":{},"body":{"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["enumerations",{"_index":1479,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1446,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equals",{"_index":844,"title":{},"body":{"classes/Game.html":{}}}],["equals(game",{"_index":865,"title":{},"body":{"classes/Game.html":{}}}],["equals(game:game",{"_index":901,"title":{},"body":{"classes/Game.html":{}}}],["esrbrating",{"_index":835,"title":{},"body":{"classes/Game.html":{}}}],["eu",{"_index":982,"title":{},"body":{"components/GameDetailsComponent.html":{},"components/PieChartComponent.html":{}}}],["eusales",{"_index":836,"title":{},"body":{"classes/Game.html":{}}}],["event",{"_index":232,"title":{},"body":{"components/BarGraphComponent.html":{},"license.html":{}}}],["event.active[0]._index",{"_index":310,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["evt",{"_index":1291,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["execsearch",{"_index":1084,"title":{},"body":{"components/NavbarComponent.html":{}}}],["execute",{"_index":1514,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{}}}],["exports",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":1565,"title":{},"body":{"license.html":{}}}],["false",{"_index":235,"title":{},"body":{"components/BarGraphComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"miscellaneous/variables.html":{}}}],["faq",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["faqviewcomponent",{"_index":58,"title":{"components/FaqViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fast",{"_index":758,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["fetch",{"_index":1184,"title":{},"body":{"components/PieChartComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{}}}],["files",{"_index":1498,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":324,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filtered",{"_index":642,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filtered.filter((game",{"_index":648,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filteredbygenre",{"_index":664,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filteredbygenre.filter((game",{"_index":666,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filteredbygenreandpublisher",{"_index":665,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filteredbyyear",{"_index":647,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filteredbyyear.reduce((a",{"_index":650,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filteredbyyearandpublisher",{"_index":651,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filteredbyyearandpublisher.reduce((a",{"_index":653,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filteredgamedata",{"_index":594,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filteredgamedata.filter(game",{"_index":611,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filteredgamedata.sort((a",{"_index":599,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["filteredlist",{"_index":587,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["fitness",{"_index":1570,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1508,"title":{},"body":{"index.html":{}}}],["flex",{"_index":505,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["following",{"_index":1554,"title":{},"body":{"license.html":{}}}],["font",{"_index":449,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/GameDetailsComponent.html":{}}}],["fontcolor",{"_index":1358,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["footer",{"_index":826,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["footer.component.css",{"_index":827,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":828,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":61,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["for(let",{"_index":1204,"title":{},"body":{"components/PieChartComponent.html":{}}}],["formsmodule",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["frameworks",{"_index":821,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["free",{"_index":1530,"title":{},"body":{"license.html":{}}}],["frequently",{"_index":711,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["fromtime",{"_index":610,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["fromyear",{"_index":471,"title":{},"body":{"classes/CoverCarousel.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["full",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["functions",{"_index":769,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["furnished",{"_index":1553,"title":{},"body":{"license.html":{}}}],["further",{"_index":759,"title":{},"body":{"components/FaqViewComponent.html":{},"index.html":{}}}],["future",{"_index":788,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["game",{"_index":64,"title":{"classes/Game.html":{}},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{}}}],["game(game",{"_index":545,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["game.criticscore",{"_index":1366,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["game.game.name",{"_index":426,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["game.game.publisher",{"_index":427,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["game.genre",{"_index":584,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/PieChartComponent.html":{}}}],["game.index",{"_index":314,"title":{},"body":{"components/BarGraphComponent.html":{},"classes/Game.html":{},"components/NavbarComponent.html":{},"components/RadarChartComponent.html":{}}}],["game.publisher",{"_index":591,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/PieChartComponent.html":{}}}],["game.timespanstring",{"_index":499,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["game.userscore",{"_index":1363,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["game.year",{"_index":609,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["game:game",{"_index":483,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["game?.genre",{"_index":994,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["game?.name",{"_index":971,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["gamecardhoversubject",{"_index":1060,"title":{},"body":{"injectables/InteractionService.html":{}}}],["gamedataforgenre",{"_index":1186,"title":{},"body":{"components/PieChartComponent.html":{}}}],["gamedataforgenre.sort((a",{"_index":1190,"title":{},"body":{"components/PieChartComponent.html":{}}}],["gamedataset",{"_index":533,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["gamedb",{"_index":741,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["gamedetailscomponent",{"_index":63,"title":{"components/GameDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameid",{"_index":968,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["gameindex",{"_index":349,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["gamename",{"_index":351,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["gamenamelist",{"_index":1081,"title":{},"body":{"components/NavbarComponent.html":{}}}],["games",{"_index":792,"title":{},"body":{"components/FaqViewComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["gamesinthisyear",{"_index":905,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["generate",{"_index":1501,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1485,"title":{},"body":{"index.html":{}}}],["generation",{"_index":771,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["genre",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["genre).length",{"_index":660,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["genre/:genreid",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["genre/:genreid/publisher/:publisherid",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["genrebreadcrumb",{"_index":331,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["genrecarouselcomponent",{"_index":66,"title":{"components/GenreCarouselComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{},"overview.html":{}}}],["genrepublisherviewcomponent",{"_index":68,"title":{"components/GenrePublisherViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["genresalesperyear",{"_index":522,"title":{"classes/GenreSalesPerYear.html":{}},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"classes/GenreSalesPerYear.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"coverage.html":{}}}],["genresalesperyears",{"_index":534,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["getcachedmarketshareforgenreperyear",{"_index":670,"title":{},"body":{"injectables/DataService.html":{}}}],["getcachedmarketshareforgenreperyear(genre",{"_index":668,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["getclusteredmarketshareforgenreperyear",{"_index":671,"title":{},"body":{"injectables/DataService.html":{}}}],["getclusteredmarketshareforgenreperyear(genre",{"_index":684,"title":{},"body":{"injectables/DataService.html":{}}}],["getcovercarousel",{"_index":672,"title":{},"body":{"injectables/DataService.html":{}}}],["getcovercarousel(genre",{"_index":563,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["getcovercarouseldata",{"_index":673,"title":{},"body":{"injectables/DataService.html":{}}}],["getcovercarouseldata(fromtime",{"_index":592,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["getcovercarouseldatawithpublisher",{"_index":674,"title":{},"body":{"injectables/DataService.html":{}}}],["getcovercarouseldatawithpublisher(fromtime",{"_index":689,"title":{},"body":{"injectables/DataService.html":{}}}],["getgamesofpublisheringenre",{"_index":675,"title":{},"body":{"injectables/DataService.html":{}}}],["getgamesofpublisheringenre(publisher",{"_index":663,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["getgenres",{"_index":676,"title":{},"body":{"injectables/DataService.html":{}}}],["getmarketshareforgenreperyear",{"_index":677,"title":{},"body":{"injectables/DataService.html":{}}}],["getmarketshareforgenreperyear(genre",{"_index":640,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["getpublishersforgenre",{"_index":678,"title":{},"body":{"injectables/DataService.html":{}}}],["getpublishersforgenre(genre",{"_index":586,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["gets",{"_index":1022,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["getting",{"_index":1482,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitletext",{"_index":164,"title":{},"body":{"classes/AppPage.html":{}}}],["giuseppe",{"_index":1526,"title":{},"body":{"license.html":{}}}],["given",{"_index":595,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["global",{"_index":302,"title":{},"body":{"components/BarGraphComponent.html":{},"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{}}}],["globalsales",{"_index":598,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"classes/Game.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["globalsalesarr",{"_index":301,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["go",{"_index":1520,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1529,"title":{},"body":{"license.html":{}}}],["graph",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"modules.html":{}}}],["graph'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["graph.component",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["graph.component.ts",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["graph/stacked",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["graphviewcomponent",{"_index":70,"title":{"components/GraphViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["happen",{"_index":789,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["heading",{"_index":1058,"title":{},"body":{"components/GraphViewComponent.html":{}}}],["height",{"_index":445,"title":{},"body":{"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{},"components/RadarChartComponent.html":{}}}],["help",{"_index":1519,"title":{},"body":{"index.html":{}}}],["here",{"_index":832,"title":{},"body":{"components/FooterComponent.html":{}}}],["hereby",{"_index":1528,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":461,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["hide",{"_index":413,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["highest",{"_index":1296,"title":{},"body":{"components/RadarChartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["highlight",{"_index":1277,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["holders",{"_index":1575,"title":{},"body":{"license.html":{}}}],["home",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["home/genre",{"_index":332,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["homebreadcrumb",{"_index":330,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["hostlistener",{"_index":1237,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["hostlistener('window:scroll",{"_index":1253,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["hostlisteners",{"_index":1219,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["hovers",{"_index":1070,"title":{},"body":{"injectables/InteractionService.html":{}}}],["hr",{"_index":468,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["http",{"_index":538,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["http://localhost:4200",{"_index":1494,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":524,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["httpclientmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["i+dynchunksize",{"_index":639,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["i.name",{"_index":1095,"title":{},"body":{"components/NavbarComponent.html":{}}}],["i.plattform",{"_index":1096,"title":{},"body":{"components/NavbarComponent.html":{}}}],["id",{"_index":1410,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["identifier",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":309,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["if(!arr.includes(this.game",{"_index":965,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["if(!obj",{"_index":868,"title":{},"body":{"classes/Game.html":{}}}],["if(!state",{"_index":934,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["if(!this.isgamecardempty",{"_index":420,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["if(!top10gamesbygenrepublisherlist.includes(this.games[0].publisher",{"_index":1198,"title":{},"body":{"components/PieChartComponent.html":{}}}],["if(cachedresult",{"_index":578,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["if(event.active.length",{"_index":307,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["if(game",{"_index":1325,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["if(game.equals(this.game",{"_index":289,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["if(item[0].datasetindex",{"_index":1347,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["if(navigationstart",{"_index":337,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["if(point.length",{"_index":1314,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["if(slicedroute[0",{"_index":344,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["if(slicedroute[1",{"_index":347,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["if(this.radarchart",{"_index":1342,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["if(this.randomid",{"_index":1300,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["image",{"_index":444,"title":{},"body":{"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{}}}],["imgurl",{"_index":837,"title":{},"body":{"classes/Game.html":{}}}],["implement",{"_index":811,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["implementation",{"_index":768,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["implemented",{"_index":790,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["implements",{"_index":195,"title":{},"body":{"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["implied",{"_index":1566,"title":{},"body":{"license.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["important",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["imported",{"_index":760,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["imports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["included",{"_index":1559,"title":{},"body":{"license.html":{}}}],["including",{"_index":1540,"title":{},"body":{"license.html":{}}}],["incomplete",{"_index":730,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["incompleteness",{"_index":735,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{}}}],["inherit",{"_index":376,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{}}}],["initbargraph",{"_index":206,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["initdetailradarchart",{"_index":1275,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["injectable",{"_index":520,"title":{"injectables/DataService.html":{},"injectables/InteractionService.html":{},"injectables/NavigationService.html":{}},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"injectables/InteractionService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"injectables/NavigationService.html":{},"coverage.html":{}}}],["injectables",{"_index":669,"title":{},"body":{"injectables/DataService.html":{},"injectables/InteractionService.html":{},"injectables/NavigationService.html":{},"overview.html":{}}}],["input",{"_index":273,"title":{},"body":{"components/BarGraphComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["inputs",{"_index":210,"title":{},"body":{"components/BarGraphComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["instanceof",{"_index":338,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["interactions",{"_index":764,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["interactionservice",{"_index":396,"title":{"injectables/InteractionService.html":{}},"body":{"components/CoverCardComponent.html":{},"injectables/InteractionService.html":{},"coverage.html":{}}}],["interactive",{"_index":770,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["interesting",{"_index":626,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["interface",{"_index":315,"title":{"interfaces/Breadcrumb.html":{},"interfaces/CoverCarouselStore.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"interfaces/StaticCarousel.html":{}},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/GenreCarouselComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{}}}],["interfaces",{"_index":317,"title":{},"body":{"interfaces/Breadcrumb.html":{},"interfaces/CoverCarouselStore.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"interfaces/StaticCarousel.html":{},"overview.html":{}}}],["international",{"_index":996,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["isgamecardempty",{"_index":392,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["ismarketshareforgenreperyearcached",{"_index":679,"title":{},"body":{"injectables/DataService.html":{}}}],["ismarketshareforgenreperyearcached(genre",{"_index":667,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["italic",{"_index":452,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["item",{"_index":247,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["item.criticscore",{"_index":959,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["item.genre",{"_index":941,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["item.index",{"_index":353,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/GameDetailsComponent.html":{}}}],["item.name",{"_index":943,"title":{},"body":{"components/GameDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["item.plattform",{"_index":1106,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item.userscore",{"_index":958,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["item.year",{"_index":946,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["items",{"_index":506,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["j",{"_index":636,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["jp",{"_index":980,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["jpsales",{"_index":838,"title":{},"body":{"classes/Game.html":{}}}],["jquery",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":1516,"title":{},"body":{"index.html":{}}}],["key",{"_index":1371,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["kind",{"_index":1564,"title":{},"body":{"license.html":{}}}],["label",{"_index":246,"title":{},"body":{"components/BarGraphComponent.html":{},"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{},"components/RadarChartComponent.html":{}}}],["labelarr",{"_index":1317,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["labelcolorarr",{"_index":1323,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["labelcolorarr.push(\"black",{"_index":1327,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["labelcolorarr.push(\"gray",{"_index":1328,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["labels",{"_index":1211,"title":{},"body":{"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["labelstring",{"_index":268,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["languages",{"_index":810,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["last",{"_index":362,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["leastarr",{"_index":957,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["leastarr.push(this.game",{"_index":962,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["leastarr.slice(0",{"_index":961,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["leastarr.sort((a",{"_index":960,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["leastgamesofthispublisher",{"_index":906,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["left",{"_index":407,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{}}}],["legend",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"overview.html":{}}}],["less",{"_index":601,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["liability",{"_index":1579,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1576,"title":{},"body":{"license.html":{}}}],["library",{"_index":755,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["license",{"_index":1522,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":410,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["limitation",{"_index":1541,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1567,"title":{},"body":{"license.html":{}}}],["line",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{}}}],["link",{"_index":1110,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list",{"_index":1197,"title":{},"body":{"components/PieChartComponent.html":{}}}],["literal",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["livecarousel",{"_index":535,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["load",{"_index":784,"title":{},"body":{"components/FaqViewComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["loaddetailgame",{"_index":911,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["loaded",{"_index":1248,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["loadgamesofthispublisher",{"_index":912,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["loadgamesofthisyear",{"_index":913,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["loading",{"_index":1050,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["loadmostgenregamesinthisyear",{"_index":914,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["looks",{"_index":783,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["lowest",{"_index":1297,"title":{},"body":{"components/RadarChartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["main",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["maincontentcomponent",{"_index":71,"title":{"components/MainContentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maintainaspectratio",{"_index":261,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["many",{"_index":796,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["map",{"_index":325,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/NavbarComponent.html":{}}}],["map(term",{"_index":1099,"title":{},"body":{"components/NavbarComponent.html":{}}}],["margin",{"_index":383,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/GameDetailsComponent.html":{},"components/GraphViewComponent.html":{}}}],["marketshare",{"_index":839,"title":{},"body":{"classes/Game.html":{}}}],["marketshareforgenreperyearstore",{"_index":531,"title":{"interfaces/MarketShareForGenrePerYearStore.html":{}},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"coverage.html":{}}}],["matching",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.abs(math.random()).tostring",{"_index":1299,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["math.floor(from",{"_index":489,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["math.floor(to",{"_index":490,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["max",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{}}}],["maxbarthickness",{"_index":298,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["merchantability",{"_index":1569,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1544,"title":{},"body":{"license.html":{}}}],["merging",{"_index":732,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["methods",{"_index":163,"title":{},"body":{"classes/AppPage.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["million",{"_index":270,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["millions",{"_index":439,"title":{},"body":{"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{}}}],["mio",{"_index":260,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["miscellaneous",{"_index":1478,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":804,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["mit",{"_index":1523,"title":{},"body":{"license.html":{}}}],["models/covercarousel",{"_index":417,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["models/game",{"_index":521,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/GenrePublisherViewComponent.html":{},"injectables/InteractionService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"injectables/NavigationService.html":{},"components/RadarChartComponent.html":{}}}],["models/genresalesperyear",{"_index":523,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["modify",{"_index":1543,"title":{},"body":{"license.html":{}}}],["module",{"_index":90,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":92,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":794,"title":{},"body":{"components/FaqViewComponent.html":{},"components/PublisherCarouselComponent.html":{},"index.html":{}}}],["mostarr",{"_index":951,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["mostarr.push(this.game",{"_index":955,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["mostarr.slice(0",{"_index":953,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["mostarr.sort((a",{"_index":952,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["mostgamesofthispublisher",{"_index":907,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["mostgenregamesinthisyear",{"_index":908,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["moz",{"_index":381,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["multilinearray",{"_index":248,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["multilinearray.push(\"genre",{"_index":256,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["multilinearray.push(\"platform",{"_index":249,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["multilinearray.push(\"publisher",{"_index":251,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["multilinearray.push(\"release",{"_index":253,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["multilinearray.push(\"sales",{"_index":258,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["na",{"_index":978,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"index.html":{}}}],["nasales",{"_index":840,"title":{},"body":{"classes/Game.html":{}}}],["navbar",{"_index":1078,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["navbar.component.css",{"_index":1079,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1080,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":73,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":393,"title":{},"body":{"components/CoverCardComponent.html":{},"index.html":{}}}],["navigateto",{"_index":165,"title":{},"body":{"classes/AppPage.html":{}}}],["navigationend",{"_index":321,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["navigationextras",{"_index":418,"title":{},"body":{"components/CoverCardComponent.html":{},"components/NavbarComponent.html":{}}}],["navigationservice",{"_index":216,"title":{"injectables/NavigationService.html":{}},"body":{"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{}}}],["navigationstart",{"_index":322,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["navigationstart.url",{"_index":339,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["need",{"_index":1185,"title":{},"body":{"components/PieChartComponent.html":{}}}],["new",{"_index":540,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"injectables/InteractionService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"index.html":{}}}],["nextindices",{"_index":1264,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["nextindices).foreach(publisher",{"_index":1261,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["ng",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":1218,"title":{},"body":{"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["ngbmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":207,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["ngonchanges(changes",{"_index":225,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["ngoninit",{"_index":208,"title":{},"body":{"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["noninfringement",{"_index":1573,"title":{},"body":{"license.html":{}}}],["note",{"_index":625,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["notice",{"_index":1557,"title":{},"body":{"license.html":{}}}],["noticed",{"_index":728,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["notified",{"_index":1069,"title":{},"body":{"injectables/InteractionService.html":{}}}],["now",{"_index":1202,"title":{},"body":{"components/PieChartComponent.html":{}}}],["nowrap",{"_index":458,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["null",{"_index":1027,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["number",{"_index":475,"title":{},"body":{"classes/CoverCarousel.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"classes/Game.html":{},"classes/GenreSalesPerYear.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{}}}],["number(gameid))[0",{"_index":970,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["number(gameindex))[0].name",{"_index":354,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["obj",{"_index":847,"title":{},"body":{"classes/Game.html":{}}}],["obj.critic_score",{"_index":882,"title":{},"body":{"classes/Game.html":{}}}],["obj.esrb_rating",{"_index":884,"title":{},"body":{"classes/Game.html":{}}}],["obj.eu_sales",{"_index":900,"title":{},"body":{"classes/Game.html":{}}}],["obj.genre",{"_index":886,"title":{},"body":{"classes/Game.html":{}}}],["obj.global_sales",{"_index":888,"title":{},"body":{"classes/Game.html":{}}}],["obj.img_url",{"_index":892,"title":{},"body":{"classes/Game.html":{}}}],["obj.index",{"_index":870,"title":{},"body":{"classes/Game.html":{}}}],["obj.jp_sales",{"_index":894,"title":{},"body":{"classes/Game.html":{}}}],["obj.market_share",{"_index":890,"title":{},"body":{"classes/Game.html":{}}}],["obj.na_sales",{"_index":896,"title":{},"body":{"classes/Game.html":{}}}],["obj.name",{"_index":872,"title":{},"body":{"classes/Game.html":{}}}],["obj.other_sales",{"_index":898,"title":{},"body":{"classes/Game.html":{}}}],["obj.platform",{"_index":874,"title":{},"body":{"classes/Game.html":{}}}],["obj.publisher",{"_index":876,"title":{},"body":{"classes/Game.html":{}}}],["obj.user_score",{"_index":880,"title":{},"body":{"classes/Game.html":{}}}],["obj.year",{"_index":878,"title":{},"body":{"classes/Game.html":{}}}],["object",{"_index":237,"title":{},"body":{"components/BarGraphComponent.html":{},"components/CoverCardComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(avgavailablescores",{"_index":1389,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["object.keys(userscorepergame",{"_index":1369,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["observable",{"_index":530,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{}}}],["obtaining",{"_index":1533,"title":{},"body":{"license.html":{}}}],["occurrences",{"_index":1203,"title":{},"body":{"components/PieChartComponent.html":{}}}],["occurs",{"_index":781,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["onbarclick",{"_index":209,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["onbarclick(event",{"_index":230,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["once",{"_index":795,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["onchanges",{"_index":197,"title":{},"body":{"components/BarGraphComponent.html":{},"components/GameDetailsComponent.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["onclick",{"_index":1276,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["onclick(evt",{"_index":1289,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["ongamecardhover",{"_index":1061,"title":{},"body":{"injectables/InteractionService.html":{}}}],["ongamecardhover(game",{"_index":1063,"title":{},"body":{"injectables/InteractionService.html":{}}}],["onhover",{"_index":394,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["onhoverout",{"_index":395,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["oninit",{"_index":196,"title":{},"body":{"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["onready",{"_index":537,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["onscroll",{"_index":1254,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["opacity",{"_index":999,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["optimized",{"_index":791,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["optional",{"_index":219,"title":{},"body":{"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"injectables/DataService.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"injectables/InteractionService.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{}}}],["options",{"_index":1346,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["ordering",{"_index":602,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["othercount",{"_index":1210,"title":{},"body":{"components/PieChartComponent.html":{}}}],["othersales",{"_index":841,"title":{},"body":{"classes/Game.html":{}}}],["otherwise",{"_index":1584,"title":{},"body":{"license.html":{}}}],["out",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overflow",{"_index":460,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["overview",{"_index":1592,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1455,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":382,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/GameDetailsComponent.html":{}}}],["pandas",{"_index":754,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["param",{"_index":1141,"title":{},"body":{"injectables/NavigationService.html":{}}}],["parameters",{"_index":218,"title":{},"body":{"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"injectables/DataService.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"injectables/InteractionService.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{}}}],["particular",{"_index":1571,"title":{},"body":{"license.html":{}}}],["path",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":549,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["percentage_per_year",{"_index":1053,"title":{},"body":{"classes/GenreSalesPerYear.html":{}}}],["performance",{"_index":785,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["period",{"_index":744,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["permission",{"_index":1527,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1551,"title":{},"body":{"license.html":{}}}],["person",{"_index":1532,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1552,"title":{},"body":{"license.html":{}}}],["pie",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["piechartcomponent",{"_index":75,"title":{"components/PieChartComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["piechartdata",{"_index":1153,"title":{},"body":{"components/PieChartComponent.html":{}}}],["piechartlabels",{"_index":1154,"title":{},"body":{"components/PieChartComponent.html":{}}}],["piechartoptions",{"_index":1155,"title":{},"body":{"components/PieChartComponent.html":{}}}],["piecharttype",{"_index":1156,"title":{},"body":{"components/PieChartComponent.html":{}}}],["pieusecase",{"_index":909,"title":{},"body":{"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/PieChartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pieusecase.details_view_sale_distribution",{"_index":1174,"title":{},"body":{"components/PieChartComponent.html":{}}}],["pieusecase.top100_genre_publisher",{"_index":1183,"title":{},"body":{"components/PieChartComponent.html":{}}}],["place",{"_index":766,"title":{},"body":{"components/FaqViewComponent.html":{},"components/FooterComponent.html":{}}}],["placeholder",{"_index":463,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["placement",{"_index":406,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["platform",{"_index":431,"title":{},"body":{"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{}}}],["platforms",{"_index":799,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["plattform",{"_index":842,"title":{},"body":{"classes/Game.html":{}}}],["point",{"_index":1312,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["point[0]._index",{"_index":1315,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["pointbackgroundcolor",{"_index":1339,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["pointer",{"_index":1271,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["pointlabels",{"_index":1357,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["portions",{"_index":1561,"title":{},"body":{"license.html":{}}}],["position",{"_index":1167,"title":{},"body":{"components/PieChartComponent.html":{}}}],["possible",{"_index":800,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["pre",{"_index":816,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["preprocessing",{"_index":751,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["primary_outlet",{"_index":323,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["private",{"_index":280,"title":{},"body":{"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{},"components/NavbarComponent.html":{},"components/RadarChartComponent.html":{}}}],["problem",{"_index":723,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["problems",{"_index":786,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["processing",{"_index":749,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["prod",{"_index":1507,"title":{},"body":{"index.html":{}}}],["production",{"_index":1509,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1484,"title":{},"body":{"index.html":{}}}],["promise",{"_index":168,"title":{},"body":{"classes/AppPage.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["promise((resolve",{"_index":564,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["prop",{"_index":212,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"injectables/InteractionService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{}}}],["protractor",{"_index":170,"title":{},"body":{"classes/AppPage.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"index.html":{}}}],["provided",{"_index":1562,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":532,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"injectables/InteractionService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"injectables/NavigationService.html":{}}}],["providers",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":200,"title":{},"body":{"components/BarGraphComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"injectables/InteractionService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["publish",{"_index":1545,"title":{},"body":{"license.html":{}}}],["published",{"_index":797,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["publisher",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"coverage.html":{}}}],["publisher:string",{"_index":1422,"title":{},"body":{"classes/SharePerYearPerPublisher.html":{}}}],["publisherbreadcrumb",{"_index":333,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["publishercarouselcomponent",{"_index":78,"title":{"components/PublisherCarouselComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["publisherclustereddata",{"_index":613,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["publisherclustereddata.push",{"_index":615,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["publishergenre",{"_index":303,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["publisherindex",{"_index":1215,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["publisherlist",{"_index":1216,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["publisheroccurencearray",{"_index":1200,"title":{},"body":{"components/PieChartComponent.html":{}}}],["publishers",{"_index":775,"title":{},"body":{"components/FaqViewComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["publishers.foreach(publisher",{"_index":1250,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["purpose",{"_index":1572,"title":{},"body":{"license.html":{}}}],["pyhton",{"_index":814,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["python",{"_index":753,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["questions",{"_index":713,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["radar",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["radarchart",{"_index":1272,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["radarchartcomponent",{"_index":79,"title":{"components/RadarChartComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["radardata",{"_index":1335,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["radaroptions",{"_index":1407,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["radarusecase",{"_index":910,"title":{},"body":{"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/RadarChartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["radarusecase.crit_user_score_details",{"_index":932,"title":{},"body":{"components/GameDetailsComponent.html":{},"components/RadarChartComponent.html":{}}}],["radarusecase.crit_user_score_highest",{"_index":1304,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["radarusecase.crit_user_score_lowest",{"_index":1307,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["radius",{"_index":379,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["randomid",{"_index":1273,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["range",{"_index":608,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["rating",{"_index":988,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["ratings",{"_index":720,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["rawdata",{"_index":1278,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["readingamedataset",{"_index":551,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["readingenresalesperyears",{"_index":554,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["readme",{"_index":1521,"title":{},"body":{"index.html":{}}}],["ready",{"_index":1024,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["real",{"_index":767,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["redirectto",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduced",{"_index":736,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["reject",{"_index":565,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["release",{"_index":433,"title":{},"body":{"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{}}}],["reload",{"_index":1496,"title":{},"body":{"index.html":{}}}],["removes",{"_index":1124,"title":{},"body":{"injectables/NavigationService.html":{}}}],["rendering",{"_index":782,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["repeat",{"_index":447,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["replace('_",{"_index":1147,"title":{},"body":{"injectables/NavigationService.html":{}}}],["replace('__",{"_index":1146,"title":{},"body":{"injectables/NavigationService.html":{}}}],["replaces",{"_index":1126,"title":{},"body":{"injectables/NavigationService.html":{}}}],["replaysubject",{"_index":1137,"title":{},"body":{"injectables/NavigationService.html":{}}}],["replaysubject(null",{"_index":1134,"title":{},"body":{"injectables/NavigationService.html":{}}}],["require",{"_index":1452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":632,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["res.push(new",{"_index":654,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["res.push({from",{"_index":638,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["reset",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve(cachedresult.data",{"_index":579,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["responsive",{"_index":1166,"title":{},"body":{"components/PieChartComponent.html":{}}}],["restriction",{"_index":1539,"title":{},"body":{"license.html":{}}}],["result",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":171,"title":{},"body":{"classes/AppPage.html":{},"components/BarGraphComponent.html":{},"components/CoverCardComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"injectables/NavigationService.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["returns",{"_index":167,"title":{},"body":{"classes/AppPage.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["rgba(0,164,255,0.1",{"_index":1340,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["rgba(0,164,255,0.5",{"_index":1341,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["rgba(17,255,0,0.1",{"_index":1336,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["rgba(17,255,0,0.5",{"_index":1338,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["right",{"_index":515,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["rights",{"_index":1542,"title":{},"body":{"license.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"injectables/InteractionService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"injectables/NavigationService.html":{}}}],["root'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["route",{"_index":335,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["route.slice(1).split",{"_index":341,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["router",{"_index":215,"title":{},"body":{"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["router:router",{"_index":279,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["routermodule",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":178,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1491,"title":{},"body":{"index.html":{}}}],["running",{"_index":1510,"title":{},"body":{"index.html":{}}}],["rx",{"_index":525,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["rx.behaviorsubject",{"_index":536,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["rx.behaviorsubject(false",{"_index":542,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["rx.observable",{"_index":552,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["rxjs",{"_index":526,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"injectables/InteractionService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":326,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/NavbarComponent.html":{}}}],["sale",{"_index":997,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["sales",{"_index":269,"title":{},"body":{"components/BarGraphComponent.html":{},"components/CoverCardComponent.html":{},"components/FaqViewComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"components/PieChartComponent.html":{}}}],["sales\",\"jp",{"_index":1181,"title":{},"body":{"components/PieChartComponent.html":{}}}],["sales\",\"na",{"_index":1182,"title":{},"body":{"components/PieChartComponent.html":{}}}],["scaffolding",{"_index":1500,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1356,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["scalelabel",{"_index":267,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["scales",{"_index":265,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["scaleshowverticallines",{"_index":263,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["score",{"_index":436,"title":{},"body":{"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{},"components/RadarChartComponent.html":{}}}],["scorearr[0",{"_index":1401,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["scorearr[2",{"_index":1403,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["scorearr[3",{"_index":1404,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["scorekeys",{"_index":1368,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["scores",{"_index":1049,"title":{},"body":{"components/GenrePublisherViewComponent.html":{},"components/RadarChartComponent.html":{}}}],["script",{"_index":740,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["scrollpositionrestoration",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search",{"_index":1082,"title":{},"body":{"components/NavbarComponent.html":{}}}],["searchparams",{"_index":1103,"title":{},"body":{"components/NavbarComponent.html":{}}}],["searchparams[0",{"_index":1105,"title":{},"body":{"components/NavbarComponent.html":{}}}],["searchparams[1])[0",{"_index":1107,"title":{},"body":{"components/NavbarComponent.html":{}}}],["searchquery",{"_index":1083,"title":{},"body":{"components/NavbarComponent.html":{}}}],["second",{"_index":776,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["seconds",{"_index":780,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["selected",{"_index":724,"title":{},"body":{"components/FaqViewComponent.html":{},"components/RadarChartComponent.html":{}}}],["selecting",{"_index":773,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["sell",{"_index":1549,"title":{},"body":{"license.html":{}}}],["separator",{"_index":503,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["separator::after",{"_index":509,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["separator::before",{"_index":508,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["serve",{"_index":1492,"title":{},"body":{"index.html":{}}}],["server",{"_index":1490,"title":{},"body":{"index.html":{}}}],["services/dataservice",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["services/interaction.service",{"_index":419,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["services/navigate.service",{"_index":327,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/NavbarComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["set",{"_index":714,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["set(filtered.map(game",{"_index":646,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["set(filteredlist.map(game",{"_index":590,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["set(top100gamesbygenre.map(game",{"_index":1194,"title":{},"body":{"components/PieChartComponent.html":{}}}],["several",{"_index":801,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["shall",{"_index":1558,"title":{},"body":{"license.html":{}}}],["share",{"_index":1414,"title":{},"body":{"classes/SharePerYearPerPublisher.html":{}}}],["share:number",{"_index":1421,"title":{},"body":{"classes/SharePerYearPerPublisher.html":{}}}],["shared/bargraph/bargraph.component",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/breadcrumb/breadcrumb.component",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/cover",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/pie",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{}}}],["shared/radar",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"components/GenrePublisherViewComponent.html":{}}}],["shareperyearperpublisher",{"_index":528,"title":{"classes/SharePerYearPerPublisher.html":{}},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"classes/SharePerYearPerPublisher.html":{},"coverage.html":{}}}],["shareperyearperpublisher(year",{"_index":655,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["show",{"_index":807,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["shown",{"_index":717,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["simplechanges",{"_index":226,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["site",{"_index":812,"title":{},"body":{"components/FaqViewComponent.html":{},"components/GraphViewComponent.html":{}}}],["size",{"_index":446,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/GameDetailsComponent.html":{}}}],["slicedroute",{"_index":340,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["slicedroute[1",{"_index":357,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["slicedroute[2",{"_index":350,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["slicedroute[3",{"_index":359,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["slicedroute[4].split('%20').foreach(word",{"_index":363,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["software",{"_index":1535,"title":{},"body":{"license.html":{}}}],["sold",{"_index":991,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["solid",{"_index":513,"title":{},"body":{"components/CoverCarouselComponent.html":{}}}],["sort",{"_index":597,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["sortableavgavailablescores",{"_index":1388,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["sortableavgavailablescores.push([game",{"_index":1390,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["sortableavgavailablescores.sort(function(a",{"_index":1395,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["sortedbylowestavailscores",{"_index":1394,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["sortedbylowestavailscores.reverse().slice(0",{"_index":1398,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["sortedbylowestavailscores.slice(0",{"_index":1399,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["sorteddataforgenrebysales",{"_index":1189,"title":{},"body":{"components/PieChartComponent.html":{}}}],["sorteddataforgenrebysales.slice(0,100",{"_index":1192,"title":{},"body":{"components/PieChartComponent.html":{}}}],["sortedslicedscores",{"_index":1396,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["sortedslicedscores.map(scorearr",{"_index":1400,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["sortorder",{"_index":1282,"title":{},"body":{"components/RadarChartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.highest",{"_index":1397,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"components/GraphViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{},"index.html":{}}}],["space",{"_index":457,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["spaces",{"_index":1125,"title":{},"body":{"injectables/NavigationService.html":{}}}],["span')).gettext",{"_index":175,"title":{},"body":{"classes/AppPage.html":{}}}],["spangaps",{"_index":1355,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["spec\\.ts",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pie",{"_index":1480,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../radar",{"_index":1481,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/footer/footer.component.ts",{"_index":825,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts:12",{"_index":830,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:8",{"_index":829,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/main",{"_index":704,"title":{},"body":{"components/FaqViewComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":1077,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:15",{"_index":1089,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:16",{"_index":1085,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:22",{"_index":1087,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:28",{"_index":1088,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:37",{"_index":1086,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/services/dataservice",{"_index":928,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["src/app/services/dataservice.ts",{"_index":518,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"coverage.html":{}}}],["src/app/services/dataservice.ts:136",{"_index":692,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:141",{"_index":694,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:147",{"_index":688,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:175",{"_index":690,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:199",{"_index":685,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:241",{"_index":693,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:276",{"_index":691,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:283",{"_index":695,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:287",{"_index":683,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:30",{"_index":700,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:31",{"_index":701,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:32",{"_index":703,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:33",{"_index":699,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:34",{"_index":702,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:35",{"_index":682,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:52",{"_index":696,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:56",{"_index":697,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:60",{"_index":698,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/dataservice.ts:68",{"_index":687,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/interaction.service.ts",{"_index":1059,"title":{},"body":{"injectables/InteractionService.html":{},"coverage.html":{}}}],["src/app/services/interaction.service.ts:13",{"_index":1064,"title":{},"body":{"injectables/InteractionService.html":{}}}],["src/app/services/interaction.service.ts:9",{"_index":1062,"title":{},"body":{"injectables/InteractionService.html":{}}}],["src/app/services/navigate.service",{"_index":277,"title":{},"body":{"components/BarGraphComponent.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["src/app/services/navigate.service.ts",{"_index":1112,"title":{},"body":{"injectables/NavigationService.html":{},"coverage.html":{}}}],["src/app/services/navigate.service.ts:10",{"_index":1136,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/services/navigate.service.ts:11",{"_index":1118,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/services/navigate.service.ts:17",{"_index":1131,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/services/navigate.service.ts:21",{"_index":1133,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/services/navigate.service.ts:25",{"_index":1129,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/services/navigate.service.ts:34",{"_index":1123,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/services/navigate.service.ts:38",{"_index":1120,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/services/navigate.service.ts:9",{"_index":1135,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts",{"_index":194,"title":{},"body":{"components/BarGraphComponent.html":{},"coverage.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:11",{"_index":217,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:117",{"_index":231,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:14",{"_index":220,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:15",{"_index":221,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:16",{"_index":222,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:18",{"_index":271,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:51",{"_index":272,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:52",{"_index":236,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:53",{"_index":233,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:54",{"_index":234,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:56",{"_index":229,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:61",{"_index":227,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/bargraph/bargraph.component.ts:66",{"_index":223,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["src/app/shared/breadcrumb/breadcrumb.component.ts",{"_index":318,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"coverage.html":{}}}],["src/app/shared/breadcrumb/breadcrumb.component.ts:18",{"_index":371,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/shared/breadcrumb/breadcrumb.component.ts:19",{"_index":370,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/shared/breadcrumb/breadcrumb.component.ts:20",{"_index":372,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/shared/breadcrumb/breadcrumb.component.ts:21",{"_index":368,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/shared/breadcrumb/breadcrumb.component.ts:28",{"_index":369,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/shared/cover",{"_index":386,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"coverage.html":{}}}],["src/app/shared/pie",{"_index":1148,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/radar",{"_index":929,"title":{},"body":{"components/GameDetailsComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/environments/environment.prod.ts",{"_index":1444,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1448,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/covercarousel",{"_index":527,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["src/models/covercarousel.ts",{"_index":470,"title":{},"body":{"classes/CoverCarousel.html":{},"coverage.html":{}}}],["src/models/covercarousel.ts:13",{"_index":479,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["src/models/covercarousel.ts:14",{"_index":477,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["src/models/covercarousel.ts:15",{"_index":480,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["src/models/covercarousel.ts:16",{"_index":478,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["src/models/covercarousel.ts:3",{"_index":476,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["src/models/game",{"_index":276,"title":{},"body":{"components/BarGraphComponent.html":{},"components/GameDetailsComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{}}}],["src/models/game.ts",{"_index":833,"title":{},"body":{"classes/Game.html":{},"coverage.html":{}}}],["src/models/game.ts:1",{"_index":846,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:22",{"_index":855,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:23",{"_index":858,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:24",{"_index":852,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:25",{"_index":850,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:26",{"_index":861,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:27",{"_index":862,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:28",{"_index":849,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:29",{"_index":863,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:30",{"_index":853,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:31",{"_index":856,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:32",{"_index":851,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:33",{"_index":859,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:34",{"_index":860,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:35",{"_index":864,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:36",{"_index":854,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:37",{"_index":857,"title":{},"body":{"classes/Game.html":{}}}],["src/models/game.ts:39",{"_index":866,"title":{},"body":{"classes/Game.html":{}}}],["src/models/genresalesperyear.ts",{"_index":1052,"title":{},"body":{"classes/GenreSalesPerYear.html":{},"coverage.html":{}}}],["src/models/genresalesperyear.ts:3",{"_index":1057,"title":{},"body":{"classes/GenreSalesPerYear.html":{}}}],["src/models/genresalesperyear.ts:4",{"_index":1054,"title":{},"body":{"classes/GenreSalesPerYear.html":{}}}],["src/models/genresalesperyear.ts:5",{"_index":1056,"title":{},"body":{"classes/GenreSalesPerYear.html":{}}}],["src/models/genresalesperyear.ts:6",{"_index":1055,"title":{},"body":{"classes/GenreSalesPerYear.html":{}}}],["src/models/shareperyearperpublisher",{"_index":529,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["src/models/shareperyearperpublisher.ts",{"_index":1413,"title":{},"body":{"classes/SharePerYearPerPublisher.html":{},"coverage.html":{}}}],["src/models/shareperyearperpublisher.ts:1",{"_index":1416,"title":{},"body":{"classes/SharePerYearPerPublisher.html":{}}}],["src/models/shareperyearperpublisher.ts:10",{"_index":1417,"title":{},"body":{"classes/SharePerYearPerPublisher.html":{}}}],["src/models/shareperyearperpublisher.ts:8",{"_index":1419,"title":{},"body":{"classes/SharePerYearPerPublisher.html":{}}}],["src/models/shareperyearperpublisher.ts:9",{"_index":1418,"title":{},"body":{"classes/SharePerYearPerPublisher.html":{}}}],["src/test.ts",{"_index":1450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacked",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["stackedlinegraphcomponent",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"coverage.html":{},"overview.html":{}}}],["started",{"_index":1483,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["staticcarousel",{"_index":1018,"title":{"interfaces/StaticCarousel.html":{}},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{}}}],["staticcarousels",{"_index":1006,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["sticky",{"_index":831,"title":{},"body":{"components/FooterComponent.html":{}}}],["still",{"_index":778,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["store",{"_index":656,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["stored",{"_index":1504,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"classes/Game.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{}}}],["style",{"_index":451,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["subject",{"_index":1068,"title":{},"body":{"injectables/InteractionService.html":{},"license.html":{}}}],["sublicense",{"_index":1547,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1067,"title":{},"body":{"injectables/InteractionService.html":{}}}],["substantial",{"_index":1560,"title":{},"body":{"license.html":{}}}],["successful",{"_index":993,"title":{},"body":{"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{}}}],["sum",{"_index":620,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["sumcriticscores",{"_index":1382,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["sumsalespublisheryear",{"_index":652,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["sumuserscores",{"_index":1378,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["support",{"_index":1588,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1589,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1302,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["switch(this.prop",{"_index":285,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["switch(this.usecase",{"_index":1173,"title":{},"body":{"components/PieChartComponent.html":{}}}],["table",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":765,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["term.length",{"_index":1100,"title":{},"body":{"components/NavbarComponent.html":{}}}],["test",{"_index":1513,"title":{},"body":{"index.html":{}}}],["tested",{"_index":772,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["tests",{"_index":1512,"title":{},"body":{"index.html":{}}}],["text",{"_index":448,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/GameDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["text$.pipe",{"_index":1097,"title":{},"body":{"components/NavbarComponent.html":{}}}],["that's",{"_index":806,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["that\\'s",{"_index":824,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["theme",{"_index":409,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["therefore",{"_index":731,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["this.barchartdata",{"_index":283,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["this.barchartdata.push",{"_index":295,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["this.barchartlabels",{"_index":292,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["this.breadcrumbs",{"_index":343,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["this.breadcrumbs[0",{"_index":345,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["this.breadcrumbs[1",{"_index":356,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["this.breadcrumbs[2",{"_index":366,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["this.calculatestaticcarouseldata(this.dataservice.getgenres",{"_index":1031,"title":{},"body":{"components/GenreCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["this.calculatestaticcarouseldata(this.publisherlist.slice(0",{"_index":1245,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["this.carouselfullyloaded",{"_index":1266,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["this.carouselreloadstepsize",{"_index":1259,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["this.covercarouselstore.filter((cachedresult",{"_index":571,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.createusercriticscoreradar(sortorder.highest",{"_index":1306,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.createusercriticscoreradar(sortorder.lowest",{"_index":1308,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.criticscore",{"_index":881,"title":{},"body":{"classes/Game.html":{}}}],["this.data",{"_index":1021,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["this.data.foreach(game",{"_index":288,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["this.data.map(x",{"_index":293,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["this.data[idx",{"_index":311,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["this.data[item.index].genre",{"_index":257,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["this.data[item.index].globalsales",{"_index":259,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["this.data[item.index].plattform",{"_index":250,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["this.data[item.index].publisher",{"_index":252,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["this.data[item.index].year",{"_index":255,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["this.dataservice.gamedataset.filter(game",{"_index":1187,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.dataservice.gamedataset.filter(item",{"_index":352,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/GameDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["this.dataservice.gamedataset.map(i",{"_index":1094,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.dataservice.getcovercarousel(card,null,1980,2019",{"_index":1032,"title":{},"body":{"components/GenreCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["this.dataservice.getcovercarousel(this.genre",{"_index":1251,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["this.dataservice.getgamesofpublisheringenre(this.publisher",{"_index":1048,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["this.dataservice.getpublishersforgenre(this.genre",{"_index":1241,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["this.dataservice.livecarousel$.subscribe(data",{"_index":1020,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["this.dataservice.onready$.subscribe",{"_index":1092,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.dataservice.onready$.subscribe((state",{"_index":933,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.dataservice.onready$.subscribe(ready",{"_index":1025,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["this.dataservice.updatecovercarousel('racing",{"_index":1026,"title":{},"body":{"components/GenreCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["this.dataservice.updatecovercarousel(this.genre",{"_index":1239,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["this.esrbrating",{"_index":883,"title":{},"body":{"classes/Game.html":{}}}],["this.eusales",{"_index":899,"title":{},"body":{"classes/Game.html":{}}}],["this.fromyear",{"_index":486,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["this.game",{"_index":484,"title":{},"body":{"classes/CoverCarousel.html":{},"components/GameDetailsComponent.html":{}}}],["this.game$.next(game",{"_index":1140,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.game.eusales",{"_index":1176,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.game.game.index",{"_index":421,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["this.game.game.name",{"_index":425,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["this.game.genre",{"_index":942,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game.jpsales",{"_index":1177,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.game.name",{"_index":944,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game.nasales",{"_index":1178,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.game.othersales",{"_index":1179,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.game.year",{"_index":945,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.criticscore",{"_index":987,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.esrbrating",{"_index":989,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.eusales",{"_index":983,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.game.genre",{"_index":429,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["this.game?.game.globalsales",{"_index":438,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["this.game?.game.name",{"_index":428,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["this.game?.game.plattform",{"_index":432,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["this.game?.game.publisher",{"_index":430,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["this.game?.game.userscore",{"_index":437,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["this.game?.game.year",{"_index":434,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["this.game?.genre",{"_index":974,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.globalsales",{"_index":977,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.jpsales",{"_index":981,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.name",{"_index":972,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.nasales",{"_index":979,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.othersales",{"_index":984,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.plattform",{"_index":973,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.publisher",{"_index":975,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.userscore",{"_index":985,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.game?.year",{"_index":976,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.gamecardhoversubject$.next(game",{"_index":1071,"title":{},"body":{"injectables/InteractionService.html":{}}}],["this.gamedataset",{"_index":596,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.gamedataset.filter((game",{"_index":643,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.gamedataset.filter(game",{"_index":588,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.gamedataset.push(new",{"_index":544,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.gamenamelist",{"_index":1093,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.games",{"_index":1047,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["this.games[0].genre",{"_index":1188,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.gamesinthisyear",{"_index":967,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.genre",{"_index":885,"title":{},"body":{"classes/Game.html":{},"components/GenrePublisherViewComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["this.genre$.next(genre",{"_index":1138,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.genrebreadcrumb.url",{"_index":358,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["this.genresalesperyears",{"_index":547,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.getcovercarousel(genre",{"_index":559,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.globalsales",{"_index":887,"title":{},"body":{"classes/Game.html":{}}}],["this.highlight",{"_index":1326,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.homebreadcrumb",{"_index":346,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["this.http.get('./assets/preprocessed_dataset.json",{"_index":553,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.http.get('./assets/salesperyeargenre.json",{"_index":555,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.imgurl",{"_index":891,"title":{},"body":{"classes/Game.html":{}}}],["this.index",{"_index":869,"title":{},"body":{"classes/Game.html":{}}}],["this.initbargraph",{"_index":282,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["this.initdetailradarchart",{"_index":1309,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.interactionservice.ongamecardhover(null",{"_index":424,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["this.interactionservice.ongamecardhover(this.game.game",{"_index":423,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["this.jpsales",{"_index":893,"title":{},"body":{"classes/Game.html":{}}}],["this.leastgamesofthispublisher",{"_index":963,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.livecarousel",{"_index":539,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.livecarousel$.next(carousellist",{"_index":561,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.loaddetailgame",{"_index":935,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.loadgamesofthispublisher",{"_index":936,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.loadgamesofthisyear",{"_index":937,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.loadmostgenregamesinthisyear",{"_index":938,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.marketshare",{"_index":889,"title":{},"body":{"classes/Game.html":{}}}],["this.marketshareforgenreperyearstore.filter(data",{"_index":658,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.marketshareforgenreperyearstore.push({genre",{"_index":661,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.mostgamesofthispublisher",{"_index":956,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.mostgenregamesinthisyear",{"_index":950,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.name",{"_index":871,"title":{},"body":{"classes/Game.html":{}}}],["this.nasales",{"_index":895,"title":{},"body":{"classes/Game.html":{}}}],["this.navigationservice.game$.subscribe(value",{"_index":355,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["this.navigationservice.updategame(game",{"_index":312,"title":{},"body":{"components/BarGraphComponent.html":{},"components/NavbarComponent.html":{},"components/RadarChartComponent.html":{}}}],["this.navigationservice.updategame(this.game.game",{"_index":422,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["this.navigationservice.updategenre(this.genre",{"_index":1238,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["this.ngafterviewinit",{"_index":1301,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.onready",{"_index":541,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.onready$.next(true",{"_index":550,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.othersales",{"_index":897,"title":{},"body":{"classes/Game.html":{}}}],["this.piechartdata",{"_index":1175,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.piechartlabels",{"_index":1180,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.plattform",{"_index":873,"title":{},"body":{"classes/Game.html":{}}}],["this.publisher",{"_index":875,"title":{},"body":{"classes/Game.html":{},"components/GenrePublisherViewComponent.html":{},"classes/SharePerYearPerPublisher.html":{}}}],["this.publisher$.next(publisher",{"_index":1139,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.publisherbreadcrumb.name",{"_index":360,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["this.publisherbreadcrumb.url",{"_index":361,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["this.publisherbreadcrumb.url.replace('%20",{"_index":367,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["this.publisherindex",{"_index":1243,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["this.publisherlist",{"_index":1240,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["this.publisherlist.length",{"_index":1258,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["this.publisherlist.slice(this.publisherindex",{"_index":1260,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["this.radarchart",{"_index":1344,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.radarchart.destroy",{"_index":1343,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.radarchart.getelementatevent(evt",{"_index":1313,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.radarusecase",{"_index":931,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.randomid",{"_index":1298,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.rawdata",{"_index":1361,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.rawdata.foreach(game",{"_index":1324,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.rawdata.map(x",{"_index":1318,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.rawdata[idx",{"_index":1316,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.rawdata[item.index].genre",{"_index":1353,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.rawdata[item.index].globalsales",{"_index":1354,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.rawdata[item.index].plattform",{"_index":1350,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.rawdata[item.index].publisher",{"_index":1351,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.rawdata[item.index].year",{"_index":1352,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.rawdata[item[0].index].criticscore",{"_index":1348,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.rawdata[item[0].index].userscore",{"_index":1349,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.readingamedataset().subscribe(data",{"_index":543,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.readingenresalesperyears().subscribe(data",{"_index":546,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["this.route.snapshot.params.genreid",{"_index":1046,"title":{},"body":{"components/GenrePublisherViewComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["this.route.snapshot.params.publisherid",{"_index":1045,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["this.route.snapshot.params[\"gameid",{"_index":969,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.router.events.subscribe((navigationstart",{"_index":336,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["this.router.events.subscribe((value",{"_index":939,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["this.router.navigate(['/home/details",{"_index":1108,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate([`/home/details",{"_index":313,"title":{},"body":{"components/BarGraphComponent.html":{},"components/CoverCardComponent.html":{},"components/RadarChartComponent.html":{}}}],["this.searchquery.split",{"_index":1104,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.share",{"_index":1423,"title":{},"body":{"classes/SharePerYearPerPublisher.html":{}}}],["this.staticcarousels.push(...calculatedcarousels",{"_index":1265,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["this.staticcarousels.push({title",{"_index":1034,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["this.timespanstring",{"_index":488,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["this.toyear",{"_index":485,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["this.usecase",{"_index":1303,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["this.userscore",{"_index":879,"title":{},"body":{"classes/Game.html":{}}}],["this.year",{"_index":877,"title":{},"body":{"classes/Game.html":{},"classes/SharePerYearPerPublisher.html":{}}}],["thisyear",{"_index":287,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["through",{"_index":739,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["time",{"_index":607,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["timebin",{"_index":581,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["timeinterval",{"_index":580,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["times",{"_index":802,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["timespanstring",{"_index":472,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CoverCardComponent.html":{},"components/GenreCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["to:number",{"_index":482,"title":{},"body":{"classes/CoverCarousel.html":{}}}],["together",{"_index":1209,"title":{},"body":{"components/PieChartComponent.html":{}}}],["tooltip",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"components/BarGraphComponent.html":{},"components/CoverCardComponent.html":{},"components/RadarChartComponent.html":{},"dependencies.html":{}}}],["tooltip.displaycolors",{"_index":244,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["tooltipmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["tooltipoptions",{"_index":391,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["tooltips",{"_index":238,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["top",{"_index":384,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["top100_genre_publisher",{"_index":1172,"title":{},"body":{"components/PieChartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["top100gamesbygenre",{"_index":1191,"title":{},"body":{"components/PieChartComponent.html":{}}}],["top10gamesbygenrepublisherlist",{"_index":1193,"title":{},"body":{"components/PieChartComponent.html":{}}}],["top10gamesbygenrepublisherlist.push(this.games[0].publisher",{"_index":1199,"title":{},"body":{"components/PieChartComponent.html":{}}}],["tort",{"_index":1583,"title":{},"body":{"license.html":{}}}],["totalpublishershare",{"_index":618,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["totalpublishershare.length",{"_index":635,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["totalpublishershare.push({publisher:cluster.publisher",{"_index":623,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["totalpublishershare.sort((a",{"_index":628,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["totalsalesperyear",{"_index":644,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["totalsalesperyear[year",{"_index":649,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["totalshare:sum",{"_index":624,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["totime",{"_index":593,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["toyear",{"_index":473,"title":{},"body":{"classes/CoverCarousel.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["trackbyfn",{"_index":1008,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{}}}],["trackbyfn(index",{"_index":1014,"title":{},"body":{"components/GenreCarouselComponent.html":{},"components/PublisherCarouselComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["transformations",{"_index":750,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["true",{"_index":262,"title":{},"body":{"components/BarGraphComponent.html":{},"components/FaqViewComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":566,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["tslib",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":733,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"classes/CoverCarousel.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"classes/GenreSalesPerYear.html":{},"injectables/InteractionService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":818,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["typescript(javascript",{"_index":815,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["undefined",{"_index":940,"title":{},"body":{"components/GameDetailsComponent.html":{}}}],["uniquegenres",{"_index":585,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["uniquepublisher",{"_index":614,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["uniquepublishers",{"_index":589,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["uniqueyears",{"_index":645,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["unit",{"_index":1511,"title":{},"body":{"index.html":{}}}],["unset",{"_index":380,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{}}}],["updatecovercarousel",{"_index":680,"title":{},"body":{"injectables/DataService.html":{}}}],["updatecovercarousel(genre",{"_index":556,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["updategame",{"_index":1115,"title":{},"body":{"injectables/NavigationService.html":{}}}],["updategame(game",{"_index":1128,"title":{},"body":{"injectables/NavigationService.html":{}}}],["updategenre",{"_index":1116,"title":{},"body":{"injectables/NavigationService.html":{}}}],["updategenre(genre",{"_index":1130,"title":{},"body":{"injectables/NavigationService.html":{}}}],["updatepublisher",{"_index":1117,"title":{},"body":{"injectables/NavigationService.html":{}}}],["updatepublisher(publisher",{"_index":1132,"title":{},"body":{"injectables/NavigationService.html":{}}}],["url",{"_index":319,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"injectables/NavigationService.html":{}}}],["url('../../../../assets/no_image.png",{"_index":465,"title":{},"body":{"components/CoverCardComponent.html":{}}}],["url.replace",{"_index":1142,"title":{},"body":{"injectables/NavigationService.html":{}}}],["use",{"_index":808,"title":{},"body":{"components/FaqViewComponent.html":{},"components/RadarChartComponent.html":{},"index.html":{},"license.html":{}}}],["usecase",{"_index":1157,"title":{},"body":{"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["used",{"_index":715,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["user",{"_index":435,"title":{},"body":{"components/CoverCardComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/RadarChartComponent.html":{}}}],["usercolorarr",{"_index":1332,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["usercolorarr.push(\"red",{"_index":1333,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["usercolorarr.push(\"rgba(0,164,255,1",{"_index":1334,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["userscore",{"_index":843,"title":{},"body":{"classes/Game.html":{},"components/RadarChartComponent.html":{}}}],["userscorearr",{"_index":1319,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["userscoredata",{"_index":1402,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["userscorepergame",{"_index":1359,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["userscorepergame[game.name",{"_index":1362,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["userscorepergame[game.name].push(game.userscore",{"_index":1364,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["userscorepergame[key].length",{"_index":1372,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["userscorepergame[key].map(number",{"_index":1375,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["userscores",{"_index":1374,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["userscores.length",{"_index":1381,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["userscores.reduce((a",{"_index":1379,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["v.tolowercase().indexof(term.tolowercase",{"_index":1101,"title":{},"body":{"components/NavbarComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"injectables/DataService.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"injectables/InteractionService.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["variable",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1596,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1487,"title":{},"body":{"index.html":{}}}],["vgchartz.com",{"_index":743,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["via",{"_index":1515,"title":{},"body":{"index.html":{}}}],["video",{"_index":719,"title":{},"body":{"components/FaqViewComponent.html":{},"components/NavbarComponent.html":{}}}],["view",{"_index":706,"title":{},"body":{"components/FaqViewComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{}}}],["view'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BarGraphComponent.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{}}}],["view.component",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["view.component.css",{"_index":707,"title":{},"body":{"components/FaqViewComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{}}}],["view.component.html",{"_index":708,"title":{},"body":{"components/FaqViewComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{}}}],["view.component.ts",{"_index":705,"title":{},"body":{"components/FaqViewComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/GraphViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:12",{"_index":710,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["view.component.ts:15",{"_index":1040,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["view.component.ts:16",{"_index":1042,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["view.component.ts:17",{"_index":1041,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["view.component.ts:18",{"_index":1038,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["view.component.ts:19",{"_index":1035,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["view.component.ts:21",{"_index":1037,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["view.component.ts:22",{"_index":1044,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["view.component.ts:23",{"_index":1043,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["view.component.ts:24",{"_index":1039,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["view.component.ts:27",{"_index":1036,"title":{},"body":{"components/GenrePublisherViewComponent.html":{}}}],["view.component.ts:8",{"_index":709,"title":{},"body":{"components/FaqViewComponent.html":{},"components/GraphViewComponent.html":{}}}],["view/faq",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FaqViewComponent.html":{},"coverage.html":{}}}],["view/genre",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"interfaces/StaticCarousel.html":{},"coverage.html":{}}}],["view/graph",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphViewComponent.html":{},"coverage.html":{}}}],["view/publisher",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PublisherCarouselComponent.html":{},"coverage.html":{}}}],["view/stacked",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["viewchild",{"_index":274,"title":{},"body":{"components/BarGraphComponent.html":{},"components/GenrePublisherViewComponent.html":{},"components/PieChartComponent.html":{},"components/RadarChartComponent.html":{}}}],["vis2020",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["visualisation",{"_index":1109,"title":{},"body":{"components/NavbarComponent.html":{}}}],["visualisations",{"_index":813,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["visualizations",{"_index":763,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["visualize",{"_index":627,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["vizualizations",{"_index":716,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["void",{"_index":224,"title":{},"body":{"components/BarGraphComponent.html":{},"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"components/FooterComponent.html":{},"components/GameDetailsComponent.html":{},"components/GenreCarouselComponent.html":{},"components/GenrePublisherViewComponent.html":{},"injectables/InteractionService.html":{},"components/MainContentComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigationService.html":{},"components/PieChartComponent.html":{},"components/PublisherCarouselComponent.html":{},"components/RadarChartComponent.html":{},"interfaces/StaticCarousel.html":{}}}],["warranties",{"_index":1568,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1563,"title":{},"body":{"license.html":{}}}],["way",{"_index":761,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["webkit",{"_index":377,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["website",{"_index":718,"title":{},"body":{"components/FaqViewComponent.html":{}}}],["weight",{"_index":453,"title":{},"body":{"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/GameDetailsComponent.html":{}}}],["whether",{"_index":1580,"title":{},"body":{"license.html":{}}}],["white",{"_index":456,"title":{},"body":{"components/CoverCardComponent.html":{},"injectables/NavigationService.html":{}}}],["width",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CoverCardComponent.html":{},"components/CoverCarouselComponent.html":{},"components/GameDetailsComponent.html":{},"components/RadarChartComponent.html":{}}}],["window.innerheight",{"_index":1255,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["window.scroll(0",{"_index":1246,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["window.scrolly",{"_index":1256,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["window:scroll",{"_index":1220,"title":{},"body":{"components/PublisherCarouselComponent.html":{}}}],["without",{"_index":1538,"title":{},"body":{"license.html":{}}}],["word",{"_index":364,"title":{},"body":{"interfaces/Breadcrumb.html":{},"components/BreadcrumbComponent.html":{}}}],["wrapper",{"_index":1412,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["x.criticscore",{"_index":1322,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["x.globalsales",{"_index":296,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["x.name",{"_index":294,"title":{},"body":{"components/BarGraphComponent.html":{},"components/RadarChartComponent.html":{}}}],["x.name).slice(0,50",{"_index":304,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["x.publisher",{"_index":637,"title":{},"body":{"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{}}}],["x.userscore",{"_index":1320,"title":{},"body":{"components/RadarChartComponent.html":{}}}],["yaxes",{"_index":266,"title":{},"body":{"components/BarGraphComponent.html":{}}}],["year",{"_index":254,"title":{},"body":{"components/BarGraphComponent.html":{},"components/CoverCardComponent.html":{},"interfaces/CoverCarouselStore.html":{},"injectables/DataService.html":{},"components/FaqViewComponent.html":{},"classes/Game.html":{},"components/GameDetailsComponent.html":{},"classes/GenreSalesPerYear.html":{},"interfaces/MarketShareForGenrePerYearStore.html":{},"components/RadarChartComponent.html":{},"classes/SharePerYearPerPublisher.html":{}}}],["yes",{"_index":848,"title":{},"body":{"classes/Game.html":{}}}],["zone.js",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vis2020'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'vis2020';\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n    \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n.main-container {\n  max-width: 100rem !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBarGraphComponent\n\nBarGraphComponent\n\nAppModule -->\n\nBarGraphComponent->AppModule\n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\nAppModule -->\n\nBreadcrumbComponent->AppModule\n\n\n\n\n\nCoverCardComponent\n\nCoverCardComponent\n\nAppModule -->\n\nCoverCardComponent->AppModule\n\n\n\n\n\nCoverCarouselComponent\n\nCoverCarouselComponent\n\nAppModule -->\n\nCoverCarouselComponent->AppModule\n\n\n\n\n\nFaqViewComponent\n\nFaqViewComponent\n\nAppModule -->\n\nFaqViewComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGameDetailsComponent\n\nGameDetailsComponent\n\nAppModule -->\n\nGameDetailsComponent->AppModule\n\n\n\n\n\nGenreCarouselComponent\n\nGenreCarouselComponent\n\nAppModule -->\n\nGenreCarouselComponent->AppModule\n\n\n\nAppModule -->\n\nGenreCarouselComponent->AppModule\n\n\n\n\n\nGenrePublisherViewComponent\n\nGenrePublisherViewComponent\n\nAppModule -->\n\nGenrePublisherViewComponent->AppModule\n\n\n\n\n\nGraphViewComponent\n\nGraphViewComponent\n\nAppModule -->\n\nGraphViewComponent->AppModule\n\n\n\n\n\nMainContentComponent\n\nMainContentComponent\n\nAppModule -->\n\nMainContentComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPieChartComponent\n\nPieChartComponent\n\nAppModule -->\n\nPieChartComponent->AppModule\n\n\n\n\n\nPublisherCarouselComponent\n\nPublisherCarouselComponent\n\nAppModule -->\n\nPublisherCarouselComponent->AppModule\n\n\n\n\n\nRadarChartComponent\n\nRadarChartComponent\n\nAppModule -->\n\nRadarChartComponent->AppModule\n\n\n\n\n\nStackedLineGraphComponent\n\nStackedLineGraphComponent\n\nAppModule -->\n\nStackedLineGraphComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDataService\n\nDataService\n\nAppModule -->\n\nDataService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BarGraphComponent\n                        \n                        \n                            BreadcrumbComponent\n                        \n                        \n                            CoverCardComponent\n                        \n                        \n                            CoverCarouselComponent\n                        \n                        \n                            FaqViewComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            GameDetailsComponent\n                        \n                        \n                            GenreCarouselComponent\n                        \n                        \n                            GenreCarouselComponent\n                        \n                        \n                            GenrePublisherViewComponent\n                        \n                        \n                            GraphViewComponent\n                        \n                        \n                            MainContentComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            PieChartComponent\n                        \n                        \n                            PublisherCarouselComponent\n                        \n                        \n                            RadarChartComponent\n                        \n                        \n                            StackedLineGraphComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DataService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './navbar/navbar.component';\nimport {GraphViewComponent} from './main-content/graph-view/graph-view.component';\nimport {FooterComponent} from './footer/footer.component';\nimport {StackedLineGraphComponent} from './main-content/graph-view/stacked-line-graph/stacked-line-graph.component';\nimport {CoverCarouselComponent} from './shared/cover-carousel/cover-carousel.component';\nimport {CoverCardComponent} from './shared/cover-carousel/cover-card/cover-card.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {GameDetailsComponent} from './main-content/game-details/game-details.component';\nimport {BreadcrumbComponent} from './shared/breadcrumb/breadcrumb.component';\nimport {DataService} from './services/DataService';\nimport {MainContentComponent} from './main-content/main-content.component';\nimport {GenreCarouselComponent} from './main-content/graph-view/genre-carousel/genre-carousel.component';\nimport { PublisherCarouselComponent } from './main-content/graph-view/publisher-carousel/publisher-carousel.component';\nimport { GenrePublisherViewComponent } from './main-content/graph-view/genre-publisher-view/genre-publisher-view.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {FormsModule} from '@angular/forms';\nimport { BarGraphComponent } from './shared/bargraph/bargraph.component';\nimport { ChartsModule } from 'ng2-charts';\nimport { FaqViewComponent } from './main-content/faq-view/faq-view.component';\nimport { RadarChartComponent } from './shared/radar-chart/radar-chart.component';\nimport { PieChartComponent } from './shared/pie-chart/pie-chart.component';\nimport { TooltipModule } from 'ng2-tooltip-directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    MainContentComponent,\n    GraphViewComponent,\n    StackedLineGraphComponent,\n    CoverCarouselComponent,\n    CoverCardComponent,\n    BreadcrumbComponent,\n    GameDetailsComponent,\n    GenreCarouselComponent,\n    GenreCarouselComponent,\n    PublisherCarouselComponent,\n    GenrePublisherViewComponent,\n    BarGraphComponent,\n    FaqViewComponent,\n    RadarChartComponent,\n    PieChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule,\n    FormsModule,\n    ChartsModule,\n    TooltipModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {GameDetailsComponent} from './main-content/game-details/game-details.component';\nimport {MainContentComponent} from './main-content/main-content.component';\nimport {GraphViewComponent} from './main-content/graph-view/graph-view.component';\nimport {GenreCarouselComponent} from './main-content/graph-view/genre-carousel/genre-carousel.component';\nimport {PublisherCarouselComponent} from './main-content/graph-view/publisher-carousel/publisher-carousel.component';\nimport {GenrePublisherViewComponent} from './main-content/graph-view/genre-publisher-view/genre-publisher-view.component';\nimport {FaqViewComponent} from './main-content/faq-view/faq-view.component';\n\n\nconst routes: Routes = [\n    {path: '', redirectTo: 'home', pathMatch: 'full'},\n    {\n      path: 'home', component: MainContentComponent, children: [\n        {\n          path: '', component: GraphViewComponent, children: [\n            {path: '', component: GenreCarouselComponent},\n            {path: 'genre/:genreId', component: PublisherCarouselComponent},\n            {path: 'genre/:genreId/publisher/:publisherId', component: GenrePublisherViewComponent}\n          ]\n        },\n        {\n          path: 'details/:gameId', component: GameDetailsComponent\n        },\n        {\n          path: 'faq', component: FaqViewComponent\n        }\n      ]\n    }\n  ]\n;\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {scrollPositionRestoration: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BarGraphComponent.html":{"url":"components/BarGraphComponent.html","title":"component - BarGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BarGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/bargraph/bargraph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bar-graph\n            \n\n            \n                styleUrls\n                ./bargraph.component.css\n            \n\n\n\n            \n                templateUrl\n                bargraph.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                barChartData\n                            \n                            \n                                    Public\n                                barChartLabels\n                            \n                            \n                                    Public\n                                barChartLegend\n                            \n                            \n                                    Public\n                                barChartOptions\n                            \n                            \n                                    Public\n                                barChartType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initBarGraph\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBarClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                game\n                            \n                            \n                                prop\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/bargraph/bargraph.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/bargraph/bargraph.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        game\n                    \n                \n                \n                    \n                        Type :         Game\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/bargraph/bargraph.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        prop\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/bargraph/bargraph.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initBarGraph\n                        \n                        \n                    \n                \n            \n            \n                \ninitBarGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bargraph/bargraph.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bargraph/bargraph.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bargraph/bargraph.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBarClick\n                        \n                        \n                    \n                \n            \n            \n                \nonBarClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/bargraph/bargraph.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            barChartData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/bargraph/bargraph.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            barChartLabels\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/bargraph/bargraph.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            barChartLegend\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/bargraph/bargraph.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            barChartOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    tooltips:{\n      custom: (tooltip) => {\n        if (!tooltip) return;\n        // disable displaying the color box;\n        tooltip.displayColors = false;\n      },\n      callbacks: {\n        label: (item) => {\n          let multiLineArray = []\n          multiLineArray.push(\"Platform: \" + this.data[item.index].plattform)\n          multiLineArray.push(\"Publisher: \" + this.data[item.index].publisher)\n          multiLineArray.push(\"Release Year: \" + this.data[item.index].year)\n          multiLineArray.push(\"Genre: \" + this.data[item.index].genre)\n          multiLineArray.push(\"Sales: \" + this.data[item.index].globalSales + \" Mio\")\n          return multiLineArray;\n        }\n      }\n    },\n    maintainAspectRatio: true,\n    scaleShowVerticalLines: true,\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Sales in Million'\n        }\n      }]\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/bargraph/bargraph.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            barChartType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'bar'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/bargraph/bargraph.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, OnChanges, Input, ViewChild, ElementRef, SimpleChanges} from '@angular/core';\nimport { Game } from 'src/models/Game';\nimport { Router } from '@angular/router';\nimport { NavigationService } from 'src/app/services/navigate.service';\n\n@Component({\n    selector: 'bar-graph',\n    templateUrl: 'bargraph.component.html',\n    styleUrls: ['./bargraph.component.css']\n})\nexport class BarGraphComponent implements OnInit, OnChanges {\n  constructor(private router:Router, private navigationService: NavigationService) { }\n  \n  @Input() public data: Game[];\n  @Input() private game: Game;\n  @Input() private prop: string; \n\n  public barChartOptions = {\n    tooltips:{\n      custom: (tooltip) => {\n        if (!tooltip) return;\n        // disable displaying the color box;\n        tooltip.displayColors = false;\n      },\n      callbacks: {\n        label: (item) => {\n          let multiLineArray = []\n          multiLineArray.push(\"Platform: \" + this.data[item.index].plattform)\n          multiLineArray.push(\"Publisher: \" + this.data[item.index].publisher)\n          multiLineArray.push(\"Release Year: \" + this.data[item.index].year)\n          multiLineArray.push(\"Genre: \" + this.data[item.index].genre)\n          multiLineArray.push(\"Sales: \" + this.data[item.index].globalSales + \" Mio\")\n          return multiLineArray;\n        }\n      }\n    },\n    maintainAspectRatio: true,\n    scaleShowVerticalLines: true,\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Sales in Million'\n        }\n      }]\n    }\n  };\n  public barChartType = 'bar';\n  public barChartLegend = false;\n  public barChartData;\n  public barChartLabels;\n\n  ngOnInit() {\n    console.log(this.data);\n   this.initBarGraph();\n  }\n\n  ngOnChanges(changes: SimpleChanges){\n    console.log(this.data);\n    this.initBarGraph();\n  }\n\n  initBarGraph(){\n    this.barChartData = [];\n    let colorArr = [];\n\n    switch(this.prop){\n      case 'thisYear':\n        this.data.forEach(game => {\n          if(game.equals(this.game)){\n            colorArr.push(\"rgba(247,70,74,0.5)\")\n          }else{\n            colorArr.push(\"rgba(0,164,255,0.5)\")\n          }\n        });\n        this.barChartLabels = this.data.map(x => x.name);\n\n        this.barChartData.push({\n          data: this.data.map(x => x.globalSales),\n          backgroundColor: colorArr,\n          maxBarThickness: 40\n        })\n      break;\n      case 'sales':\n        this.barChartLabels = this.data.map(x => x.name)\n        let globalSalesArr = this.data.map(x => x.globalSales)\n\n        this.data.forEach(game => {\n          if(game.equals(this.game)){\n            colorArr.push(\"rgba(247,70,74,0.5)\")\n          }else{\n            colorArr.push(\"rgba(0,164,255,0.5)\")\n          }\n        });\n\n        this.barChartData.push({\n          label: \"Global\",\n          data: globalSalesArr,\n          maxBarThickness: 40,\n          backgroundColor: colorArr\n        })\n      break;\n      case 'PublisherGenre-Sales':\n        this.barChartLabels = this.data.map(x => x.name).slice(0,50)\n        var arr = this.data.map(x => x.globalSales);\n        arr = arr.slice(0,50)\n        this.barChartData.push({\n          data: arr\n        })\n      break;\n    }\n  }\n\n  onBarClick(event){\n    if(event.active.length > 0){\n      let idx = event.active[0]._index;\n      let game = this.data[idx];\n      this.navigationService.updateGame(game);\n      this.router.navigate([`/home/details`, game.index]);\n\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./bargraph.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BarGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Breadcrumb.html":{"url":"interfaces/Breadcrumb.html","title":"interface - Breadcrumb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Breadcrumb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/breadcrumb/breadcrumb.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, NavigationEnd, NavigationStart, PRIMARY_OUTLET, Router} from '@angular/router';\nimport {filter, map} from 'rxjs/operators';\nimport {NavigationService} from '../../services/navigate.service';\nimport {DataService} from '../../services/DataService';\n\ninterface Breadcrumb {\n  name: string;\n  url : string;\n}\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.css']\n})\nexport class BreadcrumbComponent implements OnInit {\n  homeBreadCrumb: Breadcrumb = {name: \"Home\", url: \"home\"};\n  genreBreadCrumb: Breadcrumb = {name: \"Genre\", url: \"home/genre/\"};\n  publisherBreadCrumb: Breadcrumb = {name: \"Publisher\", url: \"home/genre/\"};\n  breadcrumbs: Breadcrumb[] = [];\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private navigationService: NavigationService,\n              private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.router.events.subscribe((navigationStart) => {\n      if(navigationStart instanceof NavigationStart ) {\n        let route = navigationStart.url;\n        let slicedRoute = route.slice(1).split(\"/\");\n        console.log(slicedRoute);\n\n        this.breadcrumbs = [];\n        if(slicedRoute[0] === \"home\") {\n          this.breadcrumbs[0] = this.homeBreadCrumb;\n        }\n\n        if(slicedRoute[1] == \"details\") {\n          let gameIndex = slicedRoute[2];\n          let gameName = this.dataService.gameDataSet.filter(item => item.index === Number(gameIndex))[0].name;\n          this.navigationService.game$.subscribe(value => {\n            this.breadcrumbs[1] = {name: gameName, url: route};\n          });\n        }\n\n        if(slicedRoute[1] == \"faq\") {\n          this.breadcrumbs[1] = {name: \"FAQ\", url: route};\n        }\n\n        if (slicedRoute[1] === \"genre\") {\n          this.breadcrumbs[1] = {name: slicedRoute[2], url: this.genreBreadCrumb.url + slicedRoute[2]};\n        }\n\n        if (slicedRoute[3] === \"publisher\") {\n          this.publisherBreadCrumb.name = '';\n          this.publisherBreadCrumb.url = route; // since it is the last url\n          slicedRoute[4].split('%20').forEach(word => {\n            this.publisherBreadCrumb.name += word + ' ';\n          });\n          console.log(route);\n          this.breadcrumbs[2] = {name: this.publisherBreadCrumb.name, url: this.publisherBreadCrumb.url.replace('%20', ' ')};\n        }\n      }\n    });\n\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbComponent.html":{"url":"components/BreadcrumbComponent.html","title":"component - BreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/breadcrumb/breadcrumb.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumb\n            \n\n            \n                styleUrls\n                ./breadcrumb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breadcrumbs\n                            \n                            \n                                genreBreadCrumb\n                            \n                            \n                                homeBreadCrumb\n                            \n                            \n                                publisherBreadCrumb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, navigationService: NavigationService, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breadcrumbs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Breadcrumb[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genreBreadCrumb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Breadcrumb\n\n                        \n                    \n                    \n                        \n                            Default value : {name: \"Genre\", url: \"home/genre/\"}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homeBreadCrumb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Breadcrumb\n\n                        \n                    \n                    \n                        \n                            Default value : {name: \"Home\", url: \"home\"}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisherBreadCrumb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Breadcrumb\n\n                        \n                    \n                    \n                        \n                            Default value : {name: \"Publisher\", url: \"home/genre/\"}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/breadcrumb/breadcrumb.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, NavigationEnd, NavigationStart, PRIMARY_OUTLET, Router} from '@angular/router';\nimport {filter, map} from 'rxjs/operators';\nimport {NavigationService} from '../../services/navigate.service';\nimport {DataService} from '../../services/DataService';\n\ninterface Breadcrumb {\n  name: string;\n  url : string;\n}\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.css']\n})\nexport class BreadcrumbComponent implements OnInit {\n  homeBreadCrumb: Breadcrumb = {name: \"Home\", url: \"home\"};\n  genreBreadCrumb: Breadcrumb = {name: \"Genre\", url: \"home/genre/\"};\n  publisherBreadCrumb: Breadcrumb = {name: \"Publisher\", url: \"home/genre/\"};\n  breadcrumbs: Breadcrumb[] = [];\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private navigationService: NavigationService,\n              private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.router.events.subscribe((navigationStart) => {\n      if(navigationStart instanceof NavigationStart ) {\n        let route = navigationStart.url;\n        let slicedRoute = route.slice(1).split(\"/\");\n        console.log(slicedRoute);\n\n        this.breadcrumbs = [];\n        if(slicedRoute[0] === \"home\") {\n          this.breadcrumbs[0] = this.homeBreadCrumb;\n        }\n\n        if(slicedRoute[1] == \"details\") {\n          let gameIndex = slicedRoute[2];\n          let gameName = this.dataService.gameDataSet.filter(item => item.index === Number(gameIndex))[0].name;\n          this.navigationService.game$.subscribe(value => {\n            this.breadcrumbs[1] = {name: gameName, url: route};\n          });\n        }\n\n        if(slicedRoute[1] == \"faq\") {\n          this.breadcrumbs[1] = {name: \"FAQ\", url: route};\n        }\n\n        if (slicedRoute[1] === \"genre\") {\n          this.breadcrumbs[1] = {name: slicedRoute[2], url: this.genreBreadCrumb.url + slicedRoute[2]};\n        }\n\n        if (slicedRoute[3] === \"publisher\") {\n          this.publisherBreadCrumb.name = '';\n          this.publisherBreadCrumb.url = route; // since it is the last url\n          slicedRoute[4].split('%20').forEach(word => {\n            this.publisherBreadCrumb.name += word + ' ';\n          });\n          console.log(route);\n          this.breadcrumbs[2] = {name: this.publisherBreadCrumb.name, url: this.publisherBreadCrumb.url.replace('%20', ' ')};\n        }\n      }\n    });\n\n  }\n}\n\n    \n\n    \n        \n  \n    {{breadcrumb.name}}\n  \n\n\n    \n\n    \n                \n                    ./breadcrumb.component.css\n                \n                .app-breadcrumb-bg {\n  background-color: inherit;\n  -webkit-border-radius: unset;\n  -moz-border-radius: unset;\n  border-radius: unset;\n  padding: unset;\n  border: unset;\n  border-color: unset;\n  margin-top: 1.5rem;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{breadcrumb.name}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverCardComponent.html":{"url":"components/CoverCardComponent.html","title":"component - CoverCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoverCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/cover-carousel/cover-card/cover-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cover-card\n            \n\n            \n                styleUrls\n                ./cover-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cover-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tooltipOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isGameCardEmpty\n                            \n                            \n                                navigate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onHover\n                            \n                            \n                                onHoverOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                game\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, navigationService: NavigationService, interactionService: InteractionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/cover-carousel/cover-card/cover-card.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interactionService\n                                                  \n                                                        \n                                                                        InteractionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        game\n                    \n                \n                \n                    \n                        Type :         CoverCarousel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/cover-carousel/cover-card/cover-card.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isGameCardEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisGameCardEmpty()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/cover-carousel/cover-card/cover-card.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \nnavigate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/cover-carousel/cover-card/cover-card.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/cover-carousel/cover-card/cover-card.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onHover\n                        \n                        \n                    \n                \n            \n            \n                \nonHover()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/cover-carousel/cover-card/cover-card.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onHoverOut\n                        \n                        \n                    \n                \n            \n            \n                \nonHoverOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/cover-carousel/cover-card/cover-card.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltipOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'placement': 'left',\n    'contentType' : 'template',\n    'theme': 'light',\n    'width': 250,\n    'max-width': 300,\n    'hide-delay': 50\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/cover-carousel/cover-card/cover-card.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {CoverCarousel} from '../../../../models/CoverCarousel';\nimport { Router, NavigationExtras } from '@angular/router';\nimport {NavigationService} from '../../../services/navigate.service';\nimport {InteractionService} from '../../../services/interaction.service';\n\n@Component({\n  selector: 'app-cover-card',\n  templateUrl: './cover-card.component.html',\n  styleUrls: ['./cover-card.component.css']\n})\nexport class CoverCardComponent implements OnInit {\n  @Input() game: CoverCarousel;\n  tooltipOptions = {\n    'placement': 'left',\n    'contentType' : 'template',\n    'theme': 'light',\n    'width': 250,\n    'max-width': 300,\n    'hide-delay': 50\n  };\n\n  constructor(private router: Router,\n              private navigationService: NavigationService,\n              private interactionService: InteractionService) { }\n\n  ngOnInit(): void {\n  }\n\n  navigate(){\n    if(!this.isGameCardEmpty()) {\n      this.router.navigate([`/home/details`, this.game.game.index]);\n      this.navigationService.updateGame(this.game.game);\n    }\n  }\n\n  onHover() {\n    if(!this.isGameCardEmpty()) {\n      this.interactionService.onGameCardHover(this.game.game);\n    }\n  }\n\n  onHoverOut() {\n    if(!this.isGameCardEmpty()) {\n      this.interactionService.onGameCardHover(null);\n    }\n  }\n\n  isGameCardEmpty() {\n    return this.game.game.name === \"No Game\"\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      {{game.game.name}}\n      {{game.game.publisher}}\n    \n  \n\n\n\n  \n    {{this.game?.game.name}}\n    \n\n    \n      \n        Genre\n      \n      \n        {{this.game?.game.genre}}\n      \n    \n\n    \n      \n        Publisher\n      \n      \n        {{this.game?.game.publisher}}\n      \n    \n\n    \n      \n        Platform\n      \n      \n        {{this.game?.game.plattform}}\n      \n    \n\n    \n      \n        Release Year\n      \n      \n        {{this.game?.game.year}}\n      \n    \n\n    \n      \n        User Score\n      \n      \n        {{this.game?.game.userScore}}\n      \n    \n\n    \n      \n        Global Sales\n      \n      \n        {{this.game?.game.globalSales}} Millions\n      \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./cover-card.component.css\n                \n                a, a:hover {\n  color: inherit;\n}\n\n.game-card {\n  width: 160px;\n}\n\n.game-card-body {\n  padding: 0.5rem;\n}\n\n.game-card-image {\n  height: 160px;\n  width: 160px;\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n.game-card-text {\n  font-size: 9px;\n  font-style: italic;\n}\n\n.card-game-name {\n  font-weight: 600;\n  font-size: 12px;\n  font-style: unset;\n  white-space: nowrap;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.placeholder {\n  width: 160px;\n  height: 160px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-image: url('../../../../assets/no_image.png');\n}\n\n.tooltip-title {\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.tooltip-hr {\n  padding: 0;\n  margin: 0;\n}\n\n.tooltip-container {\n  text-align: left;\n}\n\n.label {\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{game.game.name}}      {{game.game.publisher}}            {{this.game?.game.name}}                      Genre                    {{this.game?.game.genre}}                            Publisher                    {{this.game?.game.publisher}}                            Platform                    {{this.game?.game.plattform}}                            Release Year                    {{this.game?.game.year}}                            User Score                    {{this.game?.game.userScore}}                            Global Sales                    {{this.game?.game.globalSales}} Millions            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CoverCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoverCarousel.html":{"url":"classes/CoverCarousel.html","title":"class - CoverCarousel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoverCarousel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/CoverCarousel.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fromYear\n                            \n                            \n                                game\n                            \n                            \n                                timespanString\n                            \n                            \n                                toYear\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: number, to: number, game: Game)\n                    \n                \n                        \n                            \n                                Defined in src/models/CoverCarousel.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        to\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        Game\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/CoverCarousel.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            game\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Game\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/CoverCarousel.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timespanString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/CoverCarousel.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/CoverCarousel.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Game} from './Game';\n\nexport class CoverCarousel {\n  constructor(from:number, to:number, game:Game){\n    this.game = game;\n    this.toYear = to;\n    this.fromYear = from;\n    \n    // construct timespanString\n    this.timespanString = Math.floor(from) + \"-\" + Math.floor(to);\n  }\n\n  timespanString: string;\n  fromYear: number;\n  toYear: number;\n  game: Game;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoverCarouselComponent.html":{"url":"components/CoverCarouselComponent.html","title":"component - CoverCarouselComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoverCarouselComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/cover-carousel/cover-carousel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cover-carousel\n            \n\n            \n                styleUrls\n                ./cover-carousel.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cover-carousel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cardName\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/cover-carousel/cover-carousel.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cardName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/cover-carousel/cover-carousel.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         CoverCarousel[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/cover-carousel/cover-carousel.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/cover-carousel/cover-carousel.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {CoverCarousel} from '../../../models/CoverCarousel';\n\n@Component({\n  selector: 'app-cover-carousel',\n  templateUrl: './cover-carousel.component.html',\n  styleUrls: ['./cover-carousel.component.css']\n})\nexport class CoverCarouselComponent implements OnInit {\n  @Input() data: CoverCarousel[];\n  @Input() cardName: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n         0\">\n  \n    \n      {{cardName}}\n    \n    \n      \n        \n           \n            \n            {{game.timespanString}}\n          \n        \n      \n    \n  \n\n  \n    \n       \n        \n        {{game.timespanString}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./cover-carousel.component.css\n                \n                .carousel-card-container {\n  width: 100%;\n  margin: 20px 0 20px 0;\n}\n\n\n.game-covers-body {\n  padding: 1.2em;\n}\n\n.separator {\n  font-weight: 600;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  width: 160px;\n}\n.separator::before, .separator::after {\n  content: '';\n  flex: 1;\n  border-bottom: 1px solid #6c757d;\n}\n.separator::before {\n  margin-right: .25em;\n}\n.separator::after {\n  margin-left: .25em;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\">            {{cardName}}                                                         {{game.timespanString}}                                                           {{game.timespanString}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CoverCarouselComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoverCarouselStore.html":{"url":"interfaces/CoverCarouselStore.html","title":"interface - CoverCarouselStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CoverCarouselStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/DataService.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cardAmmout\n                                \n                                \n                                        data\n                                \n                                \n                                        fromYear\n                                \n                                \n                                        genre\n                                \n                                \n                                        publisher\n                                \n                                \n                                        toYear\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardAmmout\n                                    \n                                \n                                \n                                    \n                                        cardAmmout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         CoverCarousel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverCarousel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromYear\n                                    \n                                \n                                \n                                    \n                                        fromYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publisher\n                                    \n                                \n                                \n                                    \n                                        publisher:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toYear\n                                    \n                                \n                                \n                                    \n                                        toYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Game} from '../../models/Game';\nimport {GenreSalesPerYear} from '../../models/GenreSalesPerYear';\nimport {HttpClient} from '@angular/common/http';\nimport * as Rx from 'rxjs';\nimport {CoverCarousel} from 'src/models/CoverCarousel';\nimport {SharePerYearPerPublisher} from 'src/models/SharePerYearPerPublisher';\nimport {observable, Observable} from 'rxjs';\nimport {element} from 'protractor';\n\n\ninterface MarketShareForGenrePerYearStore {\n  genre: string;\n  data: SharePerYearPerPublisher[];\n}\n\ninterface CoverCarouselStore {\n  genre: string,\n  publisher: string,\n  fromYear: number,\n  toYear: number,\n  cardAmmout: number,\n  data: CoverCarousel[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  public gameDataSet: Game[] = [];\n  public genreSalesPerYears: GenreSalesPerYear[];\n  public marketShareForGenrePerYearStore: MarketShareForGenrePerYearStore[] = [];\n  public coverCarouselStore: CoverCarouselStore[] = [];\n  public liveCarousel$: Rx.BehaviorSubject;\n  public onReady$: Rx.BehaviorSubject;\n\n  constructor(private http: HttpClient) {\n    this.liveCarousel$ = new Rx.BehaviorSubject([]);\n    this.onReady$ = new Rx.BehaviorSubject(false);\n    this.readInGameDataSet().subscribe(data => {\n      for (const game of data) {\n        this.gameDataSet.push(new Game(game));\n      }\n      this.readInGenreSalesPerYears().subscribe(data => {\n        this.genreSalesPerYears = data;\n        //console.log(\"GenreSales per Year: \", this.genreSalesPerYears)\n        this.onReady$.next(true);\n      });\n    });\n  }\n\n  readInGameDataSet(): Rx.Observable {\n    return this.http.get('./assets/preprocessed_dataset.json');\n  }\n\n  readInGenreSalesPerYears(): Rx.Observable {\n    return this.http.get('./assets/SalesPerYearGenre.json');\n  }\n\n  updateCoverCarousel(genre: string, publisher: string, fromYear: number, toYear: number, cardAmount: number) {\n    console.time('updateCoverCarousel');\n    this.getCoverCarousel(genre, publisher, fromYear, toYear, cardAmount).then(carouselList => {\n      this.liveCarousel$.next(carouselList);\n      console.timeEnd('updateCoverCarousel');\n    });\n  }\n\n  getCoverCarousel(genre: string, publisher: string, fromYear: number, toYear: number, cardAmount: number): Promise {\n    return new Promise((resolve, reject) => {\n      try {\n        // Check if result was already cached\n        const cachedResult: CoverCarouselStore = this.coverCarouselStore.filter((cachedResult: CoverCarouselStore) =>\n          cachedResult.genre === genre &&\n          cachedResult.publisher === publisher &&\n          cachedResult.fromYear === fromYear &&\n          cachedResult.toYear === toYear &&\n          cachedResult.cardAmmout === cardAmount)[0];\n\n        if(cachedResult) {\n          resolve(cachedResult.data);\n        } else {\n          let timeInterval = toYear - fromYear;\n          let timeBin = timeInterval / cardAmount;\n          let carouselList = [];\n\n          let carouselNonEmptyCardAmount = 0;\n          for (let i = 0; i  game.genre))]\n    return uniqueGenres;\n  }\n\n  getPublishersForGenre(genre: string): string[] {\n    const filteredList = this.gameDataSet.filter(game => game.genre === genre);\n    const uniquePublishers =  [...new Set(filteredList.map(game => game.publisher))];\n    return uniquePublishers;\n  }\n\n  getCoverCarouselData(fromTime: number, toTime: number, genre: String): Game {\n    var filteredGameData;\n    //filter for given Genre\n    if (genre !== 'all') {\n      filteredGameData = this.gameDataSet.filter(game => game.genre === genre);\n    } else {\n      filteredGameData = this.gameDataSet;\n    }\n    // sort gameDataSet by globalSales\n    filteredGameData.sort((a, b) => {\n      //a is less than b by some ordering criterion\n      if (a.globalSales  b.globalSales) {\n        return -1;\n      }\n      return 0;\n    });\n    for (const game of filteredGameData) {\n      //if game is between time range\n      if (game.year >= fromTime && game.year  game.genre === genre && genre !== 'all');\n    filteredGameData = filteredGameData.filter(game => game.publisher === publisher && publisher !== 'all');\n    // sort gameDataSet by globalSales\n    filteredGameData.sort((a, b) => {\n      //a is less than b by some ordering criterion\n      if (a.globalSales  b.globalSales) {\n        return -1;\n      }\n      return 0;\n    });\n    for (const game of filteredGameData) {\n      //if game is between time range\n      if (game.year >= fromTime && game.year  elem.publisher))];\n    \n    let publisherClusteredData = [];\n    for (const publisher of uniquePublisher) {\n      publisherClusteredData.push({\n        publisher: publisher, \n        data: arr.filter((element) => element.publisher === publisher)\n      });\n    }\n\n    let totalPublisherShare = [];\n    for (const cluster of publisherClusteredData) {\n      let sum = cluster.data.reduce((a,b) => a + b.share ,0)\n      totalPublisherShare.push({publisher:cluster.publisher, totalShare:sum});\n    }\n\n    //NOTE: This could also be interesting to visualize?\n    totalPublisherShare.sort((a, b) => {\n      return (b.totalShare - a.totalShare);\n    })\n\n    console.log(totalPublisherShare.length)\n        \n    let res = []\n    let dynChunkSize = chunkSize;\n    for (let i = 0; i  totalPublisherShare.length){\n        dynChunkSize = totalPublisherShare.length % chunkSize;\n      }\n      let data = [];\n      for (let j = i; j  x.publisher === publisher))\n      }\n      res.push({from: i, to: i+dynChunkSize, data: data})\n    }\n\n    return res;   \n  }\n\n  getMarketShareForGenrePerYear(genre: string): SharePerYearPerPublisher[] {\n    console.time('getMarketShareForGenrePerYear');\n    let filtered = this.gameDataSet.filter((game) => game.genre === genre);\n    var res = [];\n    var totalSalesPerYear = {};\n\n    let uniqueYears = [...new Set(filtered.map(game => game.year))];\n    let uniquePublisher = [...new Set(filtered.map(game => game.publisher))];\n\n    for (const year of uniqueYears) {\n      let filteredByYear = filtered.filter((game) => game.year === year);\n      totalSalesPerYear[year] = filteredByYear.reduce((a, b) => {\n        return a + b.globalSales;\n      }, 0);\n    }\n\n    for (const year of uniqueYears) {\n      for (const publisher of uniquePublisher) {\n        let filteredByYearAndPublisher = filtered.filter((game) => game.year === year && game.publisher === publisher);\n        let sumSalesPublisherYear = filteredByYearAndPublisher.reduce((a, b) => {\n          return a + b.globalSales;\n        }, 0);\n        res.push(new SharePerYearPerPublisher(year, (sumSalesPublisherYear / totalSalesPerYear[year]) * 100, publisher));\n      }\n    }\n\n    // Store calculated data into store\n    if (this.marketShareForGenrePerYearStore.filter(data => data.genre === genre).length === 0) {\n      this.marketShareForGenrePerYearStore.push({genre: genre, data: res});\n    }\n\n    console.timeEnd('getMarketShareForGenrePerYear');\n    return res;\n  }\n\n  getGamesOfPublisherInGenre(publisher: string, genre: string) {\n    let filteredByGenre = this.gameDataSet.filter((game) => game.genre === genre);\n    let filteredByGenreAndPublisher = filteredByGenre.filter((game) => game.publisher === publisher);\n\n    return filteredByGenreAndPublisher;\n  }\n\n  isMarketShareForGenrePerYearCached(genre: string): boolean {\n    return this.marketShareForGenrePerYearStore.filter(data => data.genre === genre).length > 0;\n  }\n\n  getCachedMarketShareForGenrePerYear(genre: string) {\n    return this.marketShareForGenrePerYearStore.filter(data => data.genre === genre);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/DataService.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                coverCarouselStore\n                            \n                            \n                                    Public\n                                gameDataSet\n                            \n                            \n                                    Public\n                                genreSalesPerYears\n                            \n                            \n                                    Public\n                                liveCarousel$\n                            \n                            \n                                    Public\n                                marketShareForGenrePerYearStore\n                            \n                            \n                                    Public\n                                onReady$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCachedMarketShareForGenrePerYear\n                            \n                            \n                                getClusteredMarketShareForGenrePerYear\n                            \n                            \n                                getCoverCarousel\n                            \n                            \n                                getCoverCarouselData\n                            \n                            \n                                getCoverCarouselDataWithPublisher\n                            \n                            \n                                getGamesOfPublisherInGenre\n                            \n                            \n                                getGenres\n                            \n                            \n                                getMarketShareForGenrePerYear\n                            \n                            \n                                getPublishersForGenre\n                            \n                            \n                                isMarketShareForGenrePerYearCached\n                            \n                            \n                                readInGameDataSet\n                            \n                            \n                                readInGenreSalesPerYears\n                            \n                            \n                                updateCoverCarousel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/DataService.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCachedMarketShareForGenrePerYear\n                        \n                        \n                    \n                \n            \n            \n                \ngetCachedMarketShareForGenrePerYear(genre: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:287\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genre\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClusteredMarketShareForGenrePerYear\n                        \n                        \n                    \n                \n            \n            \n                \ngetClusteredMarketShareForGenrePerYear(genre, chunkSize: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    genre\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    chunkSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        20\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCoverCarousel\n                        \n                        \n                    \n                \n            \n            \n                \ngetCoverCarousel(genre: string, publisher: string, fromYear: number, toYear: number, cardAmount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genre\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fromYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardAmount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCoverCarouselData\n                        \n                        \n                    \n                \n            \n            \n                \ngetCoverCarouselData(fromTime: number, toTime: number, genre: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fromTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    genre\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Game\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCoverCarouselDataWithPublisher\n                        \n                        \n                    \n                \n            \n            \n                \ngetCoverCarouselDataWithPublisher(fromTime: number, toTime: number, genre: String, publisher: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fromTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    genre\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Game\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGamesOfPublisherInGenre\n                        \n                        \n                    \n                \n            \n            \n                \ngetGamesOfPublisherInGenre(publisher: string, genre: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:276\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    genre\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGenres\n                        \n                        \n                    \n                \n            \n            \n                \ngetGenres()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMarketShareForGenrePerYear\n                        \n                        \n                    \n                \n            \n            \n                \ngetMarketShareForGenrePerYear(genre: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:241\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genre\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SharePerYearPerPublisher[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPublishersForGenre\n                        \n                        \n                    \n                \n            \n            \n                \ngetPublishersForGenre(genre: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genre\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isMarketShareForGenrePerYearCached\n                        \n                        \n                    \n                \n            \n            \n                \nisMarketShareForGenrePerYearCached(genre: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genre\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readInGameDataSet\n                        \n                        \n                    \n                \n            \n            \n                \nreadInGameDataSet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Rx.Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readInGenreSalesPerYears\n                        \n                        \n                    \n                \n            \n            \n                \nreadInGenreSalesPerYears()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Rx.Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCoverCarousel\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCoverCarousel(genre: string, publisher: string, fromYear: number, toYear: number, cardAmount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/DataService.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genre\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fromYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toYear\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cardAmount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            coverCarouselStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CoverCarouselStore[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/DataService.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gameDataSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Game[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/DataService.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            genreSalesPerYears\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GenreSalesPerYear[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/DataService.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            liveCarousel$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Rx.BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/DataService.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            marketShareForGenrePerYearStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MarketShareForGenrePerYearStore[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/DataService.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onReady$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Rx.BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/DataService.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Game} from '../../models/Game';\nimport {GenreSalesPerYear} from '../../models/GenreSalesPerYear';\nimport {HttpClient} from '@angular/common/http';\nimport * as Rx from 'rxjs';\nimport {CoverCarousel} from 'src/models/CoverCarousel';\nimport {SharePerYearPerPublisher} from 'src/models/SharePerYearPerPublisher';\nimport {observable, Observable} from 'rxjs';\nimport {element} from 'protractor';\n\n\ninterface MarketShareForGenrePerYearStore {\n  genre: string;\n  data: SharePerYearPerPublisher[];\n}\n\ninterface CoverCarouselStore {\n  genre: string,\n  publisher: string,\n  fromYear: number,\n  toYear: number,\n  cardAmmout: number,\n  data: CoverCarousel[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  public gameDataSet: Game[] = [];\n  public genreSalesPerYears: GenreSalesPerYear[];\n  public marketShareForGenrePerYearStore: MarketShareForGenrePerYearStore[] = [];\n  public coverCarouselStore: CoverCarouselStore[] = [];\n  public liveCarousel$: Rx.BehaviorSubject;\n  public onReady$: Rx.BehaviorSubject;\n\n  constructor(private http: HttpClient) {\n    this.liveCarousel$ = new Rx.BehaviorSubject([]);\n    this.onReady$ = new Rx.BehaviorSubject(false);\n    this.readInGameDataSet().subscribe(data => {\n      for (const game of data) {\n        this.gameDataSet.push(new Game(game));\n      }\n      this.readInGenreSalesPerYears().subscribe(data => {\n        this.genreSalesPerYears = data;\n        //console.log(\"GenreSales per Year: \", this.genreSalesPerYears)\n        this.onReady$.next(true);\n      });\n    });\n  }\n\n  readInGameDataSet(): Rx.Observable {\n    return this.http.get('./assets/preprocessed_dataset.json');\n  }\n\n  readInGenreSalesPerYears(): Rx.Observable {\n    return this.http.get('./assets/SalesPerYearGenre.json');\n  }\n\n  updateCoverCarousel(genre: string, publisher: string, fromYear: number, toYear: number, cardAmount: number) {\n    console.time('updateCoverCarousel');\n    this.getCoverCarousel(genre, publisher, fromYear, toYear, cardAmount).then(carouselList => {\n      this.liveCarousel$.next(carouselList);\n      console.timeEnd('updateCoverCarousel');\n    });\n  }\n\n  getCoverCarousel(genre: string, publisher: string, fromYear: number, toYear: number, cardAmount: number): Promise {\n    return new Promise((resolve, reject) => {\n      try {\n        // Check if result was already cached\n        const cachedResult: CoverCarouselStore = this.coverCarouselStore.filter((cachedResult: CoverCarouselStore) =>\n          cachedResult.genre === genre &&\n          cachedResult.publisher === publisher &&\n          cachedResult.fromYear === fromYear &&\n          cachedResult.toYear === toYear &&\n          cachedResult.cardAmmout === cardAmount)[0];\n\n        if(cachedResult) {\n          resolve(cachedResult.data);\n        } else {\n          let timeInterval = toYear - fromYear;\n          let timeBin = timeInterval / cardAmount;\n          let carouselList = [];\n\n          let carouselNonEmptyCardAmount = 0;\n          for (let i = 0; i  game.genre))]\n    return uniqueGenres;\n  }\n\n  getPublishersForGenre(genre: string): string[] {\n    const filteredList = this.gameDataSet.filter(game => game.genre === genre);\n    const uniquePublishers =  [...new Set(filteredList.map(game => game.publisher))];\n    return uniquePublishers;\n  }\n\n  getCoverCarouselData(fromTime: number, toTime: number, genre: String): Game {\n    var filteredGameData;\n    //filter for given Genre\n    if (genre !== 'all') {\n      filteredGameData = this.gameDataSet.filter(game => game.genre === genre);\n    } else {\n      filteredGameData = this.gameDataSet;\n    }\n    // sort gameDataSet by globalSales\n    filteredGameData.sort((a, b) => {\n      //a is less than b by some ordering criterion\n      if (a.globalSales  b.globalSales) {\n        return -1;\n      }\n      return 0;\n    });\n    for (const game of filteredGameData) {\n      //if game is between time range\n      if (game.year >= fromTime && game.year  game.genre === genre && genre !== 'all');\n    filteredGameData = filteredGameData.filter(game => game.publisher === publisher && publisher !== 'all');\n    // sort gameDataSet by globalSales\n    filteredGameData.sort((a, b) => {\n      //a is less than b by some ordering criterion\n      if (a.globalSales  b.globalSales) {\n        return -1;\n      }\n      return 0;\n    });\n    for (const game of filteredGameData) {\n      //if game is between time range\n      if (game.year >= fromTime && game.year  elem.publisher))];\n    \n    let publisherClusteredData = [];\n    for (const publisher of uniquePublisher) {\n      publisherClusteredData.push({\n        publisher: publisher, \n        data: arr.filter((element) => element.publisher === publisher)\n      });\n    }\n\n    let totalPublisherShare = [];\n    for (const cluster of publisherClusteredData) {\n      let sum = cluster.data.reduce((a,b) => a + b.share ,0)\n      totalPublisherShare.push({publisher:cluster.publisher, totalShare:sum});\n    }\n\n    //NOTE: This could also be interesting to visualize?\n    totalPublisherShare.sort((a, b) => {\n      return (b.totalShare - a.totalShare);\n    })\n\n    console.log(totalPublisherShare.length)\n        \n    let res = []\n    let dynChunkSize = chunkSize;\n    for (let i = 0; i  totalPublisherShare.length){\n        dynChunkSize = totalPublisherShare.length % chunkSize;\n      }\n      let data = [];\n      for (let j = i; j  x.publisher === publisher))\n      }\n      res.push({from: i, to: i+dynChunkSize, data: data})\n    }\n\n    return res;   \n  }\n\n  getMarketShareForGenrePerYear(genre: string): SharePerYearPerPublisher[] {\n    console.time('getMarketShareForGenrePerYear');\n    let filtered = this.gameDataSet.filter((game) => game.genre === genre);\n    var res = [];\n    var totalSalesPerYear = {};\n\n    let uniqueYears = [...new Set(filtered.map(game => game.year))];\n    let uniquePublisher = [...new Set(filtered.map(game => game.publisher))];\n\n    for (const year of uniqueYears) {\n      let filteredByYear = filtered.filter((game) => game.year === year);\n      totalSalesPerYear[year] = filteredByYear.reduce((a, b) => {\n        return a + b.globalSales;\n      }, 0);\n    }\n\n    for (const year of uniqueYears) {\n      for (const publisher of uniquePublisher) {\n        let filteredByYearAndPublisher = filtered.filter((game) => game.year === year && game.publisher === publisher);\n        let sumSalesPublisherYear = filteredByYearAndPublisher.reduce((a, b) => {\n          return a + b.globalSales;\n        }, 0);\n        res.push(new SharePerYearPerPublisher(year, (sumSalesPublisherYear / totalSalesPerYear[year]) * 100, publisher));\n      }\n    }\n\n    // Store calculated data into store\n    if (this.marketShareForGenrePerYearStore.filter(data => data.genre === genre).length === 0) {\n      this.marketShareForGenrePerYearStore.push({genre: genre, data: res});\n    }\n\n    console.timeEnd('getMarketShareForGenrePerYear');\n    return res;\n  }\n\n  getGamesOfPublisherInGenre(publisher: string, genre: string) {\n    let filteredByGenre = this.gameDataSet.filter((game) => game.genre === genre);\n    let filteredByGenreAndPublisher = filteredByGenre.filter((game) => game.publisher === publisher);\n\n    return filteredByGenreAndPublisher;\n  }\n\n  isMarketShareForGenrePerYearCached(genre: string): boolean {\n    return this.marketShareForGenrePerYearStore.filter(data => data.genre === genre).length > 0;\n  }\n\n  getCachedMarketShareForGenrePerYear(genre: string) {\n    return this.marketShareForGenrePerYearStore.filter(data => data.genre === genre);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FaqViewComponent.html":{"url":"components/FaqViewComponent.html","title":"component - FaqViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FaqViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-content/faq-view/faq-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-faq-view\n            \n\n            \n                styleUrls\n                ./faq-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./faq-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main-content/faq-view/faq-view.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/faq-view/faq-view.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faq-view',\n  templateUrl: './faq-view.component.html',\n  styleUrls: ['./faq-view.component.css']\n})\nexport class FaqViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  Frequently asked questions (FAQ)\n  \n\n\n\n  \n    Which data set was used?\n  \n  \n    For the vizualizations shown on this website, the\n      Video Game Sales with Ratings\n      dataset was enriched with the\n      Video Game Sales dataset.\n  \n\n\n\n\n  \n    What does the dataset contain?\n  \n  \n    Problem\n    The dataset Video\n      Game Sales with Ratings was selected for the analysis. While analyzing the CSV file, it was noticed that the\n      dataset  in the Publisher and Year columns are incomplete. Therefore, the\n      Video Game Sales dataset was used.\n      By merging the two datasets, the incompleteness was reduced.\n  \n\n  \n    Data collection\n    The data was collected through a script from the GameDB database of vgchartz.com.\n      They were collected in the period from 1980 to 2020 and contain ~60000 entries.\n  \n\n  \n    Data processing and transformations\n    The main preprocessing of the data set is done with Python and the Pandas library,\n      which allows the efficient and fast import of a CSV file and the further processing of the imported\n      data. In this way, it can be ensured that the visualizations and interactions take place in \"real time\".\n\n    After the implementation of the data processing functions, the interactive generation of the carousel view\n      was tested. The only delay that was noticed was when selecting a genre and calculating all publishers in\n      the second depth view. This delay is still less than 1-2 seconds and occurs only when rendering the new\n      website, so it looks like a load time. Should performance problems be encountered in the future (which\n      should not happen), the implemented data processing functions can still be optimized.\n  \n\n\n\n\n  \n    Why do some games appear more than once?\n  \n  \n    Many games are published for different platforms. Therefore,\n      it is possible that games appear several times.\n  \n\n\n\n\n  \n    Some albums are missing cover art!\n  \n  \n    That's true, not for all games there is a cover to show.\n  \n\n\n\n\n  \n    What did you use to build this?\n  \n  \n    \n      The main languages used to implement this site and the visualisations are Pyhton and Typescript(JavaScript).\n      Python was used for the pre processing of our dataset. Since the site is build with Angular, we used TypeScript\n      for the creation of the website. The visualisations are created with the frameworks d3.js and chart.js.\n    \n    \n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./faq-view.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Frequently asked questions (FAQ)        Which data set was used?        For the vizualizations shown on this website, the      Video Game Sales with Ratings      dataset was enriched with the      Video Game Sales dataset.        What does the dataset contain?        Problem    The dataset Video      Game Sales with Ratings was selected for the analysis. While analyzing the CSV file, it was noticed that the      dataset  in the Publisher and Year columns are incomplete. Therefore, the      Video Game Sales dataset was used.      By merging the two datasets, the incompleteness was reduced.        Data collection    The data was collected through a script from the GameDB database of vgchartz.com.      They were collected in the period from 1980 to 2020 and contain ~60000 entries.        Data processing and transformations    The main preprocessing of the data set is done with Python and the Pandas library,      which allows the efficient and fast import of a CSV file and the further processing of the imported      data. In this way, it can be ensured that the visualizations and interactions take place in \"real time\".    After the implementation of the data processing functions, the interactive generation of the carousel view      was tested. The only delay that was noticed was when selecting a genre and calculating all publishers in      the second depth view. This delay is still less than 1-2 seconds and occurs only when rendering the new      website, so it looks like a load time. Should performance problems be encountered in the future (which      should not happen), the implemented data processing functions can still be optimized.        Why do some games appear more than once?        Many games are published for different platforms. Therefore,      it is possible that games appear several times.        Some albums are missing cover art!        That\\'s true, not for all games there is a cover to show.        What did you use to build this?              The main languages used to implement this site and the visualisations are Pyhton and Typescript(JavaScript).      Python was used for the pre processing of our dataset. Since the site is build with Angular, we used TypeScript      for the creation of the website. The visualisations are created with the frameworks d3.js and chart.js.          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FaqViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \nPlace sticky footer content here.\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Place sticky footer content here.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Game.html":{"url":"classes/Game.html","title":"class - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Game.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                criticScore\n                            \n                            \n                                    Optional\n                                esrbRating\n                            \n                            \n                                    Optional\n                                euSales\n                            \n                            \n                                    Optional\n                                genre\n                            \n                            \n                                    Optional\n                                globalSales\n                            \n                            \n                                    Optional\n                                imgUrl\n                            \n                            \n                                    Optional\n                                index\n                            \n                            \n                                    Optional\n                                jpSales\n                            \n                            \n                                    Optional\n                                marketShare\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                naSales\n                            \n                            \n                                    Optional\n                                otherSales\n                            \n                            \n                                    Optional\n                                plattform\n                            \n                            \n                                    Optional\n                                publisher\n                            \n                            \n                                    Optional\n                                userScore\n                            \n                            \n                                    Optional\n                                year\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                equals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/Game.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            criticScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            esrbRating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            euSales\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            genre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            globalSales\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            imgUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            index\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            jpSales\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            marketShare\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            naSales\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            otherSales\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            plattform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Game.ts:35\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            equals\n                        \n                        \n                    \n                \n            \n            \n                \nequals(game: Game)\n                \n            \n\n\n            \n                \n                    Defined in src/models/Game.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    game\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Game {\n  constructor(obj?:any){\n    if(!obj) return\n    this.index = obj.index;\n    this.name = obj.Name;\n    this.plattform = obj.Platform;\n    this.publisher = obj.Publisher;\n    this.year = obj.Year;\n    this.userScore = obj.User_Score;\n    this.criticScore = obj.Critic_Score; \n    this.esrbRating = obj.ESRB_Rating;\n    this.genre = obj.Genre;\n    this.globalSales = obj.Global_Sales;\n    this.marketShare = obj.Market_Share;\n    this.imgUrl = obj.img_url;\n    this.jpSales = obj.JP_Sales;\n    this.naSales = obj.NA_Sales;\n    this.otherSales = obj.Other_Sales;\n    this.euSales = obj.EU_Sales;\n  }\n\n  index?: number;\n  name?: string;\n  genre?: string;\n  esrbRating?: string;\n  plattform?: string;\n  publisher?: string;\n  criticScore?: any;\n  userScore?: any;\n  globalSales?: any;\n  jpSales?: any;\n  euSales?: any;\n  naSales?: any;\n  otherSales?: any;\n  year?: number;\n  imgUrl?: string;\n  marketShare?: number;\n\n  equals(game:Game){\n    return (game.index === this.index)\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameDetailsComponent.html":{"url":"components/GameDetailsComponent.html","title":"component - GameDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GameDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-content/game-details/game-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-details\n            \n\n            \n                styleUrls\n                ./game-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                game\n                            \n                            \n                                    Public\n                                gamesInThisYear\n                            \n                            \n                                    Public\n                                leastGamesOfThisPublisher\n                            \n                            \n                                    Public\n                                mostGamesOfThisPublisher\n                            \n                            \n                                    Public\n                                mostGenreGamesInThisYear\n                            \n                            \n                                    Public\n                                PieUseCase\n                            \n                            \n                                    Public\n                                radarUseCase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadDetailGame\n                            \n                            \n                                loadGamesOfThisPublisher\n                            \n                            \n                                loadGamesOfThisYear\n                            \n                            \n                                loadMostGenreGamesInThisYear\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, route: ActivatedRoute, navigationService: NavigationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-content/game-details/game-details.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadDetailGame\n                        \n                        \n                    \n                \n            \n            \n                \nloadDetailGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/game-details/game-details.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadGamesOfThisPublisher\n                        \n                        \n                    \n                \n            \n            \n                \nloadGamesOfThisPublisher()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/game-details/game-details.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadGamesOfThisYear\n                        \n                        \n                    \n                \n            \n            \n                \nloadGamesOfThisYear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/game-details/game-details.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadMostGenreGamesInThisYear\n                        \n                        \n                    \n                \n            \n            \n                \nloadMostGenreGamesInThisYear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/game-details/game-details.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/game-details/game-details.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            game\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Game\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/game-details/game-details.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gamesInThisYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Game[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/game-details/game-details.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            leastGamesOfThisPublisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Game[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/game-details/game-details.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mostGamesOfThisPublisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Game[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/game-details/game-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mostGenreGamesInThisYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Game[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/game-details/game-details.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            PieUseCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : PieUseCase\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/game-details/game-details.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            radarUseCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RadarUseCase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/game-details/game-details.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Game } from 'src/models/Game';\nimport { DataService } from 'src/app/services/DataService';\nimport {NavigationService} from '../../services/navigate.service';\nimport {RadarUseCase} from 'src/app/shared/radar-chart/radar-chart.component';\nimport {PieUseCase} from '../../shared/pie-chart/pie-chart.component';\n\n@Component({\n  selector: 'app-game-details',\n  templateUrl: './game-details.component.html',\n  styleUrls: ['./game-details.component.css']\n})\nexport class GameDetailsComponent implements OnInit {\n  public PieUseCase = PieUseCase;\n  public game: Game;\n  public mostGamesOfThisPublisher: Game[];\n  public leastGamesOfThisPublisher: Game[];\n  public mostGenreGamesInThisYear: Game[];\n  public radarUseCase: RadarUseCase;\n  public gamesInThisYear: Game[];\n\n  constructor(private dataService:DataService, \n              private route: ActivatedRoute, \n              private navigationService: NavigationService,\n              private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.radarUseCase = RadarUseCase.crit_user_score_details;\n\n    this.dataService.onReady$.subscribe((state)=>{\n      if(!state) return;\n      this.loadDetailGame();\n      this.loadGamesOfThisPublisher();\n      this.loadGamesOfThisYear();\n      this.loadMostGenreGamesInThisYear();\n    });\n\n    this.router.events.subscribe((value) => {\n      this.game = undefined;\n      this.loadDetailGame();\n      this.loadGamesOfThisPublisher();\n      this.loadGamesOfThisYear();\n      this.loadMostGenreGamesInThisYear();\n    });\n  }\n\n  loadMostGenreGamesInThisYear(){\n    let arr = this.dataService.gameDataSet.filter(item => item.genre === this.game.genre &&\n      item.name !== this.game.name &&\n      this.game.year === item.year);\n    arr.sort((a,b) => {\n      return b.globalSales - a.globalSales\n    });\n    arr = arr.slice(0,9);\n    arr.push(this.game);\n    arr.sort((a,b) => {\n      return b.globalSales - a.globalSales\n    });\n    this.mostGenreGamesInThisYear = arr;\n  }\n\n  loadGamesOfThisPublisher() {\n    let mostArr = this.dataService.gameDataSet.filter(item => item.genre === this.game.genre && item.name !== this.game.name);\n    mostArr.sort((a, b) => {\n      return b.globalSales - a.globalSales;\n    });\n    mostArr = mostArr.slice(0, 9);\n    mostArr.push(this.game);\n    mostArr.sort((a, b) => {\n      return b.globalSales - a.globalSales;\n    });\n    this.mostGamesOfThisPublisher = mostArr;\n\n    let leastArr = this.dataService.gameDataSet.filter(item => item.genre === this.game.genre && item.name !== this.game.name && (item.userScore || item.criticScore));\n    leastArr.sort((a, b) => {\n      return a.globalSales - b.globalSales;\n    });\n    leastArr = leastArr.slice(0, 9);\n    leastArr.push(this.game);\n    leastArr.sort((a, b) => {\n      return a.globalSales - b.globalSales;\n    });\n    this.leastGamesOfThisPublisher = leastArr;\n  }\n\n  loadGamesOfThisYear(){\n    let arr = this.dataService.gameDataSet.filter(item => item.year === this.game.year);\n    arr.sort((a,b) => { return (b.globalSales - a.globalSales) });\n    arr = arr.slice(0,10);\n    if(!arr.includes(this.game))\n      arr[9] = this.game;\n    arr.sort((a,b) => { return (b.globalSales - a.globalSales) });\n    this.gamesInThisYear = arr;\n  }\n\n  loadDetailGame(){\n    let gameId = this.route.snapshot.params[\"gameId\"];\n    this.game = this.dataService.gameDataSet.filter(item => item.index === Number(gameId))[0];\n  }\n}\n  \n\n\n    \n\n    \n        {{game?.name}}\n\n\n  \n    \n  \n  \n    Game Details\n    \n    \n      \n        \n          Name\n        \n        \n          {{this.game?.name}}\n        \n      \n\n      \n        \n          Platform\n        \n        \n          {{this.game?.plattform}}\n        \n      \n\n      \n        \n          Genre\n        \n        \n          {{this.game?.genre}}\n        \n      \n\n      \n        \n          Publisher\n        \n        \n          {{this.game?.publisher}}\n        \n      \n\n      \n        \n          Release Year\n        \n        \n          {{this.game?.year}}\n        \n      \n\n      \n        \n          Global Sales\n        \n        \n          {{this.game?.globalSales}} Millions\n        \n      \n      \n        \n          NA Sales\n        \n        \n          {{this.game?.naSales}} Millions\n        \n      \n\n      \n        \n          JP Sales\n        \n        \n          {{this.game?.jpSales}} Millions\n        \n      \n\n      \n        \n          EU Sales\n        \n        \n          {{this.game?.euSales}} Millions\n        \n      \n\n      \n        \n          Other Sales\n        \n        \n          {{this.game?.otherSales}} Millions\n        \n      \n\n      \n        \n          User Score\n        \n        \n          {{this.game?.userScore}}\n        \n      \n\n      \n        \n          Critics Score\n        \n        \n          {{this.game?.criticScore}}\n        \n      \n\n      \n        \n          Rating\n        \n        \n          {{this.game?.esrbRating}}\n        \n      \n    \n  \n  \n  \n    \n      \n        Top 10 sold Games in {{this.game?.year}}\n        \n        \n      \n      \n        Top 10 sold {{this.game?.genre}} Games in {{this.game?.year}}\n        \n        \n      \n      \n        Critic and User score of most successful {{game?.genre}} games\n        \n        \n      \n      \n        Critic and User score of least successful {{game?.genre}} games\n        \n        \n      \n      \n        Comparison to most successful {{game?.genre}} games\n        \n        \n      \n      \n        International Sale Distribution in Millions\n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./game-details.component.css\n                \n                .game-details-container {\n  opacity: 0.8;\n  font-size: 18px;\n}\n\n.graph {\n  margin-top: 200px;\n  padding-top: 200px ;\n}\n\n.label {\n  font-weight: 600;\n}\n\n.image-col {\n  margin: auto;\n  text-align: center;\n  height: 300px;\n}\n\n.image {\n  height: 100%;\n  max-width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{game?.name}}              Game Details                                Name                          {{this.game?.name}}                                      Platform                          {{this.game?.plattform}}                                      Genre                          {{this.game?.genre}}                                      Publisher                          {{this.game?.publisher}}                                      Release Year                          {{this.game?.year}}                                      Global Sales                          {{this.game?.globalSales}} Millions                                      NA Sales                          {{this.game?.naSales}} Millions                                      JP Sales                          {{this.game?.jpSales}} Millions                                      EU Sales                          {{this.game?.euSales}} Millions                                      Other Sales                          {{this.game?.otherSales}} Millions                                      User Score                          {{this.game?.userScore}}                                      Critics Score                          {{this.game?.criticScore}}                                      Rating                          {{this.game?.esrbRating}}                                          Top 10 sold Games in {{this.game?.year}}                                    Top 10 sold {{this.game?.genre}} Games in {{this.game?.year}}                                    Critic and User score of most successful {{game?.genre}} games                                    Critic and User score of least successful {{game?.genre}} games                                    Comparison to most successful {{game?.genre}} games                                    International Sale Distribution in Millions                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenreCarouselComponent.html":{"url":"components/GenreCarouselComponent.html","title":"component - GenreCarouselComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GenreCarouselComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-content/graph-view/genre-carousel/genre-carousel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-genre-carousel\n            \n\n            \n                styleUrls\n                ./genre-carousel.component.css\n            \n\n\n\n            \n                templateUrl\n                ./genre-carousel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Public\n                                dataService\n                            \n                            \n                                staticCarousels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateStaticCarouselData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-content/graph-view/genre-carousel/genre-carousel.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateStaticCarouselData\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateStaticCarouselData(cards: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/graph-view/genre-carousel/genre-carousel.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/graph-view/genre-carousel/genre-carousel.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByFn\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByFn(index)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/graph-view/genre-carousel/genre-carousel.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CoverCarousel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/genre-carousel/genre-carousel.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/genre-carousel/genre-carousel.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            staticCarousels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StaticCarousel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/genre-carousel/genre-carousel.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {DataService} from '../../../services/DataService';\nimport {CoverCarousel} from '../../../../models/CoverCarousel';\n\nexport interface StaticCarousel {\n  title: string,\n  data : CoverCarousel[]\n}\n\n@Component({\n  selector: 'app-genre-carousel',\n  templateUrl: './genre-carousel.component.html',\n  styleUrls: ['./genre-carousel.component.css']\n})\nexport class GenreCarouselComponent implements OnInit {\n  data: CoverCarousel[] = [];\n  staticCarousels: StaticCarousel[] = [];\n\n  constructor(public dataService: DataService) {\n  }\n\n  ngOnInit(): void {\n    this.dataService.liveCarousel$.subscribe(data => {\n      this.data = data;\n    });\n\n    //gets called if dataservice is ready\n    this.dataService.onReady$.subscribe(ready => {\n      if (ready) {\n        this.dataService.updateCoverCarousel('Racing', null, 1970, 2019, 7);\n        this.calculateStaticCarouselData(this.dataService.getGenres());\n      }\n    });\n  }\n\n  trackByFn(index) {\n    return index;\n  }\n\n  calculateStaticCarouselData(cards: string[]) {\n    for (let card of cards) {\n      this.dataService.getCoverCarousel(card,null,1980,2019, 7).then(data => {\n        this.staticCarousels.push({title: card, data: data});\n      })\n\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n\n    \n                \n                    ./genre-carousel.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenreCarouselComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenrePublisherViewComponent.html":{"url":"components/GenrePublisherViewComponent.html","title":"component - GenrePublisherViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GenrePublisherViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-genre-publisher-view\n            \n\n            \n                styleUrls\n                ./genre-publisher-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./genre-publisher-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataService\n                            \n                            \n                                games\n                            \n                            \n                                genre\n                            \n                            \n                                    Public\n                                navigationService\n                            \n                            \n                                PieUseCase\n                            \n                            \n                                publisher\n                            \n                            \n                                RadarUseCase\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router, route: ActivatedRoute, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            games\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Game[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navigationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NavigationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PieUseCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : PieUseCase\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RadarUseCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : RadarUseCase\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {DataService} from '../../../services/DataService';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NavigationService} from '../../../services/navigate.service';\nimport {Game} from '../../../../models/Game';\nimport {RadarUseCase} from '../../../shared/radar-chart/radar-chart.component';\nimport {PieUseCase} from '../../../shared/pie-chart/pie-chart.component';\n\n@Component({\n  selector: 'app-genre-publisher-view',\n  templateUrl: './genre-publisher-view.component.html',\n  styleUrls: ['./genre-publisher-view.component.css']\n})\nexport class GenrePublisherViewComponent implements OnInit {\n  PieUseCase = PieUseCase;\n  RadarUseCase = RadarUseCase;\n  publisher: string;\n  genre: string;\n  games: Game[];\n\n  constructor(public dataService: DataService,\n              public router: Router,\n              public route: ActivatedRoute,\n              public navigationService: NavigationService) {\n  }\n\n  ngOnInit(): void {\n    this.publisher = this.route.snapshot.params.publisherId;\n    this.genre = this.route.snapshot.params.genreId;\n\n    this.dataService.onReady$.subscribe(ready => {\n      if (ready) {\n        this.games = this.dataService.getGamesOfPublisherInGenre(this.publisher, this.genre);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Top 10 Critic and User scores of least successful games\n\n    \n    \n    \n      Loading...\n    \n  \n  \n    Top 10 Critic and User scores of most successful games\n    \n    \n    \n      Loading...\n    \n  \n  \n    Global Sales of Top 50 {{genre}} Games from {{publisher}}\n    \n    \n  \n  \n    Publisher count in top 100 games of genre {{genre}}\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./genre-publisher-view.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Top 10 Critic and User scores of least successful games                  Loading...            Top 10 Critic and User scores of most successful games                  Loading...            Global Sales of Top 50 {{genre}} Games from {{publisher}}                Publisher count in top 100 games of genre {{genre}}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenrePublisherViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenreSalesPerYear.html":{"url":"classes/GenreSalesPerYear.html","title":"class - GenreSalesPerYear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenreSalesPerYear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/GenreSalesPerYear.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                genre\n                            \n                            \n                                    Optional\n                                percentage_per_year\n                            \n                            \n                                    Optional\n                                sales\n                            \n                            \n                                    Optional\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            genre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/GenreSalesPerYear.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            percentage_per_year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/GenreSalesPerYear.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sales\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/GenreSalesPerYear.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/GenreSalesPerYear.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GenreSalesPerYear {\n    year?: number;\n    genre?: string;\n    sales?: number;\n    percentage_per_year?: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphViewComponent.html":{"url":"components/GraphViewComponent.html","title":"component - GraphViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GraphViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-content/graph-view/graph-view.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-view\n            \n\n            \n                styleUrls\n                ./graph-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./graph-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main-content/graph-view/graph-view.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-main-view',\n  templateUrl: './graph-view.component.html',\n  styleUrls: ['./graph-view.component.css']\n})\nexport class GraphViewComponent {\n  constructor( ) {\n  }\n\n\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./graph-view.component.css\n                \n                .site-heading {\n  margin-top: 0.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InteractionService.html":{"url":"injectables/InteractionService.html","title":"injectable - InteractionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InteractionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interaction.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gameCardHoverSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onGameCardHover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interaction.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGameCardHover\n                        \n                        \n                    \n                \n            \n            \n                \nonGameCardHover(game: Game)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interaction.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    game\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gameCardHoverSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/interaction.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {Game} from '../../models/Game';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InteractionService {\n  public gameCardHoverSubject$ = new BehaviorSubject(null); // Subscribe to this Subject to be notified on game card hovers\n\n  constructor() { }\n\n  onGameCardHover(game: Game) {\n    this.gameCardHoverSubject$.next(game);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainContentComponent.html":{"url":"components/MainContentComponent.html","title":"component - MainContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-content/main-content.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-content\n            \n\n            \n                styleUrls\n                ./main-content.component.css\n            \n\n\n\n            \n                templateUrl\n                ./main-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main-content/main-content.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/main-content.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-content',\n  templateUrl: './main-content.component.html',\n  styleUrls: ['./main-content.component.css']\n})\nexport class MainContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./main-content.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarketShareForGenrePerYearStore.html":{"url":"interfaces/MarketShareForGenrePerYearStore.html","title":"interface - MarketShareForGenrePerYearStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarketShareForGenrePerYearStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/DataService.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        genre\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         SharePerYearPerPublisher[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SharePerYearPerPublisher[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Game} from '../../models/Game';\nimport {GenreSalesPerYear} from '../../models/GenreSalesPerYear';\nimport {HttpClient} from '@angular/common/http';\nimport * as Rx from 'rxjs';\nimport {CoverCarousel} from 'src/models/CoverCarousel';\nimport {SharePerYearPerPublisher} from 'src/models/SharePerYearPerPublisher';\nimport {observable, Observable} from 'rxjs';\nimport {element} from 'protractor';\n\n\ninterface MarketShareForGenrePerYearStore {\n  genre: string;\n  data: SharePerYearPerPublisher[];\n}\n\ninterface CoverCarouselStore {\n  genre: string,\n  publisher: string,\n  fromYear: number,\n  toYear: number,\n  cardAmmout: number,\n  data: CoverCarousel[]\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  public gameDataSet: Game[] = [];\n  public genreSalesPerYears: GenreSalesPerYear[];\n  public marketShareForGenrePerYearStore: MarketShareForGenrePerYearStore[] = [];\n  public coverCarouselStore: CoverCarouselStore[] = [];\n  public liveCarousel$: Rx.BehaviorSubject;\n  public onReady$: Rx.BehaviorSubject;\n\n  constructor(private http: HttpClient) {\n    this.liveCarousel$ = new Rx.BehaviorSubject([]);\n    this.onReady$ = new Rx.BehaviorSubject(false);\n    this.readInGameDataSet().subscribe(data => {\n      for (const game of data) {\n        this.gameDataSet.push(new Game(game));\n      }\n      this.readInGenreSalesPerYears().subscribe(data => {\n        this.genreSalesPerYears = data;\n        //console.log(\"GenreSales per Year: \", this.genreSalesPerYears)\n        this.onReady$.next(true);\n      });\n    });\n  }\n\n  readInGameDataSet(): Rx.Observable {\n    return this.http.get('./assets/preprocessed_dataset.json');\n  }\n\n  readInGenreSalesPerYears(): Rx.Observable {\n    return this.http.get('./assets/SalesPerYearGenre.json');\n  }\n\n  updateCoverCarousel(genre: string, publisher: string, fromYear: number, toYear: number, cardAmount: number) {\n    console.time('updateCoverCarousel');\n    this.getCoverCarousel(genre, publisher, fromYear, toYear, cardAmount).then(carouselList => {\n      this.liveCarousel$.next(carouselList);\n      console.timeEnd('updateCoverCarousel');\n    });\n  }\n\n  getCoverCarousel(genre: string, publisher: string, fromYear: number, toYear: number, cardAmount: number): Promise {\n    return new Promise((resolve, reject) => {\n      try {\n        // Check if result was already cached\n        const cachedResult: CoverCarouselStore = this.coverCarouselStore.filter((cachedResult: CoverCarouselStore) =>\n          cachedResult.genre === genre &&\n          cachedResult.publisher === publisher &&\n          cachedResult.fromYear === fromYear &&\n          cachedResult.toYear === toYear &&\n          cachedResult.cardAmmout === cardAmount)[0];\n\n        if(cachedResult) {\n          resolve(cachedResult.data);\n        } else {\n          let timeInterval = toYear - fromYear;\n          let timeBin = timeInterval / cardAmount;\n          let carouselList = [];\n\n          let carouselNonEmptyCardAmount = 0;\n          for (let i = 0; i  game.genre))]\n    return uniqueGenres;\n  }\n\n  getPublishersForGenre(genre: string): string[] {\n    const filteredList = this.gameDataSet.filter(game => game.genre === genre);\n    const uniquePublishers =  [...new Set(filteredList.map(game => game.publisher))];\n    return uniquePublishers;\n  }\n\n  getCoverCarouselData(fromTime: number, toTime: number, genre: String): Game {\n    var filteredGameData;\n    //filter for given Genre\n    if (genre !== 'all') {\n      filteredGameData = this.gameDataSet.filter(game => game.genre === genre);\n    } else {\n      filteredGameData = this.gameDataSet;\n    }\n    // sort gameDataSet by globalSales\n    filteredGameData.sort((a, b) => {\n      //a is less than b by some ordering criterion\n      if (a.globalSales  b.globalSales) {\n        return -1;\n      }\n      return 0;\n    });\n    for (const game of filteredGameData) {\n      //if game is between time range\n      if (game.year >= fromTime && game.year  game.genre === genre && genre !== 'all');\n    filteredGameData = filteredGameData.filter(game => game.publisher === publisher && publisher !== 'all');\n    // sort gameDataSet by globalSales\n    filteredGameData.sort((a, b) => {\n      //a is less than b by some ordering criterion\n      if (a.globalSales  b.globalSales) {\n        return -1;\n      }\n      return 0;\n    });\n    for (const game of filteredGameData) {\n      //if game is between time range\n      if (game.year >= fromTime && game.year  elem.publisher))];\n    \n    let publisherClusteredData = [];\n    for (const publisher of uniquePublisher) {\n      publisherClusteredData.push({\n        publisher: publisher, \n        data: arr.filter((element) => element.publisher === publisher)\n      });\n    }\n\n    let totalPublisherShare = [];\n    for (const cluster of publisherClusteredData) {\n      let sum = cluster.data.reduce((a,b) => a + b.share ,0)\n      totalPublisherShare.push({publisher:cluster.publisher, totalShare:sum});\n    }\n\n    //NOTE: This could also be interesting to visualize?\n    totalPublisherShare.sort((a, b) => {\n      return (b.totalShare - a.totalShare);\n    })\n\n    console.log(totalPublisherShare.length)\n        \n    let res = []\n    let dynChunkSize = chunkSize;\n    for (let i = 0; i  totalPublisherShare.length){\n        dynChunkSize = totalPublisherShare.length % chunkSize;\n      }\n      let data = [];\n      for (let j = i; j  x.publisher === publisher))\n      }\n      res.push({from: i, to: i+dynChunkSize, data: data})\n    }\n\n    return res;   \n  }\n\n  getMarketShareForGenrePerYear(genre: string): SharePerYearPerPublisher[] {\n    console.time('getMarketShareForGenrePerYear');\n    let filtered = this.gameDataSet.filter((game) => game.genre === genre);\n    var res = [];\n    var totalSalesPerYear = {};\n\n    let uniqueYears = [...new Set(filtered.map(game => game.year))];\n    let uniquePublisher = [...new Set(filtered.map(game => game.publisher))];\n\n    for (const year of uniqueYears) {\n      let filteredByYear = filtered.filter((game) => game.year === year);\n      totalSalesPerYear[year] = filteredByYear.reduce((a, b) => {\n        return a + b.globalSales;\n      }, 0);\n    }\n\n    for (const year of uniqueYears) {\n      for (const publisher of uniquePublisher) {\n        let filteredByYearAndPublisher = filtered.filter((game) => game.year === year && game.publisher === publisher);\n        let sumSalesPublisherYear = filteredByYearAndPublisher.reduce((a, b) => {\n          return a + b.globalSales;\n        }, 0);\n        res.push(new SharePerYearPerPublisher(year, (sumSalesPublisherYear / totalSalesPerYear[year]) * 100, publisher));\n      }\n    }\n\n    // Store calculated data into store\n    if (this.marketShareForGenrePerYearStore.filter(data => data.genre === genre).length === 0) {\n      this.marketShareForGenrePerYearStore.push({genre: genre, data: res});\n    }\n\n    console.timeEnd('getMarketShareForGenrePerYear');\n    return res;\n  }\n\n  getGamesOfPublisherInGenre(publisher: string, genre: string) {\n    let filteredByGenre = this.gameDataSet.filter((game) => game.genre === genre);\n    let filteredByGenreAndPublisher = filteredByGenre.filter((game) => game.publisher === publisher);\n\n    return filteredByGenreAndPublisher;\n  }\n\n  isMarketShareForGenrePerYearCached(genre: string): boolean {\n    return this.marketShareForGenrePerYearStore.filter(data => data.genre === genre).length > 0;\n  }\n\n  getCachedMarketShareForGenrePerYear(genre: string) {\n    return this.marketShareForGenrePerYearStore.filter(data => data.genre === genre);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gameNameList\n                            \n                            \n                                search\n                            \n                            \n                                    Public\n                                searchquery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execSearch\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            execSearch\n                        \n                        \n                    \n                \n            \n            \n                \nexecSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gameNameList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchquery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navbar/navbar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from '../services/DataService';\nimport { Router, NavigationExtras } from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport { Game } from 'src/models/Game'\nimport {NavigationService} from '../services/navigate.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  public searchquery: string;\n  public gameNameList: string[];\n\n  constructor(private dataService: DataService,\n              private router: Router,\n              private navigationService: NavigationService) { }\n\n  ngOnInit(): void {\n    this.dataService.onReady$.subscribe(() => {\n      this.gameNameList = this.dataService.gameDataSet.map(i => i.name + \" | \" + i.plattform);\n    })\n  }\n\n  search = (text$: Observable) =>\n  text$.pipe(\n    debounceTime(200),\n    distinctUntilChanged(),\n    map(term => term.length  v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n  );\n\n\n  execSearch() {\n    let searchParams = this.searchquery.split(\" | \");\n    let game: Game = this.dataService.gameDataSet.filter(item => item.name === searchParams[0] && item.plattform === searchParams[1])[0];\n    this.navigationService.updateGame(game);\n    this.router.navigate(['/home/details', game.index]);\n  }\n}\n\n    \n\n    \n        \n\n  Video Game Dataset Visualisation\n  \n    \n  \n  \n    \n\n      \n        FAQ\n      \n      \n        Link\n      \n      \n        Disabled\n      -->\n    \n    \n      \n      Search\n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Video Game Dataset Visualisation                            FAQ                    Link                    Disabled      -->                    Search      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/navigate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                game$\n                            \n                            \n                                    Public\n                                genre$\n                            \n                            \n                                    Public\n                                publisher$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decodeEncodedUrl\n                            \n                            \n                                    Public\n                                encodeURLElement\n                            \n                            \n                                    Public\n                                updateGame\n                            \n                            \n                                    Public\n                                updateGenre\n                            \n                            \n                                    Public\n                                updatePublisher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/navigate.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            decodeEncodedUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeEncodedUrl(encodedUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/navigate.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encodedUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            encodeURLElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    encodeURLElement(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/navigate.service.ts:34\n                \n            \n\n\n            \n                \n                    Removes White Spaces and /\\ from an url and replaces them with _\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGame(game: Game)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/navigate.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    game\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateGenre\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGenre(genre: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/navigate.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genre\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updatePublisher\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePublisher(publisher: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/navigate.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            game$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/navigate.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            genre$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/navigate.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publisher$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/navigate.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, ReplaySubject} from 'rxjs';\nimport {Game} from '../../models/Game';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n  public genre$ = new BehaviorSubject(null);\n  public publisher$ = new BehaviorSubject(null);\n  public game$ = new ReplaySubject(null);\n\n  constructor() {\n  }\n\n\n  public updateGenre(genre: string) {\n    this.genre$.next(genre);\n  }\n\n  public updatePublisher(publisher: string) {\n    this.publisher$.next(publisher);\n  }\n\n  public updateGame(game: Game) {\n    this.game$.next(game);\n  }\n\n\n  /**\n   * Removes White Spaces and /\\ from an url and replaces them with _\n   * @param url\n   */\n  public encodeURLElement(url: string) {\n    return url.replace(' ', '___').replace('/', '__').replace('\\\\', '_');\n  }\n\n  public decodeEncodedUrl(encodedUrl: string) {\n    return encodedUrl.replace('___', ' ').replace('__', '/').replace('_', '\\\\');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PieChartComponent.html":{"url":"components/PieChartComponent.html","title":"component - PieChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PieChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/pie-chart/pie-chart.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pie-chart\n            \n\n            \n                styleUrls\n                ./pie-chart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pie-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pieChartData\n                            \n                            \n                                    Public\n                                pieChartLabels\n                            \n                            \n                                    Public\n                                pieChartOptions\n                            \n                            \n                                    Public\n                                pieChartType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                game\n                            \n                            \n                                games\n                            \n                            \n                                useCase\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/pie-chart/pie-chart.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        game\n                    \n                \n                \n                    \n                        Type :         Game\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pie-chart/pie-chart.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        games\n                    \n                \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pie-chart/pie-chart.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useCase\n                    \n                \n                \n                    \n                        Type :         PieUseCase\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pie-chart/pie-chart.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pie-chart/pie-chart.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pieChartData\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pie-chart/pie-chart.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pieChartLabels\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pie-chart/pie-chart.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pieChartOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChartOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    responsive: true,\n    legend: {\n      position: 'top',\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/pie-chart/pie-chart.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pieChartType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"pie\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/pie-chart/pie-chart.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges,  Input, ViewChild, ElementRef } from '@angular/core';\nimport { Game } from 'src/models/Game';\nimport { Router } from '@angular/router';\nimport { NavigationService } from 'src/app/services/navigate.service';\nimport { ChartOptions } from 'chart.js';\nimport {DataService} from '../../services/DataService';\n\n\nexport enum PieUseCase {\n  details_view_sale_distribution,\n  top100_genre_publisher\n}\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css']\n})\nexport class PieChartComponent implements OnInit {\n  @Input() public game: Game;\n  @Input() games: Game[];\n  @Input() useCase: PieUseCase;\n\n  public pieChartData;\n  public pieChartLabels;\n  public pieChartType = \"pie\";\n  public pieChartOptions: ChartOptions = {\n    responsive: true,\n    legend: {\n      position: 'top',\n    }\n  };\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n    switch(this.useCase) {\n      case PieUseCase.details_view_sale_distribution:\n        this.pieChartData = [\n          this.game.euSales,\n          this.game.jpSales,\n          this.game.naSales,\n          this.game.otherSales\n        ];\n        this.pieChartLabels = [\"EU Sales\",\"JP Sales\",\"NA Sales\", \"Other Sales\"];\n        break;\n      case PieUseCase.top100_genre_publisher:\n        this.dataService.onReady$.subscribe(ready => { //Fetch data since we need all the data from the dataset\n          if (ready) {\n            const gameDataForGenre = this.dataService.gameDataSet.filter(game => game.genre === this.games[0].genre);\n            const sortedDataForGenreBySales = gameDataForGenre.sort((a, b) => b.globalSales - a.globalSales);\n            const top100GamesByGenre = sortedDataForGenreBySales.slice(0,100);\n            const top10GamesByGenrePublisherList =  [...new Set(top100GamesByGenre.map(game => game.publisher))];\n\n            // add current publisher to list if not already in list\n            if(!top10GamesByGenrePublisherList.includes(this.games[0].publisher)){\n              top10GamesByGenrePublisherList.push(this.games[0].publisher);\n            }\n\n            let publisherOccurenceArray = new Array(top10GamesByGenrePublisherList.length).fill(0);\n            // now count occurrences of publishers\n            for(let index = 0; index  b[1] - a[1]));\n\n            // add all occurrences below 3% together\n            let otherCount = 0;\n            let labels: string[] = [];\n            let data: number[] = [];\n            for(let i = 0; i \n    \n\n    \n        \n    \n    \n\n    \n\n    \n                \n                    ./pie-chart.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PieChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PublisherCarouselComponent.html":{"url":"components/PublisherCarouselComponent.html","title":"component - PublisherCarouselComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PublisherCarouselComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-publisher-carousel\n            \n\n            \n                styleUrls\n                ./publisher-carousel.component.css\n            \n\n\n\n            \n                templateUrl\n                ./publisher-carousel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carouselFullyLoaded\n                            \n                            \n                                carouselReloadStepSize\n                            \n                            \n                                data\n                            \n                            \n                                    Public\n                                dataService\n                            \n                            \n                                genre\n                            \n                            \n                                    Public\n                                navigationService\n                            \n                            \n                                publisherIndex\n                            \n                            \n                                publisherList\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                staticCarousels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToTop\n                            \n                            \n                                calculateStaticCarouselData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router, route: ActivatedRoute, navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:scroll\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:scroll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:74\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backToTop\n                        \n                        \n                    \n                \n            \n            \n                \nbackToTop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateStaticCarouselData\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateStaticCarouselData(publishers: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publishers\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByFn\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByFn(index)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carouselFullyLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carouselReloadStepSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CoverCarousel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genre\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navigationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NavigationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisherIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisherList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            staticCarousels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StaticCarousel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, HostListener, OnInit} from '@angular/core';\nimport {CoverCarousel} from '../../../../models/CoverCarousel';\nimport {DataService} from '../../../services/DataService';\nimport {StaticCarousel} from '../genre-carousel/genre-carousel.component';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NavigationService} from '../../../services/navigate.service';\n\n@Component({\n  selector: 'app-publisher-carousel',\n  templateUrl: './publisher-carousel.component.html',\n  styleUrls: ['./publisher-carousel.component.css']\n})\nexport class PublisherCarouselComponent implements OnInit, AfterViewInit {\n  data: CoverCarousel[];\n  staticCarousels: StaticCarousel[] = [];\n  genre: string;\n  publisherList: string[];\n  publisherIndex: number;\n  carouselFullyLoaded = false;\n  carouselReloadStepSize = 50;\n\n\n  constructor(public dataService: DataService,\n              public router: Router,\n              public route: ActivatedRoute,\n              public navigationService: NavigationService) {\n  }\n\n  ngOnInit(): void {\n    this.genre = this.route.snapshot.params.genreId;\n    this.navigationService.updateGenre(this.genre);\n\n    this.dataService.liveCarousel$.subscribe(data => {\n      this.data = data;\n    });\n\n    //gets called if dataservice is ready\n    this.dataService.onReady$.subscribe(ready => {\n      if (ready) {\n        this.dataService.updateCoverCarousel(this.genre, null, 1970, 2019, 7);\n        this.publisherList = this.dataService.getPublishersForGenre(this.genre);\n        console.log(this.publisherList);\n        this.publisherIndex = 8;\n        this.calculateStaticCarouselData(this.publisherList.slice(0, 8));\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n\n  }\n\n  trackByFn(index) {\n    return index;\n  }\n\n  backToTop() {\n    window.scroll(0, 0);\n  }\n\n  calculateStaticCarouselData(publishers: string[]) {\n    console.log('Publishers to be loaded: ', publishers);\n    console.time('Start calculateStaticCarouselData');\n    publishers.forEach(publisher => {\n      this.dataService.getCoverCarousel(this.genre, publisher, 1980, 2019, 7).then(data => {\n        this.staticCarousels.push({title: publisher, data: data});\n      });\n    });\n    console.timeEnd('Start calculateStaticCarouselData');\n  }\n\n\n  @HostListener('window:scroll', [])\n  onScroll(): void {\n    if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n      if (this.publisherIndex  this.publisherList.length ? this.publisherList.length : this.publisherIndex + this.carouselReloadStepSize;\n        this.publisherList.slice(this.publisherIndex, nextIndices).forEach(publisher => {\n          this.dataService.getCoverCarousel(this.genre, publisher, 1980, 2019, 7).then(data => {\n            calculatedCarousels.push({title: publisher, data: data});\n            if (calculatedCarousels.length === (nextIndices - this.publisherIndex)) {\n              this.staticCarousels.push(...calculatedCarousels);\n              this.publisherIndex += (nextIndices - this.publisherIndex);\n            }\n          });\n        });\n      } else {\n        this.carouselFullyLoaded = true;\n        console.log('No more games to load.');\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n  Back to top\n\n\n    \n\n    \n                \n                    ./publisher-carousel.component.css\n                \n                .btt {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Back to top'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PublisherCarouselComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadarChartComponent.html":{"url":"components/RadarChartComponent.html","title":"component - RadarChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadarChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/radar-chart/radar-chart.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-radar-chart\n            \n\n            \n                styleUrls\n                ./radar-chart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./radar-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                radarChart\n                            \n                            \n                                randomId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createUserCriticScoreRadar\n                            \n                            \n                                    Public\n                                initDetailRadarChart\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                highlight\n                            \n                            \n                                rawData\n                            \n                            \n                                useCase\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/radar-chart/radar-chart.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        highlight\n                    \n                \n                \n                    \n                        Type :         Game\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/radar-chart/radar-chart.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rawData\n                    \n                \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/radar-chart/radar-chart.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useCase\n                    \n                \n                \n                    \n                        Type :         RadarUseCase\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/radar-chart/radar-chart.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createUserCriticScoreRadar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserCriticScoreRadar(sortOrder: SortOrder, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/radar-chart/radar-chart.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sortOrder\n                                    \n                                                SortOrder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initDetailRadarChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initDetailRadarChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/radar-chart/radar-chart.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/radar-chart/radar-chart.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/radar-chart/radar-chart.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/radar-chart/radar-chart.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(evt)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/radar-chart/radar-chart.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            radarChart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/radar-chart/radar-chart.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            randomId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/radar-chart/radar-chart.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild, OnChanges} from '@angular/core';\nimport {Chart} from 'chart.js';\nimport {Game} from '../../../models/Game';\nimport { NavigationService } from 'src/app/services/navigate.service';\nimport { Router } from '@angular/router';\n\nexport enum RadarUseCase {\n  crit_user_score_highest,\n  crit_user_score_lowest,\n  crit_user_score_details\n}\n\nenum SortOrder {\n  highest,\n  lowest\n}\n\n@Component({\n  selector: 'app-radar-chart',\n  templateUrl: './radar-chart.component.html',\n  styleUrls: ['./radar-chart.component.css']\n})\nexport class RadarChartComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() rawData: Game[];\n  @Input() highlight: Game;\n  @Input() useCase: RadarUseCase;\n\n  radarChart: Chart;\n  randomId: string;\n\n  constructor(private navigationService: NavigationService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.randomId = Math.abs(Math.random()).toString();\n  }\n\n  ngOnChanges(){\n    if(this.randomId) {\n      this.ngAfterViewInit();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    switch (this.useCase) {\n      case RadarUseCase.crit_user_score_highest:\n        console.log('crit_user_Score use case selected for radar chart');\n        this.createUserCriticScoreRadar(SortOrder.highest, 10);\n        break;\n      case RadarUseCase.crit_user_score_lowest:\n        console.log('crit_user_Score use case selected for radar chart');\n        this.createUserCriticScoreRadar(SortOrder.lowest, 10);\n        break;\n      case RadarUseCase.crit_user_score_details:\n        this.initDetailRadarChart();\n        break;\n      default:\n        console.error('No use case selected for radar score. Radar is not displayed');\n    }\n  }\n\n  public onClick(evt){\n    var point: any = this.radarChart.getElementAtEvent(evt);\n    if(point.length > 0 && this.useCase === RadarUseCase.crit_user_score_details){\n      let idx = point[0]._index;\n      let game = this.rawData[idx];\n      this.navigationService.updateGame(game);\n      this.router.navigate([`/home/details`, game.index]);\n    }\n  }\n\n  public initDetailRadarChart(){\n    let labelArr = this.rawData.map(x => x.name);\n    let userScoreArr = this.rawData.map(x => x.userScore);\n    let criticScoreArr = this.rawData.map(x => x.criticScore);\n\n    let labelColorArr = [];\n    this.rawData.forEach(game => {\n      if(game === this.highlight){\n        labelColorArr.push(\"black\")\n      }else{\n        labelColorArr.push(\"gray\")\n      }\n    });\n\n    let criticColorArr = [];\n    this.rawData.forEach(game => {\n      if(game === this.highlight){\n        criticColorArr.push(\"red\")\n      }else{\n        criticColorArr.push(\"rgba(17,255,0,1)\")\n      }\n    });\n\n    let userColorArr = [];\n    this.rawData.forEach(game => {\n      if(game === this.highlight){\n        userColorArr.push(\"red\")\n      }else{\n        userColorArr.push(\"rgba(0,164,255,1)\")\n      }\n    });\n\n\n    let radarData = {\n      labels: labelArr,\n      datasets: [\n        {\n          label: 'Critic Score',\n          data: criticScoreArr,\n          backgroundColor: \"rgba(17,255,0,0.1)\",\n          borderColor: \"rgba(17,255,0,0.5)\",\n          pointBackgroundColor: criticColorArr\n        },\n        {\n          label: 'User Score',\n          data: userScoreArr,\n          backgroundColor: \"rgba(0,164,255,0.1)\",\n          borderColor: \"rgba(0,164,255,0.5)\",\n          pointBackgroundColor: userColorArr,\n        }\n      ]\n    }\n    if(this.radarChart) this.radarChart.destroy();\n    this.radarChart = new Chart(this.randomId, {\n      type: 'radar',\n      data: radarData,\n      options: {\n        tooltips:{\n          custom: (tooltip) => {\n            if (!tooltip) return;\n            // disable displaying the color box;\n            tooltip.displayColors = false;\n          },\n          callbacks: {\n            title: (item) => { \n              if(item[0].datasetIndex == 0){\n                return \"Critic Score: \" + this.rawData[item[0].index].criticScore;\n              }else{\n                return \"User Score: \" + this.rawData[item[0].index].userScore;\n              }\n            },\n            label: (item) => {\n              let multiLineArray = []\n              multiLineArray.push(\"Platform: \" + this.rawData[item.index].plattform)\n              multiLineArray.push(\"Publisher: \" + this.rawData[item.index].publisher)\n              multiLineArray.push(\"Release Year: \" + this.rawData[item.index].year)\n              multiLineArray.push(\"Genre: \" + this.rawData[item.index].genre)\n              multiLineArray.push(\"Sales: \" + this.rawData[item.index].globalSales + \" Mio\")\n              return multiLineArray;\n            }\n          }\n        },\n        spanGaps: true,\n        scale: {\n          pointLabels:{\n            fontColor: labelColorArr\n          },\n        }\n      }\n    });\n  }\n\n  public createUserCriticScoreRadar(sortOrder: SortOrder, amount: number) {\n    let userScorePerGame = {};\n    let criticScorePerGame = {};\n\n    for (let game of this.rawData) {\n      if (!userScorePerGame[game.name]) {\n        userScorePerGame[game.name] = [];\n      }\n      if (game.userScore) {\n        userScorePerGame[game.name].push(game.userScore);\n      }\n      if (!criticScorePerGame[game.name]) {\n        criticScorePerGame[game.name] = [];\n      }\n      if (game.criticScore) {\n        criticScorePerGame[game.name].push(game.criticScore);\n      }\n    }\n\n    let scoreKeys = Object.keys(userScorePerGame);\n    let avgAvailableScores = {};\n\n    for (let key of scoreKeys) {\n      if (userScorePerGame[key].length > 0 && criticScorePerGame[key].length) {\n        const userScores = userScorePerGame[key].map(Number);\n        const criticScores = criticScorePerGame[key].map(Number);\n\n        const sumUserScores = userScores.reduce((a, b) => a + b, 0);\n        const avgUserScores = (sumUserScores / userScores.length) || 0;\n\n        const sumCriticScores = criticScores.reduce((a, b) => a + b, 0);\n        const avgCriticScores = (sumCriticScores / criticScores.length) || 0;\n\n        avgAvailableScores[key] = {\n          userScore: avgUserScores,\n          criticScore: avgCriticScores,\n          avgTotalScore: (avgUserScores + avgCriticScores) / 2\n        };\n      }\n    }\n\n    let sortableAvgAvailableScores = [];\n    for (let game of Object.keys(avgAvailableScores)) {\n      sortableAvgAvailableScores.push([game, avgAvailableScores[game].avgTotalScore, avgAvailableScores[game].userScore, avgAvailableScores[game].criticScore]);\n    }\n\n    const sortedByLowestAvailScores = [...sortableAvgAvailableScores.sort(function(a, b) {\n      return a[1] - b[1];\n    })];\n\n    let sortedSlicedScores = [];\n    if (sortOrder === SortOrder.highest) {\n      sortedSlicedScores = sortedByLowestAvailScores.reverse().slice(0, amount);\n    } else {\n      sortedSlicedScores = sortedByLowestAvailScores.slice(0, amount);\n    }\n\n    let labels = sortedSlicedScores.map(scoreArr => scoreArr[0]);\n    let userScoreData = sortedSlicedScores.map(scoreArr => scoreArr[2]);\n    let criticScore = sortedSlicedScores.map(scoreArr => scoreArr[3]);\n\n    // configure radar data\n    let radarData = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'User Scores',\n          data: userScoreData,\n          backgroundColor: \"rgba(0,164,255,0.1)\",\n          borderColor: \"rgba(0,164,255,0.5)\"\n        },\n        {\n          label: 'Cirtic Scores',\n          data: criticScore,\n          backgroundColor: \"rgba(17,255,0,0.1)\",\n          borderColor: \"rgba(17,255,0,0.5)\"\n        },\n\n      ]\n    };\n\n    // configure radar options\n    let radarOptions = {\n      scale: {\n        angleLines: {\n          display: false\n        }\n      }\n    };\n\n    console.log(\"random id\", this.randomId);\n    this.radarChart = new Chart(this.randomId, {\n      type: 'radar',\n      data: radarData,\n      options: radarOptions\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ radarChart }}\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./radar-chart.component.css\n                \n                .canvas-wrapper {\n  width: 100%;\n  height: 100%;\n}\n\n#canvas {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ radarChart }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BarGraphComponent', 'selector': 'bar-graph'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'CoverCardComponent', 'selector': 'app-cover-card'},{'name': 'CoverCarouselComponent', 'selector': 'app-cover-carousel'},{'name': 'FaqViewComponent', 'selector': 'app-faq-view'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameDetailsComponent', 'selector': 'app-game-details'},{'name': 'GenreCarouselComponent', 'selector': 'app-genre-carousel'},{'name': 'GenrePublisherViewComponent', 'selector': 'app-genre-publisher-view'},{'name': 'GraphViewComponent', 'selector': 'app-main-view'},{'name': 'MainContentComponent', 'selector': 'app-main-content'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'PublisherCarouselComponent', 'selector': 'app-publisher-carousel'},{'name': 'RadarChartComponent', 'selector': 'app-radar-chart'},{'name': 'StackedLineGraphComponent', 'selector': 'app-stacked-line-graph'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RadarChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SharePerYearPerPublisher.html":{"url":"classes/SharePerYearPerPublisher.html","title":"class - SharePerYearPerPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SharePerYearPerPublisher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/SharePerYearPerPublisher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                publisher\n                            \n                            \n                                share\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(year: number, share: number, publisher: String)\n                    \n                \n                        \n                            \n                                Defined in src/models/SharePerYearPerPublisher.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        year\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        share\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/SharePerYearPerPublisher.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            share\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/SharePerYearPerPublisher.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/SharePerYearPerPublisher.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SharePerYearPerPublisher{\n    constructor(year:number, share:number, publisher:String){\n        this.year = year;\n        this.share = share;\n        this.publisher = publisher;\n    }\n\n    year: number;\n    share: number;\n    publisher: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StaticCarousel.html":{"url":"interfaces/StaticCarousel.html","title":"interface - StaticCarousel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StaticCarousel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/main-content/graph-view/genre-carousel/genre-carousel.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         CoverCarousel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoverCarousel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {DataService} from '../../../services/DataService';\nimport {CoverCarousel} from '../../../../models/CoverCarousel';\n\nexport interface StaticCarousel {\n  title: string,\n  data : CoverCarousel[]\n}\n\n@Component({\n  selector: 'app-genre-carousel',\n  templateUrl: './genre-carousel.component.html',\n  styleUrls: ['./genre-carousel.component.css']\n})\nexport class GenreCarouselComponent implements OnInit {\n  data: CoverCarousel[] = [];\n  staticCarousels: StaticCarousel[] = [];\n\n  constructor(public dataService: DataService) {\n  }\n\n  ngOnInit(): void {\n    this.dataService.liveCarousel$.subscribe(data => {\n      this.data = data;\n    });\n\n    //gets called if dataservice is ready\n    this.dataService.onReady$.subscribe(ready => {\n      if (ready) {\n        this.dataService.updateCoverCarousel('Racing', null, 1970, 2019, 7);\n        this.calculateStaticCarouselData(this.dataService.getGenres());\n      }\n    });\n  }\n\n  trackByFn(index) {\n    return index;\n  }\n\n  calculateStaticCarouselData(cards: string[]) {\n    for (let card of cards) {\n      this.dataService.getCoverCarousel(card,null,1980,2019, 7).then(data => {\n        this.staticCarousels.push({title: card, data: data});\n      })\n\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/main-content/faq-view/faq-view.component.ts\n            \n            component\n            FaqViewComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/main-content/game-details/game-details.component.ts\n            \n            component\n            GameDetailsComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/main-content/graph-view/genre-carousel/genre-carousel.component.ts\n            \n            component\n            GenreCarouselComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/main-content/graph-view/genre-carousel/genre-carousel.component.ts\n            \n            interface\n            StaticCarousel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/main-content/graph-view/genre-publisher-view/genre-publisher-view.component.ts\n            \n            component\n            GenrePublisherViewComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/main-content/graph-view/graph-view.component.ts\n            \n            component\n            GraphViewComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/main-content/graph-view/publisher-carousel/publisher-carousel.component.ts\n            \n            component\n            PublisherCarouselComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/main-content/graph-view/stacked-line-graph/stacked-line-graph.component.ts\n            \n            component\n            StackedLineGraphComponent\n            \n                2 %\n                (1/45)\n            \n        \n        \n            \n                \n                src/app/main-content/main-content.component.ts\n            \n            component\n            MainContentComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/DataService.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/DataService.ts\n            \n            interface\n            CoverCarouselStore\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/DataService.ts\n            \n            interface\n            MarketShareForGenrePerYearStore\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/interaction.service.ts\n            \n            injectable\n            InteractionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/navigate.service.ts\n            \n            injectable\n            NavigationService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/shared/bargraph/bargraph.component.ts\n            \n            component\n            BarGraphComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/shared/breadcrumb/breadcrumb.component.ts\n            \n            component\n            BreadcrumbComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/breadcrumb/breadcrumb.component.ts\n            \n            interface\n            Breadcrumb\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/cover-carousel/cover-card/cover-card.component.ts\n            \n            component\n            CoverCardComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/cover-carousel/cover-carousel.component.ts\n            \n            component\n            CoverCarouselComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/pie-chart/pie-chart.component.ts\n            \n            component\n            PieChartComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/radar-chart/radar-chart.component.ts\n            \n            component\n            RadarChartComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/CoverCarousel.ts\n            \n            class\n            CoverCarousel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/Game.ts\n            \n            class\n            Game\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/models/GenreSalesPerYear.ts\n            \n            class\n            GenreSalesPerYear\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/SharePerYearPerPublisher.ts\n            \n            class\n            SharePerYearPerPublisher\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.9\n        \n            @angular/common : ~9.1.9\n        \n            @angular/compiler : ~9.1.9\n        \n            @angular/core : ~9.1.9\n        \n            @angular/forms : ~9.1.9\n        \n            @angular/localize : ~9.1.9\n        \n            @angular/platform-browser : ~9.1.9\n        \n            @angular/platform-browser-dynamic : ~9.1.9\n        \n            @angular/router : ~9.1.9\n        \n            @ng-bootstrap/ng-bootstrap : ^6.1.0\n        \n            boostrap : ^2.0.0\n        \n            bootstrap : ^4.5.0\n        \n            chart.js : ^2.9.3\n        \n            d3 : ^5.16.0\n        \n            jquery : ^3.5.1\n        \n            ng2-charts : ^2.3.2\n        \n            ng2-tooltip-directive : ^2.9.20\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PieUseCase   (src/.../pie-chart.component.ts)\n                        \n                        \n                            RadarUseCase   (src/.../radar-chart.component.ts)\n                        \n                        \n                            SortOrder   (src/.../radar-chart.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/pie-chart/pie-chart.component.ts\n    \n        \n            \n                \n                    \n                        \n                        PieUseCase\n                    \n                \n                        \n                            \n                                 details_view_sale_distribution\n                            \n                        \n                        \n                            \n                                 top100_genre_publisher\n                            \n                        \n            \n        \n\n    src/app/shared/radar-chart/radar-chart.component.ts\n    \n        \n            \n                \n                    \n                        \n                        RadarUseCase\n                    \n                \n                        \n                            \n                                 crit_user_score_highest\n                            \n                        \n                        \n                            \n                                 crit_user_score_lowest\n                            \n                        \n                        \n                            \n                                 crit_user_score_details\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 highest\n                            \n                        \n                        \n                            \n                                 lowest\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nVis2020\nThis project was generated with Angular CLI version 9.1.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Giuseppe\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBarGraphComponent\n\nBarGraphComponent\n\nAppModule -->\n\nBarGraphComponent->AppModule\n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\nAppModule -->\n\nBreadcrumbComponent->AppModule\n\n\n\n\n\nCoverCardComponent\n\nCoverCardComponent\n\nAppModule -->\n\nCoverCardComponent->AppModule\n\n\n\n\n\nCoverCarouselComponent\n\nCoverCarouselComponent\n\nAppModule -->\n\nCoverCarouselComponent->AppModule\n\n\n\n\n\nFaqViewComponent\n\nFaqViewComponent\n\nAppModule -->\n\nFaqViewComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGameDetailsComponent\n\nGameDetailsComponent\n\nAppModule -->\n\nGameDetailsComponent->AppModule\n\n\n\n\n\nGenreCarouselComponent\n\nGenreCarouselComponent\n\nAppModule -->\n\nGenreCarouselComponent->AppModule\n\n\n\nAppModule -->\n\nGenreCarouselComponent->AppModule\n\n\n\n\n\nGenrePublisherViewComponent\n\nGenrePublisherViewComponent\n\nAppModule -->\n\nGenrePublisherViewComponent->AppModule\n\n\n\n\n\nGraphViewComponent\n\nGraphViewComponent\n\nAppModule -->\n\nGraphViewComponent->AppModule\n\n\n\n\n\nMainContentComponent\n\nMainContentComponent\n\nAppModule -->\n\nMainContentComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPieChartComponent\n\nPieChartComponent\n\nAppModule -->\n\nPieChartComponent->AppModule\n\n\n\n\n\nPublisherCarouselComponent\n\nPublisherCarouselComponent\n\nAppModule -->\n\nPublisherCarouselComponent->AppModule\n\n\n\n\n\nRadarChartComponent\n\nRadarChartComponent\n\nAppModule -->\n\nRadarChartComponent->AppModule\n\n\n\n\n\nStackedLineGraphComponent\n\nStackedLineGraphComponent\n\nAppModule -->\n\nStackedLineGraphComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDataService\n\nDataService\n\nAppModule -->\n\nDataService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
